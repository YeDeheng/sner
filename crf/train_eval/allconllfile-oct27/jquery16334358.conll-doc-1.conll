O	0	6	Decode
B-PL	7	11	html
O	12	18	string
O	19	21	in
B-Fram	22	28	JQuery
I-Fram	29	35	Mobile
O	36	44	template

O	45	46	I
O	47	49	am
O	50	55	using
B-Fram	56	62	jquery
O	63	72	templates
O	73	78	which
O	79	80	I
O	81	89	populate
O	90	95	using
O	96	98	an
B-Stan	99	103	ajax
O	104	111	request
O	111	112	.

O	113	120	However
O	120	121	,
O	122	125	one
O	126	128	of
O	129	132	the
O	133	139	values
O	140	148	returned
O	149	151	is
O	152	159	encoded
B-PL	160	164	HTML
O	164	165	.

O	166	169	How
O	170	173	can
O	174	175	I
O	176	182	encode
O	183	185	it
O	185	186	?

O	187	188	I
O	189	193	have
O	194	199	tried
O	200	205	using
O	206	209	${$
B-API	210	217	.mobile
I-API	218	223	.html
O	224	225	(
O	225	229	Body
O	229	230	)
B-API	231	238	.text()
O	239	240	}
O	241	244	but
O	245	249	that
O	250	256	didn't
O	257	261	work
O	262	265	for
O	266	268	me
O	268	269	.

O	270	272	My
O	273	277	code
O	278	279	:
O	280	299	@codeSnippetRemoved

B-PL	300	304	Html
O	305	306	:
O	307	326	@codeSnippetRemoved

O	327	332	After
O	333	342	searching
O	343	346	and
O	347	356	searching
O	357	358	I
O	359	366	finally
O	367	372	found
O	373	376	the
O	377	385	solution
O	386	390	here
O	391	392	:
B-Fram	393	399	jQuery
O	400	404	tmpl
O	405	406	:
O	407	410	How
O	411	413	do
O	414	415	I
O	416	422	render
B-PL	423	427	Html
O	427	428	?

O	429	434	Using
O	435	437	{{
B-PL	438	442	html
O	443	447	Body
O	448	450	}}
O	451	453	in
O	454	456	my
O	457	465	template
O	466	472	worked
O	473	477	like
O	478	479	a
O	480	485	charm
O	485	486	.
