O	0	3	How
O	4	7	can
O	8	11	set
O	12	20	location
O	21	24	for
O	25	27	my
B-Fram	28	31	swt
O	32	36	file
O	37	43	dialog
O	43	44	?

O	45	46	I
O	47	51	have
O	52	54	an
O	55	66	application
O	67	72	where
O	73	74	i
O	75	79	want
O	80	82	to
O	83	90	display
O	91	94	swt
O	95	99	file
O	100	106	dialog
O	107	110	but
O	111	113	in
O	114	121	defined
O	122	130	location
O	131	132	(
O	132	133	i
O	134	138	want
O	139	141	it
O	142	149	display
O	150	159	somewhere
O	160	164	down
O	164	165	)
O	166	168	.I
O	169	171	am
O	172	175	not
O	176	183	getting
O	184	187	any
O	188	194	method
O	195	198	for
O	199	207	that.Any
O	208	212	help
O	213	215	on
O	216	220	this
O	221	223	is
O	224	235	appreciated
O	236	239	...

O	240	245	Isn't
B-API	246	256	FileDialog
O	257	271	#setFilterPath
O	272	273	(
O	273	274	)
O	275	279	what
O	280	283	you
O	284	287	are
O	288	295	looking
O	296	299	for
O	299	300	?

O	301	302	:

O	303	307	Sets
O	308	311	the
O	312	321	directory
O	322	326	path
O	327	331	that
O	332	335	the
O	336	342	dialog
O	343	347	will
O	348	351	use
O	352	354	to
O	355	358	the
O	359	367	argument
O	367	368	,
O	369	374	which
O	375	378	may
O	379	381	be
O	382	386	null
O	386	387	.

O	388	392	File
O	393	398	names
O	399	401	in
O	402	406	this
O	407	411	path
O	412	416	will
O	417	423	appear
O	424	426	in
O	427	430	the
O	431	437	dialog
O	437	438	,
O	439	447	filtered
O	448	457	according
O	458	460	to
O	461	464	the
O	465	471	filter
O	472	482	extensions
O	482	483	.

O	484	486	If
O	487	490	the
O	491	497	string
O	498	500	is
O	501	505	null
O	505	506	,
O	507	511	then
O	512	515	the
O	516	525	operating
O	526	532	system
O	533	534	'
O	535	536	s
O	537	544	default
O	545	551	filter
O	552	556	path
O	557	561	will
O	562	564	be
O	565	569	used
O	569	570	.

O	571	580	Currently
O	581	584	the
O	585	588	API
O	589	596	doesn't
O	597	604	support
O	605	607	to
O	608	611	set
O	612	615	the
O	616	624	location
O	625	627	of
O	628	631	the
B-API	632	642	FileDialog
O	643	647	.But
O	648	653	there
O	654	656	is
O	657	658	a
O	659	665	little
O	666	670	hack
O	671	672	/
O	673	683	workaround
O	684	687	for
O	688	692	that
O	692	693	.

O	694	697	All
O	698	701	you
O	702	706	need
O	707	709	is
O	710	712	to
O	713	719	create
O	720	722	an
O	723	732	invisible
B-API	733	738	Shell
O	739	742	and
O	743	746	set
O	747	750	the
O	751	759	location
O	759	760	.

O	761	764	The
B-API	765	775	FileDialog
O	776	783	decides
O	784	787	its
O	788	796	location
O	797	802	based
O	803	805	on
O	806	809	the
O	810	816	parent
O	816	817	.

O	818	820	It
O	821	826	seems
O	827	828	a
O	829	832	bit
O	833	840	complex
O	841	843	to
O	844	848	know
O	849	852	the
O	853	858	exact
O	859	870	coordinates
O	871	873	to
B-API	874	885	setLocation
O	886	888	on
B-API	889	894	Shell
O	895	898	but
O	898	899	,
O	900	901	I
O	902	907	leave
O	908	910	it
O	911	913	to
O	914	917	you
O	918	920	to
O	921	923	do
O	924	928	some
O	929	941	Permutations
O	942	945	and
O	946	958	Combinations
O	959	961	to
O	962	966	know
O	967	971	them
O	971	972	.

O	973	977	Here
O	978	980	is
O	981	984	the
O	985	989	code
O	990	995	which
O	996	1002	solves
O	1003	1007	your
O	1008	1015	problem
O	1016	1035	@codeSnippetRemoved

O	1036	1040	When
O	1041	1048	showing
O	1049	1052	the
B-API	1053	1063	FileDialog
O	1064	1066	on
O	1067	1070	top
O	1071	1073	of
O	1074	1075	a
B-API	1076	1081	shell
O	1081	1082	,
O	1083	1086	you
O	1087	1090	may
O	1091	1095	open
O	1096	1099	the
O	1100	1104	file
O	1105	1111	dialog
O	1111	1112	,
O	1113	1117	then
O	1118	1121	get
O	1122	1125	the
O	1126	1132	parent
B-API	1133	1138	shell
O	1139	1140	'
O	1141	1142	s
O	1143	1153	sub-shells
O	1154	1155	(
B-API	1155	1172	shell.getShells()
O	1172	1173	)
O	1174	1176	to
O	1177	1181	find
O	1182	1185	out
O	1186	1189	the
O	1190	1194	file
O	1195	1201	dialog
O	1202	1203	'
O	1204	1205	s
B-API	1206	1211	shell
O	1211	1212	.

O	1213	1216	Now
O	1217	1220	you
O	1221	1227	should
O	1228	1230	be
O	1231	1235	able
O	1236	1238	to
O	1239	1245	change
O	1246	1249	its
O	1250	1258	location
O	1258	1259	.
