B-API	0	9	Messenger
O	10	12	to
O	13	19	Remote
O	20	27	Service
O	28	35	Causing
O	36	42	Memory
O	43	47	Leak

O	48	49	I
O	50	54	have
O	55	57	an
O	58	69	application
O	70	74	that
O	75	87	communicates
O	88	92	with
O	93	94	a
O	95	102	Service
O	103	105	in
O	106	107	a
O	108	114	remote
O	115	122	process
O	123	128	using
O	129	132	the
B-API	133	142	Messenger
O	143	152	interface
O	152	153	.

O	154	158	Here
O	159	161	is
O	162	165	the
O	166	171	basic
O	172	184	architecture
O	185	187	of
O	188	191	how
O	192	198	things
O	199	202	are
O	203	206	set
O	207	209	up
O	210	211	:

O	212	215	The
O	216	227	application
O	228	237	generates
O	238	245	several
O	246	247	"
O	247	256	Operation
O	256	257	"
O	258	265	objects
O	266	270	that
O	271	278	require
O	279	285	access
O	286	288	to
O	289	292	the
O	293	300	service
O	300	301	.

O	302	306	Each
O	307	308	"
O	308	317	Operation
O	317	318	"
O	319	327	contains
O	328	329	a
O	330	337	Handler
O	338	345	wrapped
O	346	348	in
O	349	350	a
B-API	351	360	Messenger
O	361	365	used
O	366	368	to
O	369	376	receive
O	377	380	the
O	381	389	response
O	390	394	data
O	395	399	back
O	400	404	from
O	405	408	the
O	409	416	Service
O	417	421	When
O	422	425	the
O	426	435	operation
O	436	444	executes
O	444	445	,
O	446	448	it
O	449	454	wraps
O	455	458	its
B-API	459	468	Messenger
O	469	473	into
O	474	476	an
O	477	483	Intent
O	484	487	and
O	488	493	calls
B-API	494	508	startService()
O	509	511	to
O	512	516	pass
O	517	520	the
O	521	528	message
O	529	531	to
O	532	535	the
O	536	542	remote
O	543	550	service
O	551	554	The
O	555	561	remote
O	562	569	service
O	570	574	does
O	575	579	some
O	580	584	work
O	585	590	based
O	591	593	on
O	594	597	the
O	598	608	parameters
O	609	611	of
O	612	615	the
B-API	616	622	Intent
O	623	626	and
O	627	631	then
O	632	639	returns
O	640	643	the
O	644	652	response
O	653	655	by
O	656	663	sending
O	664	665	a
O	666	673	Message
O	674	676	to
O	677	680	the
B-API	681	690	Messenger
O	691	694	for
O	695	699	that
O	700	709	operation
O	709	710	.

O	711	715	Here
O	716	718	is
O	719	722	the
O	723	728	basic
O	729	733	code
O	734	741	present
O	742	744	in
O	745	748	the
O	749	758	operation
O	759	760	:
O	761	780	@codeSnippetRemoved

O	781	784	And
O	785	786	a
O	787	794	snippet
O	795	797	of
O	798	801	how
O	802	805	the
O	806	813	Service
O	814	816	is
O	817	827	structured
O	828	829	(
O	829	831	it
O	832	833	'
O	834	835	s
O	836	845	basically
O	846	848	an
B-API	849	862	IntentService
O	863	867	that
O	868	875	doesn't
O	876	880	shut
O	881	885	down
O	886	890	when
O	891	894	the
O	895	900	queue
O	901	903	is
O	904	909	empty
O	910	912	):
O	913	932	@codeSnippetRemoved

O	933	937	This
O	938	941	all
O	942	947	works
O	948	961	fantastically
O	962	966	well
O	966	967	.

O	968	969	I
O	970	973	can
O	974	978	send
O	979	983	tons
O	984	986	of
O	987	997	operations
O	998	1002	from
O	1003	1010	several
O	1011	1020	different
O	1021	1033	applications
O	1034	1036	to
O	1037	1040	the
O	1041	1045	same
O	1046	1053	service
O	1054	1057	and
O	1058	1062	they
O	1063	1066	all
O	1067	1074	process
O	1075	1078	and
O	1079	1083	send
O	1084	1089	their
O	1090	1098	response
O	1099	1101	to
O	1102	1106	just
O	1107	1110	the
O	1111	1116	right
O	1117	1122	place
O	1122	1123	.

O	1124	1131	However
O	1132	1135	...

O	1136	1137	I
O	1138	1145	noticed
O	1146	1150	that
O	1151	1153	if
O	1154	1157	the
O	1158	1169	application
O	1170	1173	ran
O	1174	1178	long
O	1179	1185	enough
O	1186	1189	and
O	1190	1194	with
O	1195	1201	enough
O	1202	1210	activity
O	1211	1213	it
O	1214	1219	would
O	1220	1225	crash
O	1226	1230	with
O	1231	1233	an
B-API	1234	1250	OutOfMemoryError
O	1250	1251	.

O	1252	1256	Upon
O	1257	1264	looking
O	1265	1267	at
O	1268	1271	the
B-Fram	1272	1277	HPROF
O	1278	1282	data
O	1283	1285	in
B-Fram	1286	1289	MAT
O	1289	1290	,
O	1291	1292	I
O	1293	1300	noticed
O	1301	1305	that
O	1306	1309	all
O	1310	1315	these
O	1316	1326	operations
O	1327	1332	where
O	1333	1340	staying
O	1341	1343	in
O	1344	1350	memory
O	1350	1351	,
O	1352	1355	and
O	1356	1360	they
O	1361	1365	were
O	1366	1370	held
O	1371	1378	hostage
O	1379	1383	from
O	1384	1387	the
O	1388	1395	Garbage
O	1396	1405	Collector
O	1406	1413	because
O	1414	1416	of
O	1417	1420	the
B-API	1421	1430	Messenger
O	1430	1431	.

O	1432	1442	Apparently
O	1442	1443	,
O	1444	1447	the
B-API	1448	1457	Messenger
O	1458	1466	instance
O	1467	1469	is
O	1470	1478	creating
O	1479	1480	a
O	1481	1490	long-term
O	1491	1497	native
O	1498	1508	connection
O	1509	1511	to
B-API	1512	1518	Binder
O	1519	1523	that
O	1524	1530	counts
O	1531	1533	as
O	1534	1535	a
O	1536	1538	GC
O	1539	1543	Root
O	1543	1544	,
O	1545	1550	which
O	1551	1553	is
O	1554	1561	keeping
O	1562	1566	each
O	1567	1568	"
O	1568	1577	Operation
O	1577	1578	"
O	1579	1585	object
O	1586	1588	in
O	1589	1595	memory
O	1596	1608	indefinitely
O	1608	1609	.

O	1610	1614	Does
O	1615	1621	anyone
O	1622	1626	know
O	1627	1629	if
O	1630	1635	there
O	1636	1638	is
O	1639	1640	a
O	1641	1644	way
O	1645	1647	to
O	1648	1653	clear
O	1654	1656	or
O	1657	1664	disable
O	1665	1668	the
O	1669	1678	Messenger
O	1679	1683	when
O	1684	1687	the
O	1688	1689	"
O	1689	1698	Operation
O	1698	1699	"
O	1700	1702	is
O	1703	1707	over
O	1708	1710	so
O	1711	1713	it
O	1714	1721	doesn't
O	1722	1728	create
O	1729	1733	this
O	1734	1740	memory
O	1741	1745	leak
O	1745	1746	?

O	1747	1749	Is
O	1750	1755	there
O	1756	1763	perhaps
O	1764	1771	another
O	1772	1775	way
O	1776	1778	to
O	1779	1788	implement
O	1789	1792	the
B-Stan	1793	1796	IPC
O	1797	1799	to
O	1800	1803	the
O	1804	1811	Service
O	1812	1814	in
O	1815	1818	the
O	1819	1823	same
O	1824	1831	fashion
O	1831	1832	,
O	1833	1835	so
O	1836	1840	that
O	1841	1849	multiple
O	1850	1859	disparate
O	1860	1867	objects
O	1868	1871	can
O	1872	1876	make
O	1877	1878	a
O	1879	1886	request
O	1887	1890	and
O	1891	1894	get
O	1895	1896	a
O	1897	1903	result
O	1904	1918	asynchronously
O	1918	1919	?

O	1920	1926	Thanks
O	1927	1929	in
O	1930	1937	advance
O	1937	1938	!

O	1939	1940	I
O	1941	1943	am
O	1944	1947	not
O	1948	1952	sure
O	1953	1955	if
O	1956	1960	this
O	1961	1963	is
O	1964	1967	the
O	1968	1972	best
O	1973	1976	way
O	1977	1982	since
O	1982	1983	,
O	1984	1988	even
O	1989	1991	if
O	1992	2000	Activity
O	2001	2003	is
O	2004	2006	in
O	2007	2010	the
O	2011	2021	background
O	2022	2025	you
O	2026	2030	will
O	2031	2034	get
O	2035	2038	the
O	2039	2046	message
O	2047	2051	from
O	2052	2059	Service
O	2059	2060	.

O	2061	2062	I
O	2063	2068	think
O	2069	2072	you
O	2073	2079	should
O	2080	2084	bind
O	2085	2087	to
O	2088	2091	the
O	2092	2099	service
O	2100	2103	and
O	2104	2112	register
O	2113	2114	a
B-API	2115	2124	messenger
O	2125	2127	to
O	2128	2131	the
O	2132	2139	service
O	2140	2142	as
O	2143	2147	soon
O	2148	2150	as
O	2151	2158	Service
O	2159	2161	is
O	2162	2171	connected
O	2171	2172	.

O	2173	2176	And
O	2177	2181	then
O	2182	2192	unregister
O	2193	2196	the
B-API	2197	2206	messenger
O	2207	2211	when
O	2212	2215	you
O	2216	2226	disconnect
O	2226	2227	.

O	2228	2233	Check
B-API	2234	2253	ExportVcardActivity
O	2254	2256	in
B-Fram	2257	2261	AOSP
O	2261	2262	.

O	2263	2265	It
O	2266	2268	is
O	2269	2278	following
O	2279	2288	something
O	2289	2294	along
O	2295	2300	these
O	2301	2306	lines
O	2306	2307	.

O	2308	2313	Looks
O	2314	2318	like
O	2319	2322	you
O	2323	2331	starting
O	2332	2333	a
O	2334	2337	lot
O	2338	2340	of
O	2341	2349	services
O	2350	2357	instead
O	2358	2360	of
O	2361	2368	binding
O	2369	2371	to
O	2372	2381	currently
O	2382	2389	running
O	2389	2390	.

O	2391	2393	It
O	2394	2396	is
O	2397	2406	difficult
O	2407	2409	to
O	2410	2415	judge
O	2416	2420	from
O	2421	2425	your
O	2426	2432	quotes
O	2432	2433	,
O	2434	2437	but
O	2438	2439	I
O	2440	2443	can
O	2444	2451	suppose
O	2452	2454	it
O	2455	2459	from
B-API	2460	2480	context.startService
O	2481	2482	(
O	2482	2495	serviceIntent
O	2496	2498	);
O	2499	2503	That
O	2504	2509	could
O	2510	2512	be
O	2513	2516	the
O	2517	2523	reason
O	2524	2526	of
O	2527	2533	memory
O	2534	2543	leak.IMHO
O	2544	2547	you
O	2548	2554	should
O	2555	2559	read
O	2560	2569	carefully
O	2570	2575	Bound
O	2576	2584	Services
O	2585	2587	to
O	2588	2593	check
O	2594	2597	you
O	2598	2602	code
O	2602	2603	.

O	2604	2610	Thanks
O	2611	2613	to
O	2614	2618	some
O	2619	2623	very
O	2624	2631	helpful
O	2632	2639	insight
O	2640	2644	from
O	2645	2651	Dianne
O	2652	2660	Hackborn
O	2661	2663	on
O	2664	2667	the
B-Plat	2668	2675	Android
O	2676	2680	team
O	2680	2681	,
O	2682	2685	the
O	2686	2691	issue
O	2692	2694	is
O	2695	2702	because
O	2703	2706	the
O	2707	2713	remote
O	2714	2721	service
O	2722	2729	process
O	2730	2733	has
O	2734	2737	not
O	2738	2741	yet
O	2742	2749	Garbage
O	2750	2759	Collected
O	2760	2762	it
O	2763	2764	'
O	2765	2766	s
O	2767	2775	instance
O	2776	2778	of
O	2779	2782	the
O	2783	2792	Messenger
O	2793	2798	which
O	2798	2799	,
O	2800	2802	in
O	2803	2809	effect
O	2809	2810	,
O	2811	2815	held
O	2816	2819	the
O	2820	2829	instances
O	2830	2832	in
O	2833	2836	the
O	2837	2848	application
O	2849	2850	'
O	2851	2852	s
O	2853	2860	process
O	2861	2868	hostage
O	2869	2874	until
O	2875	2879	that
O	2880	2884	time
O	2884	2885	.

O	2886	2890	This
O	2891	2893	is
O	2894	2897	the
O	2898	2902	text
O	2903	2905	of
O	2906	2909	her
O	2910	2915	reply
O	2916	2917	:

O	2918	2920	It
O	2921	2923	is
O	2924	2928	true
O	2929	2933	that
O	2934	2941	sending
O	2942	2943	a
O	2944	2953	messenger
O	2954	2960	across
O	2961	2970	processes
O	2971	2975	will
O	2976	2983	require
O	2984	2991	holding
O	2992	2993	a
O	2994	2998	GREF
O	2999	3001	on
O	3002	3004	it
O	3005	3008	for
O	3009	3012	the
O	3013	3018	other
O	3019	3026	process
O	3027	3029	to
O	3030	3041	communicate
O	3042	3046	with
O	3047	3049	it
O	3049	3050	.

O	3051	3058	Barring
O	3059	3063	bugs
O	3064	3065	(
O	3065	3070	which
O	3071	3075	have
O	3076	3084	happened
O	3085	3088	but
O	3089	3090	I
O	3091	3093	am
O	3094	3097	not
O	3098	3102	sure
O	3103	3105	if
O	3106	3108	in
O	3109	3112	any
O	3113	3121	released
O	3122	3130	platform
O	3131	3139	versions
O	3139	3140	)
O	3140	3141	,
O	3142	3145	the
O	3146	3150	GREF
O	3151	3155	will
O	3156	3158	be
O	3159	3167	released
O	3168	3172	when
O	3173	3176	the
O	3177	3182	other
O	3183	3190	process
O	3191	3197	itself
O	3198	3200	no
O	3201	3207	longer
O	3208	3213	holds
O	3214	3215	a
O	3216	3225	reference
O	3226	3228	on
O	3229	3233	this
O	3233	3234	.

O	3235	3239	When
O	3240	3242	we
O	3243	3246	are
O	3247	3254	talking
O	3255	3260	about
O	3261	3267	things
O	3268	3270	in
O	3271	3277	Dalvik
O	3278	3279	"
O	3279	3281	no
O	3282	3288	longer
O	3289	3294	holds
O	3295	3296	a
O	3297	3306	reference
O	3306	3307	"
O	3308	3317	generally
O	3318	3323	means
O	3324	3325	"
O	3325	3328	the
O	3329	3334	other
O	3335	3339	side
O	3340	3343	has
O	3344	3351	garbage
O	3352	3361	collected
O	3362	3365	the
B-API	3366	3370	Java
I-API	3371	3376	proxy
O	3377	3383	object
O	3383	3384	.

O	3385	3386	"
O	3386	3390	What
O	3391	3395	this
O	3396	3401	means
O	3402	3404	is
O	3405	3409	that
O	3410	3414	when
O	3415	3418	you
O	3419	3424	throw
O	3425	3426	a
B-API	3427	3436	Messenger
O	3437	3438	(
O	3438	3440	or
O	3441	3444	any
B-API	3445	3452	IBinder
O	3453	3459	object
O	3459	3460	)
O	3461	3467	across
O	3468	3470	to
O	3471	3478	another
O	3479	3486	process
O	3486	3487	,
O	3488	3491	the
O	3492	3498	Dalvik
O	3499	3501	VM
O	3502	3504	in
O	3505	3509	your
O	3510	3513	own
O	3514	3521	process
O	3522	3525	can
O	3526	3528	no
O	3529	3535	longer
O	3536	3542	manage
O	3543	3546	the
O	3547	3553	memory
O	3554	3556	of
O	3557	3561	that
O	3562	3568	object
O	3569	3575	itself
O	3576	3579	and
O	3580	3582	is
O	3583	3592	dependent
O	3593	3595	on
O	3596	3599	all
O	3600	3606	remote
O	3607	3614	objects
O	3615	3624	releasing
O	3625	3627	it
O	3628	3633	until
O	3634	3636	it
O	3637	3640	can
O	3641	3643	be
O	3644	3652	released
O	3653	3660	locally
O	3660	3661	.

O	3662	3665	And
O	3666	3670	this
O	3671	3675	will
O	3676	3683	include
O	3684	3687	all
O	3688	3695	objects
O	3696	3700	that
O	3701	3704	the
B-API	3705	3712	IBinder
O	3713	3716	has
O	3717	3720	any
O	3721	3731	references
O	3732	3734	to
O	3735	3737	as
O	3738	3742	well
O	3742	3743	.

O	3744	3745	A
O	3746	3752	common
O	3753	3760	pattern
O	3761	3763	to
O	3764	3768	deal
O	3769	3773	with
O	3774	3778	this
O	3779	3781	is
O	3782	3784	to
O	3785	3788	use
O	3789	3790	a
B-API	3791	3804	WeakReference
O	3805	3807	in
O	3808	3812	your
B-API	3813	3820	IBinder
O	3821	3822	/
B-API	3823	3832	Messenger
O	3833	3837	that
O	3838	3843	holds
O	3844	3847	the
O	3848	3858	references
O	3859	3861	to
O	3862	3865	the
O	3866	3870	rest
O	3871	3873	of
O	3874	3878	your
O	3879	3886	objects
O	3887	3891	that
O	3892	3894	it
O	3895	3899	will
O	3900	3906	access
O	3906	3907	.

O	3908	3912	This
O	3913	3919	allows
O	3920	3924	your
O	3925	3930	local
O	3931	3938	garbage
O	3939	3948	collector
O	3949	3951	to
O	3952	3957	clean
O	3958	3960	up
O	3961	3964	all
O	3965	3967	of
O	3968	3973	those
O	3974	3979	other
O	3980	3987	objects
O	3988	3989	(
O	3989	3994	which
O	3995	3998	may
O	3999	4001	be
O	4002	4007	quite
O	4008	4013	heavy
O	4013	4014	,
O	4015	4022	holding
O	4023	4026	big
O	4027	4033	things
O	4034	4038	like
O	4039	4046	bitmaps
O	4047	4050	and
O	4051	4055	such
O	4055	4056	)
O	4057	4061	even
O	4062	4068	though
O	4069	4070	a
O	4071	4077	remote
O	4078	4085	process
O	4086	4091	still
O	4092	4095	has
O	4096	4097	a
O	4098	4107	reference
O	4108	4110	on
O	4111	4115	your
B-API	4116	4123	IBinder
O	4123	4124	.

O	4125	4127	Of
O	4128	4134	course
O	4135	4137	if
O	4138	4141	you
O	4142	4144	do
O	4145	4149	this
O	4149	4150	,
O	4151	4156	there
O	4157	4162	needs
O	4163	4165	to
O	4166	4168	be
O	4169	4178	something
O	4179	4183	else
O	4184	4191	holding
O	4192	4193	a
O	4194	4203	reference
O	4204	4206	on
O	4207	4212	these
O	4213	4218	other
O	4219	4226	objects
O	4227	4232	until
O	4233	4237	they
O	4238	4241	are
O	4242	4244	no
O	4245	4251	longer
O	4252	4258	needed
O	4258	4259	,
O	4260	4262	or
O	4263	4267	else
O	4268	4271	the
O	4272	4279	garbage
O	4280	4289	collector
O	4290	4295	could
O	4296	4301	clean
O	4302	4306	them
O	4307	4309	up
O	4310	4316	before
O	4317	4321	they
O	4322	4325	are
O	4326	4328	no
O	4329	4335	longer
O	4336	4342	needed
O	4342	4343	.

O	4344	4353	Something
O	4354	4358	else
O	4359	4360	I
O	4361	4366	would
O	4367	4376	recommend
O	4377	4379	is
O	4380	4382	to
O	4383	4386	not
O	4387	4389	do
O	4390	4391	a
O	4392	4398	design
O	4399	4404	where
O	4405	4408	you
O	4409	4420	instantiate
O	4421	4430	Messenger
O	4431	4438	objects
O	4439	4442	for
O	4443	4447	each
B-Stan	4448	4451	IPC
O	4452	4455	you
O	4456	4458	do
O	4458	4459	.

O	4460	4466	Create
O	4467	4470	one
B-API	4471	4480	Messenger
O	4481	4485	that
O	4486	4489	you
O	4490	4494	pass
O	4495	4497	in
O	4498	4500	to
O	4501	4505	each
B-Stan	4506	4509	IPC
O	4510	4514	call
O	4514	4515	.

O	4516	4525	Otherwise
O	4526	4529	you
O	4530	4533	can
O	4534	4542	generate
O	4543	4544	a
O	4545	4548	lot
O	4549	4551	of
O	4552	4559	remoted
O	4560	4567	objects
O	4568	4572	that
O	4573	4576	are
O	4577	4582	being
O	4583	4587	kept
O	4588	4594	around
O	4595	4598	due
O	4599	4601	to
O	4602	4607	other
O	4608	4617	processes
O	4618	4628	continuing
O	4629	4631	to
O	4632	4636	hold
O	4637	4647	references
O	4648	4655	because
O	4656	4659	the
O	4660	4665	other
O	4666	4670	side
O	4671	4673	is
O	4674	4677	not
O	4678	4690	aggressively
O	4691	4698	garbage
O	4699	4709	collecting
O	4710	4715	since
O	4716	4719	all
O	4720	4723	the
O	4724	4731	objects
O	4732	4734	it
O	4735	4737	is
O	4738	4746	creating
O	4747	4750	due
O	4751	4753	to
O	4754	4759	these
O	4760	4765	calls
O	4766	4769	are
O	4770	4775	small
O	4775	4776	.

O	4777	4781	More
O	4782	4786	Info
O	4787	4788	:
O	4789	4864	https://groups.google.com/d/msg/android-developers/aK2o1W2xrMU/Z0-QujnU3wUJ

O	0	4	Even
O	5	11	though
O	12	14	it
O	15	20	looks
O	21	25	like
O	26	29	you
O	30	33	are
O	34	42	stopping
O	43	46	the
O	47	54	service
O	55	64	correctly
O	64	65	.

O	66	95	-----------------------------
O	96	100	EDIT
O	101	207	----------------------------------------------------------------------------------------------------------
O	208	212	Your
O	213	220	service
O	221	226	might
O	227	231	also
O	232	234	be
O	235	240	bound
O	241	243	to
O	244	248	your
O	249	257	activity
O	258	261	too
O	261	262	.

O	263	265	If
O	266	269	you
O	270	273	are
O	274	279	doing
O	280	284	this
O	284	285	,
O	286	289	you
O	290	294	need
O	295	297	to
O	298	305	release
O	306	309	the
O	310	317	binding
O	317	318	.

O	319	323	Here
O	324	325	'
O	326	327	s
O	328	329	a
O	330	334	link
O	335	338	for
O	339	340	a
O	341	348	similar
O	349	357	question
O	358	359	:

O	360	361	I
O	362	366	hope
O	367	371	this
O	372	377	helps
O	378	381	you
O	381	382	!

O	383	389	Cheers

O	390	396	Solved
O	396	397	,
O	398	400	in
O	401	403	my
O	404	411	Service
O	412	413	'
O	414	415	s
B-API	416	427	onDestroy()
O	428	429	i
O	430	433	had
O	434	436	to
O	437	441	stop
O	442	445	the
O	446	451	timer
O	452	456	task
O	457	460	and
O	461	464	the
O	465	472	service
O	473	477	then
O	478	484	closed
O	485	488	...

O	0	10	Displaying
O	11	16	Image
O	17	19	in
B-Plat	20	27	Android

O	28	29	I
O	30	33	put
O	34	37	the
O	38	46	must.jpg
O	47	49	in
O	50	63	drawable-hdpi
O	64	70	folder
O	71	74	and
O	75	82	created
O	83	87	this
O	88	94	method
O	94	95	.

O	96	115	@codeSnippetRemoved

O	116	117	I
O	118	122	want
O	123	125	to
O	126	133	display
O	134	139	image
O	140	142	on
O	143	146	the
O	147	153	screen
O	154	156	by
O	157	164	calling
O	165	169	this
O	170	176	method
O	177	179	in
O	180	192	mainActivity
O	193	212	@codeSnippetRemoved

O	213	216	But
O	217	221	when
O	222	223	I
O	224	230	launch
O	231	234	app
O	235	237	it
O	238	245	crashes
O	245	246	.

O	247	248	I
O	249	253	will
O	254	264	appreciate
O	265	268	any
O	269	273	help
O	273	274	.

O	275	292	activity_main.xml
O	293	312	@codeSnippetRemoved

B-Fram	313	319	LogCat
O	320	321	:
O	322	341	@codeSnippetRemoved

O	342	345	One
O	346	353	problem
O	354	356	is
O	357	361	that
O	362	365	the
B-Plat	366	373	Android
O	374	380	device
O	381	385	will
O	386	390	most
O	391	397	likely
O	398	401	not
O	402	406	have
O	407	408	a
O	409	418	directory
O	419	424	named
O	425	426	/
O	427	437	BakuMovies
O	438	439	/
O	440	443	res
O	444	445	/
O	446	459	drawable-hdpi
O	459	460	.

O	461	465	This
O	466	468	is
O	469	472	the
O	473	482	directory
O	483	492	structure
O	493	495	of
O	496	500	your
O	501	512	development
O	513	524	environment
O	525	528	and
O	529	531	is
O	532	535	not
O	536	544	directly
O	545	556	transferred
O	557	559	to
O	560	563	the
O	564	570	device
O	570	571	.

O	572	577	Other
O	578	582	than
O	583	587	that
O	587	588	,
O	589	590	I
O	591	597	cannot
O	598	602	give
O	603	610	without
O	611	618	knowing
O	619	623	what
O	624	627	you
O	628	631	are
O	632	638	trying
O	639	641	to
O	642	644	do
O	644	645	.

O	646	650	Edit
O	651	652	:

O	653	657	Note
O	658	662	that
O	663	666	all
O	667	670	the
O	671	680	resources
O	681	683	in
O	684	688	your
O	689	692	res
O	693	702	directory
O	703	706	are
O	707	715	included
O	716	718	in
O	719	723	your
O	724	727	app
O	728	729	'
O	730	731	s
B-Stan	732	736	.APK
O	737	741	file
O	741	742	.

O	743	747	They
O	748	751	are
O	752	755	not
O	756	762	loaded
O	763	765	to
O	766	769	the
O	770	776	device
O	777	779	as
O	780	790	individual
O	791	796	files
O	796	797	.

O	798	800	In
O	801	806	order
O	807	809	to
O	810	816	access
O	817	826	resources
O	827	828	(
O	828	833	other
O	834	838	than
O	839	846	strings
O	846	847	)
O	848	850	in
B-PL	851	855	Java
O	856	860	code
O	860	861	,
O	862	865	you
O	866	870	need
O	871	873	to
O	874	877	use
O	878	879	a
B-API	880	889	Resources
O	890	896	object
O	896	897	.

O	898	901	You
O	902	905	get
O	906	909	one
O	910	912	by
O	913	920	calling
B-API	921	935	getResources()
O	936	938	on
O	939	941	an
B-API	942	950	Activity
O	951	957	object
O	957	958	.

O	959	963	Once
O	964	967	you
O	968	972	have
O	973	976	the
B-API	977	986	Resources
O	987	993	object
O	993	994	,
O	995	999	call
B-API	1000	1013	getDrawable()
O	1014	1016	or
B-API	1017	1040	getDrawableForDensity()
O	1041	1043	to
O	1044	1047	get
O	1048	1049	a
B-API	1050	1058	drawable
O	1059	1067	resource
O	1067	1068	.

O	1069	1072	Try
O	1073	1077	this
O	1077	1078	.

O	1079	1098	@codeSnippetRemoved

O	1099	1106	Updated

O	1107	1112	First
O	1113	1116	you
O	1117	1121	have
O	1122	1124	to
O	1125	1128	add
B-API	1129	1138	ImageView
O	1139	1141	on
O	1142	1146	your
O	1147	1160	activity_main
O	1161	1167	layout
O	1168	1171	and
O	1172	1175	set
O	1176	1179	its
O	1180	1182	id
O	1183	1185	as
O	1186	1193	android
O	1194	1195	:
O	1196	1199	id=
O	1200	1201	"
O	1201	1205	@+id
O	1206	1207	/
O	1208	1217	imageView
O	1217	1218	"
O	1218	1219	.

O	1220	1225	There
O	1226	1229	are
O	1230	1232	so
O	1233	1237	many
O	1238	1244	things
O	1245	1248	you
O	1249	1254	could
O	1255	1260	avoid
O	1261	1264	and
O	1265	1269	very
O	1270	1276	easily
O	1277	1281	load
O	1282	1285	the
O	1286	1291	image
O	1292	1295	you
O	1296	1300	want
O	1301	1305	into
O	1306	1309	the
B-API	1310	1319	ImageView
O	1319	1320	.

O	1321	1323	Do
O	1324	1333	something
O	1334	1338	like
O	1339	1343	this
O	1344	1345	:
O	1346	1347	-
O	1348	1367	@codeSnippetRemoved

O	1368	1374	Update
O	1375	1376	:
O	1377	1378	-
O	1379	1381	To
O	1382	1388	insert
O	1389	1391	an
B-API	1392	1401	ImageView
O	1402	1413	dynamically
O	1413	1414	,
O	1415	1417	do
O	1418	1422	this
O	1423	1425	in
O	1426	1430	your
B-API	1431	1441	onCreate()
O	1441	1442	.

O	1443	1462	@codeSnippetRemoved

O	1463	1466	You
O	1467	1471	used
B-API	1472	1480	drawable
O	1480	1481	.

O	1482	1485	You
O	1486	1490	call
B-API	1491	1507	setImageDrawable
O	1508	1514	method
O	1515	1518	and
O	1519	1523	than
O	1524	1527	set
O	1528	1536	resource
B-API	1537	1549	getResources
I-API	1550	1551	(
I-API	1551	1552	)
I-API	1553	1565	.getDrawable
O	1566	1569	set
O	1570	1572	id
O	1573	1584	getdrawable
O	1585	1591	method
O	1592	1596	than
O	1597	1602	image
O	1603	1607	will
O	1608	1610	be
O	1611	1618	showing
O	1618	1619	.

O	1620	1623	The
O	1624	1628	most
O	1629	1637	probable
O	1638	1643	cause
O	1644	1646	is
O	1647	1651	that
O	1652	1656	your
O	1657	1668	application
O	1669	1671	is
O	1672	1679	running
O	1680	1683	out
O	1684	1686	of
O	1687	1693	memory
O	1694	1699	while
O	1700	1706	trying
O	1707	1709	to
O	1710	1716	decode
O	1717	1720	the
O	1721	1726	image
O	1727	1729	in
O	1730	1733	the
O	1734	1738	line
O	1739	1744	below
O	1745	1764	@codeSnippetRemoved

O	1765	1769	What
O	1770	1773	are
O	1774	1777	the
O	1778	1788	dimensions
O	1789	1791	of
O	1792	1796	this
O	1797	1802	image
O	1803	1807	that
O	1808	1811	you
O	1812	1815	are
O	1816	1822	trying
O	1823	1825	to
O	1826	1830	load
O	1830	1831	?

O	1832	1834	In
O	1835	1839	your
O	1840	1848	activity
O	1849	1852	you
O	1853	1856	can
O	1857	1861	call
O	1862	1866	this
O	1867	1869	to
O	1870	1873	get
O	1874	1878	your
B-API	1879	1887	Drawable
O	1888	1896	resource
O	1897	1899	as
O	1900	1901	a
B-API	1902	1910	Drawable
O	1911	1917	object
O	1918	1921	and
O	1922	1925	set
O	1926	1929	the
O	1930	1935	image
O	1936	1938	as
O	1939	1944	below
O	1945	1946	:
O	1947	1966	@codeSnippetRemoved

O	1967	1969	OR

O	1970	1972	If
O	1973	1976	you
O	1977	1981	want
O	1982	1984	to
O	1985	1989	show
O	1990	1994	your
B-API	1995	2003	drawable
O	2004	2006	in
O	2007	2009	an
B-API	2010	2019	ImageView
O	2020	2023	you
O	2024	2027	can
O	2028	2030	do
O	2031	2035	this
O	2036	2037	:
O	2038	2057	@codeSnippetRemoved

O	2058	2060	or
O	2061	2063	in
O	2064	2068	your
B-Stan	2069	2072	xml
O	2073	2077	file
O	2078	2097	@codeSnippetRemoved

B-Fram	0	6	Google
I-Fram	7	10	map
O	11	16	route
O	17	26	direction
O	27	31	show
O	32	34	by
O	35	41	arrows
O	42	44	in
B-Plat	45	52	android
I-Plat	53	55	v2

O	56	57	I
O	58	60	am
O	61	67	trying
O	68	70	to
O	71	80	implement
B-API	81	87	google
I-API	88	91	map
I-API	92	99	markers
O	100	102	in
B-Plat	103	110	android
I-Plat	111	117	google
I-Plat	118	120	v2
O	120	121	.

O	122	123	i
O	124	127	can
O	128	132	show
B-API	133	140	markers
O	141	143	in
O	144	147	the
O	148	151	map
O	152	155	too
O	156	161	using
B-Stan	162	166	json
O	167	174	parsing
O	174	175	,
O	176	179	but
O	180	183	the
O	184	191	problem
O	192	194	im
O	195	201	facing
O	202	204	is
O	205	206	:

O	207	208	1
O	209	210	:
O	211	214	the
O	215	222	parsing
O	223	227	just
O	228	233	tells
O	234	240	u-turn
O	241	244	but
O	245	247	it
O	248	255	doesn't
O	256	260	tell
O	261	265	left
O	266	272	u-turn
O	273	275	or
O	276	281	right
O	282	284	so
O	285	289	even
O	290	292	if
O	293	295	im
O	296	298	am
O	299	304	using
O	305	309	some
O	310	316	images
O	317	320	for
O	321	328	showing
O	329	332	its
O	333	334	a
O	335	341	u-turn
O	342	343	i
O	344	349	don't
O	350	354	know
O	355	360	which
O	361	364	way
O	365	368	the
O	369	375	u-turn
O	376	382	should
O	383	385	be
O	385	386	.

O	387	388	2
O	389	390	:
O	391	393	Is
O	394	396	it
O	397	405	possible
O	406	408	to
O	409	413	draw
O	414	416	or
O	417	421	show
O	422	424	an
O	425	434	arrowhead
O	435	439	over
O	440	443	the
B-API	444	452	polyline
O	453	455	in
O	456	459	map
O	460	462	v2
O	463	465	as
O	466	467	u
O	468	471	can
O	472	475	see
O	476	478	in
O	479	482	the
O	483	488	below
O	489	494	image

O	495	497	so
O	498	501	any
O	502	510	tutorial
O	511	513	or
O	514	521	example
O	522	525	how
O	526	528	to
O	529	531	do
O	532	536	this
O	537	539	..

O	540	546	thanks

O	547	549	IF
O	550	554	this
O	555	557	is
O	558	562	your
O	563	567	only
O	568	575	problem
O	576	577	:

O	578	581	the
O	582	589	parsing
O	590	594	just
O	595	600	tells
O	601	607	u-turn
O	608	611	but
O	612	614	it
O	615	622	doesn't
O	623	627	tell
O	628	632	left
O	633	639	u-turn
O	640	642	or
O	643	648	right
O	649	651	so
O	652	656	even
O	657	659	if
O	660	662	im
O	663	665	am
O	666	671	using
O	672	676	some
O	677	683	images
O	684	687	for
O	688	695	showing
O	696	699	its
O	700	701	a
O	702	708	u-turn
O	709	710	i
O	711	716	don't
O	717	721	know
O	722	727	which
O	728	731	way
O	732	735	the
O	736	742	u-turn
O	743	749	should
O	750	752	be
O	752	753	.

O	754	758	Then
O	759	762	you
O	763	766	can
O	767	773	easily
O	774	778	find
O	779	782	out
O	783	786	the
O	787	796	direction
O	797	798	-
O	799	803	your
O	804	809	route
O	810	812	is
O	813	818	built
O	819	823	from
O	824	825	"
O	825	831	points
O	831	832	"
O	833	834	A
O	835	837	->
O	838	839	B
O	840	842	->
O	843	844	C
O	845	847	->
O	848	849	D
O	850	853	...
O	854	860	having
O	861	872	coordinates
O	873	875	of
O	876	877	A
O	878	879	B
O	880	883	you
O	884	888	have
O	889	895	vector
O	895	896	.

O	897	900	And
O	901	904	you
O	905	908	can
O	909	913	also
O	914	918	have
O	919	925	vector
O	926	931	using
O	932	933	B
O	934	935	C
O	935	936	.

O	937	939	No
O	940	943	you
O	944	948	just
O	949	953	need
O	954	956	to
O	957	966	calculate
O	967	972	angle
O	973	980	between
O	981	986	these
O	987	990	two
O	991	998	vectors
O	999	1002	and
O	1003	1006	you
O	1007	1011	will
O	1012	1016	know
O	1017	1022	which
O	1023	1032	direction
O	1033	1035	it
O	1036	1040	goes
O	1040	1041	.

B-Fram	0	8	Phonegap
I-Fram	9	16	cordova
B-Plat	17	24	android
I-Plat	25	28	4.4
B-API	29	41	FileTransfer
O	42	48	upload
B-Stan	49	52	SSL
O	53	56	not
O	57	64	working

O	65	68	got
O	69	70	a
O	71	78	problem
O	79	83	with
O	84	87	the
O	88	100	filetransfer
O	101	107	upload
O	108	110	in
B-Fram	111	118	cordova
O	119	122	for
B-Plat	123	130	android
O	131	134	...

O	135	136	i
O	137	141	want
O	142	144	to
O	145	151	upload
O	152	155	any
O	156	160	type
O	161	163	of
O	164	168	file
O	169	171	..
O	172	177	means
O	178	184	images
O	184	185	,
O	186	192	videos
O	192	193	,
O	194	200	sounds
O	201	203	..

O	204	207	the
O	208	215	problem
O	216	218	is
O	218	219	,
O	220	224	that
O	225	226	i
O	227	230	don
O	231	232	t
O	233	237	know
O	238	241	how
O	242	244	to
O	245	248	get
O	249	252	the
O	253	257	type
O	258	259	/
O	260	266	ending
O	267	269	of
O	270	273	the
O	274	278	file
O	279	280	(
O	280	283	for
O	284	291	example
B-Stan	292	296	.jpg
O	296	297	)
O	297	298	,
O	299	306	because
O	307	311	with
O	312	328	options.fileName
O	329	330	=
O	331	346	imageURI.substr
O	347	348	(
O	348	368	imageURI.lastIndexOf
O	369	370	(
O	370	371	'
O	372	373	/
O	374	376	')
O	377	379	+1
O	380	382	);
O	383	384	i
O	385	389	only
O	390	393	get
O	394	397	the
O	398	406	location
O	407	410	but
O	411	414	not
O	415	418	the
O	419	427	filename
O	428	432	with
O	433	436	the
O	437	442	given
O	443	447	type
O	448	449	/
O	450	456	ending
O	457	459	..

O	460	461	i
O	462	467	could
O	468	470	of
O	471	477	course
O	478	482	just
O	483	486	add
O	487	488	+
O	489	490	"
B-Stan	490	494	.jpg
O	494	495	"
O	496	499	but
O	500	504	that
O	505	508	won
O	509	510	t
O	511	515	help
O	516	520	with
O	521	524	all
O	525	530	other
O	531	536	files
O	537	543	except
O	544	546	of
O	547	553	images
O	554	556	..
O	557	561	that
O	562	563	s
O	564	568	when
O	569	570	i
O	571	577	choose
O	578	579	a
O	580	584	file
O	585	589	from
O	590	593	the
O	594	606	photogallery
O	607	609	..
O	610	614	when
O	615	616	i
O	617	623	choose
O	624	625	a
O	626	630	file
O	631	635	from
O	636	639	the
O	640	647	sd-card
O	648	655	nothing
O	656	663	happens
O	664	666	->
O	667	671	must
O	672	674	be
O	675	676	a
O	677	684	problem
O	685	689	with
O	690	693	the
O	694	705	destination
O	706	709	uri

O	710	714	that
O	715	716	s
O	717	719	my
O	720	724	code
O	725	726	:
O	727	746	@codeSnippetRemoved

O	747	749	In
O	750	754	your
B-PL	755	758	PHP
O	759	763	code
O	764	770	ensure
O	771	775	that
O	776	779	you
O	780	786	return
O	787	790	the
O	791	795	MIME
O	796	800	type
O	801	803	as
O	804	805	a
O	806	812	header
O	813	832	@codeSnippetRemoved

O	833	835	If
O	836	839	the
O	840	846	client
O	847	851	side
O	852	857	needs
O	858	860	to
O	861	865	have
O	866	867	a
B-Stan	868	873	.jpeg
O	874	883	extension
O	883	884	,
O	885	889	make
O	890	894	your
O	895	898	URL
O	899	908	something
O	909	913	like
O	914	915	'
O	916	930	https://domain
O	931	949	....com/myfile.jpg
O	950	953	and
O	954	958	then
O	959	961	on
O	962	965	the
O	966	972	server
O	973	980	perform
O	981	984	URL
O	985	994	rewriting
O	995	999	that
O	1000	1004	maps
O	1005	1008	the
O	1009	1012	URL
O	1013	1015	to
O	1016	1020	call
O	1021	1025	your
B-PL	1026	1029	PHP
O	1030	1034	page
O	1034	1035	.

O	0	3	How
O	4	6	do
O	7	8	i
O	9	13	fire
O	14	17	the
B-Fram	18	24	google
I-Fram	25	31	places
I-Fram	32	44	autocomplete
O	45	49	with
O	50	60	dictionary
O	61	63	on
O	64	66	in
B-Plat	67	74	android
B-Fram	75	82	firefox
O	83	90	browser
O	90	91	?

O	92	96	I've
O	97	107	integrated
O	108	112	with
O	113	116	the
B-Fram	117	123	google
I-Fram	124	130	places
I-Fram	131	143	autocomplete
O	144	146	on
O	147	149	my
O	150	157	website
O	157	158	.

O	159	166	However
O	167	171	when
O	172	175	the
O	176	186	dictionary
O	187	189	is
O	190	192	on
O	193	195	in
O	196	199	the
B-Fram	200	207	firefox
O	208	215	browser
O	216	218	on
B-Plat	219	226	android
O	227	233	phones
O	233	234	,
O	235	238	the
O	239	245	places
O	246	249	are
O	250	254	only
O	255	261	listed
O	262	266	when
O	267	268	i
O	269	274	click
O	275	278	one
O	279	281	of
O	282	285	the
O	286	295	suggested
O	296	301	words
O	301	302	.
O	303	305	in
O	306	307	a
O	308	314	normal
O	315	319	text
O	320	323	box
O	324	325	i
O	326	331	would
O	332	334	do
O	335	354	@codeSnippetRemoved

O	355	362	However
O	362	363	,
O	364	366	in
O	367	371	this
O	372	376	case
O	376	377	,
O	378	379	I
O	380	385	don't
O	386	390	know
O	391	395	what
O	396	401	event
O	402	404	to
O	405	409	fire
O	409	410	.

O	411	414	How
O	415	421	should
O	422	423	i
O	424	427	fix
O	428	432	this
O	432	433	?

O	434	438	Here
O	439	440	'
O	441	442	s
O	443	445	my
O	446	450	code

B-PL	451	455	HTML
O	456	457	:
O	458	477	@codeSnippetRemoved

B-PL	478	488	Javascript
O	489	490	:
O	491	510	@codeSnippetRemoved

B-Plat	0	7	Android
O	8	14	Screen
O	15	20	Share
O	21	24	and
O	25	32	Control

O	33	40	Require
O	41	45	some
O	46	50	help
O	51	54	for
O	55	67	implementing
O	68	71	the
O	72	81	following
O	82	90	use-case

O	91	94	The
O	95	99	user
O	100	106	starts
O	107	119	screen-share
O	120	127	session
O	128	130	by
O	131	139	clicking
O	140	142	on
O	143	144	a
O	145	157	screen-share
O	158	164	button
O	165	167	on
O	168	171	the
B-Plat	172	179	android
O	180	183	app
O	183	184	.

O	185	188	The
O	189	195	remote
O	196	200	user
O	201	203	is
O	204	207	now
O	208	212	able
O	213	215	to
O	216	219	see
O	220	223	the
O	224	235	application
O	236	240	from
O	241	244	his
O	245	256	workstation
O	257	260	web
O	261	267	portal
O	267	268	.

O	269	271	He
O	272	275	can
O	276	283	Control
O	284	287	the
O	288	299	application
O	300	308	remotely
O	309	312	The
O	313	319	remote
O	320	330	technician
O	331	333	is
O	334	342	expected
O	343	345	to
O	346	349	see
O	350	353	the
O	354	359	whole
O	360	362	of
O	363	374	application
O	375	384	including
O	385	391	camera
O	392	397	feeds
O	398	402	from
O	403	405	an
O	406	414	embedded
O	415	421	camera
O	422	426	view
O	427	429	in
O	430	433	the
O	434	445	application
O	445	446	.

O	447	457	Conditions
O	458	459	:

O	460	466	Device
O	467	469	is
O	470	473	not
O	474	480	rooted
O	480	481	.

O	482	486	Need
O	487	489	to
O	490	497	support
O	498	500	OS
O	501	504	4.2
O	505	508	and
O	509	514	above
O	515	521	Cannot
O	522	525	use
B-Fram	526	529	ADB
O	529	530	.

O	531	534	The
O	535	538	app
O	539	542	has
O	543	545	to
O	546	550	work
O	551	553	in
O	554	564	production
O	565	576	environment

O	577	580	How
O	581	584	can
O	585	586	I
O	587	594	achieve
O	595	599	this
O	600	602	in
O	603	605	an
B-Plat	606	613	Android
O	614	625	application
O	626	628	?.

O	629	632	Any
O	633	644	open-source
O	645	660	implementations
O	660	661	?

O	662	665	Can
B-Fram	666	672	WebRTC
O	673	675	be
O	676	680	used
O	681	684	for
O	685	689	this
O	689	690	?

B-API	0	11	SKShapeNode
O	12	22	equivalent
O	23	25	in
B-Fram	26	33	Cocos2D
O	34	35	/
B-Fram	36	49	SpriteBuilder

O	50	51	I
O	52	56	have
O	57	63	worked
O	64	66	on
O	67	76	different
O	77	85	business
O	86	90	Apps
O	91	94	for
B-Plat	95	98	iOS
O	99	102	and
B-Plat	103	110	Android
O	111	117	before
O	117	118	.

O	119	122	Now
O	123	124	I
O	125	127	am
O	128	135	working
O	136	138	on
O	139	141	my
O	142	146	fist
O	147	152	small
O	153	157	game
O	157	158	.

O	159	160	I
O	161	165	made
O	166	170	some
O	171	176	tests
O	177	181	with
B-API	182	191	SpriteKit
O	192	195	and
O	196	198	it
O	199	205	worked
O	206	211	quite
O	212	216	well
O	216	217	.

O	218	220	To
O	221	223	be
O	224	228	able
O	229	231	to
O	232	236	port
O	237	240	the
O	241	245	game
O	246	248	to
B-Plat	249	256	Android
O	257	258	I
O	259	261	am
O	262	265	now
O	266	273	testing
B-Fram	274	281	Cocos2D
O	282	285	and
B-API	286	295	SpriteKit
O	295	296	.

O	297	299	It
O	300	305	works
O	306	311	quite
O	312	316	well
O	317	319	to
O	319	320	,
O	321	324	but
O	325	330	there
O	331	333	is
O	334	337	one
O	338	343	thing
O	344	345	I
O	346	351	could
O	352	355	not
O	356	361	solve
O	362	365	yet
O	366	367	:

O	368	371	The
O	372	376	game
O	377	379	is
O	380	383	for
O	384	388	kids
O	389	392	and
O	393	396	one
O	397	401	taks
O	402	404	is
O	405	407	to
O	408	412	find
O	413	414	a
O	415	419	path
O	420	426	trough
O	427	428	a
O	429	438	labyrinth
O	438	439	.

O	440	444	This
O	445	449	done
O	450	452	by
O	453	463	connecting
O	464	465	a
O	466	472	series
O	473	475	of
O	476	480	dots
O	481	485	with
O	486	487	a
O	488	492	line
O	492	493	.

O	494	496	In
B-Fram	497	506	SpriteKit
O	507	508	I
O	509	513	uses
B-API	514	526	SKShapeNodes
O	527	529	to
O	530	536	create
O	537	540	the
O	541	545	dots
O	546	549	and
O	550	553	the
O	554	558	path
O	559	566	between
O	567	571	them
O	571	572	.

O	573	577	This
O	578	581	was
O	582	587	quite
O	588	592	easy
O	593	594	:
O	595	614	@codeSnippetRemoved

O	615	618	How
O	619	622	can
O	623	624	I
O	625	627	do
O	628	631	the
O	632	636	same
O	637	639	in
B-Fram	640	647	Cocos2D
O	648	649	/
B-API	650	663	SpriteBuilder
O	663	664	?

O	665	666	I
O	667	672	found
B-API	673	683	CCDrawNode
O	684	687	but
O	688	697	according
O	698	700	to
O	701	704	the
O	705	709	docs
O	710	714	this
O	715	717	is
O	718	722	made
O	723	726	for
O	727	732	debug
O	733	736	use
O	737	740	and
O	741	744	not
O	745	753	indented
O	754	757	for
O	758	759	"
O	759	763	real
O	763	764	"
O	765	773	projects
O	773	774	.

O	775	779	What
O	780	782	is
O	783	786	the
O	787	792	right
O	793	796	way
O	797	799	to
O	800	802	do
O	803	807	this
O	808	810	in
B-Fram	811	818	Cocos2D
O	818	819	?

O	0	5	Popup
O	6	12	window
O	13	15	in
O	16	19	any
O	20	23	app

O	24	25	i
O	26	30	want
O	31	33	to
O	34	39	Popup
O	40	46	dialog
O	47	49	at
O	50	51	a
O	52	60	specific
O	61	65	time
O	66	68	in
O	69	72	any
O	73	76	app
O	77	79	my
O	80	84	code
O	85	86	:
O	87	106	@codeSnippetRemoved

O	107	109	it
O	110	114	give
O	115	117	me
O	118	137	@codeSnippetRemoved

O	138	142	what
O	143	145	is
O	146	150	this
O	151	163	permissionif
O	164	165	i
O	166	172	delete
B-API	173	186	d.getWindow()
I-API	187	195	.setType
O	196	197	(
B-API	197	241	WindowManager.LayoutParams.TYPE_SYSTEM_ALERT
O	242	244	);
O	245	247	my
O	248	251	app
O	252	254	is
O	255	262	correct
O	263	268	.....

O	269	272	try
O	273	277	this
O	278	280	in
O	281	285	your
O	286	294	menifest
O	295	299	file
O	300	304	with
O	305	313	Activity
O	314	318	that
O	319	322	you
O	323	327	want
O	328	330	to
O	331	335	show
O	336	338	as
O	339	345	pop-up
O	345	346	.

O	347	351	-->>
B-Plat	352	359	android
O	360	361	:
O	362	368	theme=
O	369	370	"
O	370	378	@android
O	379	380	:
O	381	386	style
O	387	388	/
O	389	401	Theme.Dialog
O	401	402	"

O	403	406	Add
O	407	411	this
O	412	422	permission
O	423	425	to
O	426	430	your
O	431	439	manifest
O	440	441	:
O	442	461	@codeSnippetRemoved

O	462	467	First
O	468	470	of
O	471	474	all
O	475	481	thanks
O	482	484	to
O	485	492	Mathias
O	493	496	Lin

O	497	498	I
O	499	501	am
O	502	505	new
O	506	508	to
B-Plat	509	516	Android
O	517	519	so
O	520	522	it
O	523	526	was
O	527	531	hard
O	532	534	to
O	535	537	me
O	538	540	to
O	541	544	set
O	545	555	permission
O	556	563	knowing
O	564	568	from
O	569	576	Mathias
O	577	580	Lin
O	581	582	'
O	583	584	s
O	585	599	answer.Because
O	600	601	I
O	602	608	didn't
O	609	613	know
O	614	617	how
O	618	620	to
O	621	624	set
O	625	635	permission
O	636	639	and
O	640	645	where
O	646	648	in
O	649	652	the
O	653	661	manifest
O	662	666	file
O	666	667	.

O	668	675	Finally
O	676	677	I
O	678	681	did
O	682	684	it
O	685	687	by
O	688	692	help
O	693	695	of
O	696	703	Mathias
O	704	707	Lin
O	708	709	'
O	710	711	s
O	712	718	answer
O	718	719	.

O	720	722	So
O	723	724	I
O	725	729	made
O	730	733	the
O	734	740	answer
O	741	750	elaborate
O	750	751	.

O	752	754	In
O	755	763	mainfest
O	764	768	file
O	769	772	use
O	773	792	@codeSnippetRemoved

O	793	798	after
O	799	818	@codeSnippetRemoved

O	819	821	as
O	822	841	@codeSnippetRemoved

O	0	7	Caching
O	8	15	problem
O	16	20	with
O	21	22	a
O	23	26	web
O	27	31	view
O	32	40	activity

O	41	44	The
O	45	53	activity
O	54	62	launched
O	63	65	is
O	66	67	a
B-API	68	75	webview
O	76	89	activity.when
O	90	91	i
O	92	97	login
O	98	103	first
O	104	108	time
O	109	113	then
O	114	119	shows
O	120	123	the
O	124	129	login
O	130	134	page
O	135	138	but
O	139	143	when
O	144	150	logged
O	151	153	on
O	154	160	second
O	161	165	time
O	166	170	then
O	171	174	the
O	175	178	web
O	179	183	view
O	184	189	cache
O	190	193	the
O	194	202	pervious
O	203	208	login
O	209	212	and
O	213	218	shows
O	219	221	me
O	222	225	the
O	226	234	homepage
O	235	242	instead
O	243	245	it
O	246	252	should
O	253	255	be
O	256	263	showing
O	264	265	a
O	266	271	login
O	272	276	page
O	277	284	again.i
O	285	290	don't
O	291	295	have
O	296	297	a
O	298	304	logout
O	305	311	button
O	312	314	in
O	315	317	my
O	318	321	web
O	322	326	view
O	326	327	.

O	328	347	@codeSnippetRemoved

O	348	352	This
O	353	356	may
O	357	359	be
O	360	361	a
O	362	368	little
O	369	373	over
O	374	377	the
O	378	381	top
O	382	385	for
O	386	390	what
O	391	394	you
O	395	399	want
O	400	402	to
O	403	405	do
O	405	406	,
O	407	410	but
O	411	417	should
O	418	423	solve
O	424	428	your
O	429	436	problem
O	437	438	:

B-API	439	446	Android
I-API	447	454	Webview
O	455	456	-
O	457	467	Completely
O	468	473	Clear
O	474	477	the
O	478	483	Cache

B-API	0	20	AutoCompleteTextView
O	21	25	with
O	26	32	custom
B-API	33	45	ArrayAdapter
O	46	49	and
O	50	56	Filter

O	57	58	I
O	59	63	have
O	64	65	a
O	66	73	problem
O	74	78	when
O	79	82	I'm
O	83	89	trying
O	90	92	to
O	93	99	Filter
O	100	107	results
O	108	110	in
B-API	111	131	AutoCompleteTextView
O	132	136	from
B-Fram	137	143	LogCat
O	144	145	I
O	146	150	know
O	151	155	that
O	156	165	filtering
O	166	168	is
O	169	178	performed
O	179	186	correct
O	187	190	but
O	191	193	it
O	194	195	'
O	196	197	s
O	198	201	not
O	202	212	refreshing
O	213	216	the
O	217	221	view
O	222	224	:/
O	225	228	Did
O	229	230	I
O	231	237	forget
O	238	243	about
O	244	253	something
O	254	257	any
O	258	269	suggestions
O	270	272	or
O	273	277	help
O	277	278	?

O	279	283	Here
O	284	286	is
O	287	293	source
O	294	298	code
O	299	301	of
O	302	308	filter
O	308	309	.

O	310	329	@codeSnippetRemoved

O	330	333	The
O	334	341	missing
O	342	346	part
O	347	349	is
O	350	354	that
O	355	356	I
O	357	361	need
O	362	364	to
O	365	368	set
O	369	372	the
O	373	376	new
O	377	383	values
O	384	388	from
O	389	395	filter
O	396	398	so
O	399	400	I
O	401	405	just
O	406	412	simply
O	413	420	changed
O	421	424	the
O	425	444	@codeSnippetRemoved

O	445	448	and
O	449	452	now
O	453	455	it
O	456	457	'
O	458	459	s
O	460	467	working
O	467	468	.

O	469	472	The
O	473	480	correct
O	481	485	code
O	486	492	bellow
O	492	493	.

O	494	513	@codeSnippetRemoved

O	514	521	Another
O	522	528	Update
O	529	530	-
O	531	533	On
O	534	543	inputting
O	544	547	and
O	548	556	removing
O	557	560	all
O	561	564	the
O	565	575	characters
O	576	578	in
O	579	585	search
O	586	593	textbox
O	594	598	very
O	599	606	quickly
O	607	614	crashes
O	615	618	the
O	619	630	application
O	631	633	on
O	634	650	newValues.size()
O	651	653	or
O	654	667	newValues.get
O	668	669	(
O	669	670	i
O	670	671	)
O	672	674	as
O	675	684	newValues
O	685	690	might
O	691	693	be
O	694	698	null
O	698	699	.

O	700	702	So
O	702	703	,
O	704	708	here
O	709	710	'
O	711	712	s
O	713	716	the
O	717	721	code
O	722	725	you
O	726	732	should
O	733	736	use
O	737	738	:
O	739	758	@codeSnippetRemoved

O	0	3	Are
O	4	9	there
O	10	19	drawbacks
O	20	22	to
O	23	35	implementing
B-API	36	51	onClickListener
O	52	55	for
O	56	60	each
B-API	61	69	ListView
O	70	73	row
O	74	81	instead
O	82	84	of
B-API	85	104	onItemClickListener
O	104	105	?

O	106	108	It
O	109	114	would
O	115	117	be
O	118	122	more
O	123	133	convenient
O	134	137	for
O	138	140	me
O	141	143	to
O	144	152	register
O	153	154	a
O	155	161	unique
B-API	162	177	OnClickListener
O	178	181	for
O	182	186	each
O	187	190	row
O	191	193	in
O	194	197	the
B-API	198	206	ListView
O	206	207	,
O	208	211	but
O	212	213	I
O	214	218	want
O	219	221	to
O	222	224	be
O	225	229	sure
O	230	234	that
O	235	239	this
O	240	242	is
O	243	245	an
O	246	256	acceptable
O	257	265	practice
O	265	266	.

O	267	269	My
O	270	277	current
O	278	284	design
O	285	287	is
O	288	289	a
O	290	296	rather
O	297	307	convoluted
O	308	311	way
O	312	314	to
O	315	323	separate
O	324	327	the
O	328	336	concerns
O	337	339	of
O	340	343	the
B-API	344	359	OnClickListener
O	360	364	from
O	365	369	each
O	370	373	row
O	374	378	type
O	378	379	.

O	380	383	The
O	384	390	reason
O	391	394	for
O	395	399	this
O	400	402	is
O	403	407	that
O	408	409	I
O	410	414	have
O	415	423	multiple
O	424	431	classes
O	432	434	of
O	435	439	rows
O	440	442	in
O	443	446	the
B-API	447	455	ListView
O	455	456	.

O	457	461	Each
O	462	467	class
O	468	471	has
O	472	473	a
O	474	484	completely
O	485	494	different
O	495	509	responsibility
O	510	513	and
O	514	522	behavior
O	522	523	.

O	524	527	For
O	528	535	example
O	535	536	,
O	537	545	consider
O	546	547	a
B-API	548	556	ListView
O	557	561	that
O	562	565	can
O	566	573	contain
O	574	578	both
O	579	593	sub-categories
O	594	597	and
O	598	602	book
O	603	609	titles
O	609	610	.

O	611	613	If
O	614	615	a
O	616	620	book
O	621	626	title
O	627	629	is
O	630	637	clicked
O	637	638	,
O	639	640	a
O	641	644	new
O	645	653	activity
O	654	660	should
O	661	666	start
O	667	671	that
O	672	677	shows
O	678	681	the
O	682	687	cover
O	688	693	image
O	693	694	.

O	695	697	If
O	698	699	a
O	700	712	sub-category
O	713	715	is
O	716	723	clicked
O	723	724	,
O	725	726	a
O	727	730	new
O	731	735	list
O	736	738	of
O	739	744	books
O	745	748	and
O	749	759	categories
O	760	762	is
O	763	772	displayed
O	772	773	.

O	774	777	I'd
O	778	782	like
O	783	786	the
O	787	790	row
O	791	797	itself
O	798	800	to
O	801	809	maintain
O	810	819	knowledge
O	820	825	about
O	826	829	its
O	830	833	own
O	834	842	identity
O	843	846	and
O	847	861	responsibility
O	862	868	rather
O	869	873	than
O	874	880	having
O	881	883	to
O	884	888	leak
O	889	892	the
O	893	902	knowledge
O	903	908	about
O	909	913	each
O	914	917	row
O	918	920	to
O	921	923	be
O	924	934	maintained
O	935	937	by
O	938	941	the
O	942	953	implementer
O	954	956	of
B-API	957	976	onItemClickListener
O	976	977	.

O	978	981	I'd
O	982	986	also
O	987	991	like
O	992	994	to
O	995	999	know
O	1000	1004	what
O	1005	1008	the
O	1009	1020	performance
O	1021	1033	implications
O	1034	1037	are
O	1038	1040	of
O	1041	1046	doing
O	1047	1051	this
O	1052	1054	vs
O	1054	1055	.
O	1056	1068	implementing
O	1069	1071	my
O	1072	1075	own
O	1076	1081	logic
O	1082	1084	to
O	1085	1091	figure
O	1092	1095	out
O	1096	1099	how
O	1100	1102	to
O	1103	1109	handle
O	1110	1113	the
O	1114	1119	click
O	1119	1120	.

O	1121	1124	Are
O	1125	1130	there
O	1131	1140	drawbacks
O	1141	1143	to
O	1144	1156	implementing
B-API	1157	1172	onClickListener
O	1173	1176	for
O	1177	1181	each
B-API	1182	1190	ListView
I-API	1191	1203	ArrayAdapter
O	1204	1207	row
O	1208	1215	instead
O	1216	1218	of
B-API	1219	1238	onItemClickListener
O	1238	1239	?

O	1240	1243	I'm
O	1244	1251	looking
O	1252	1255	for
O	1256	1264	concrete
O	1265	1269	data
O	1270	1273	and
O	1274	1282	specific
O	1283	1292	drawbacks
O	1293	1299	rather
O	1300	1304	than
O	1305	1310	vague
O	1311	1326	recommendations
O	1326	1327	.

O	1328	1334	Should
O	1335	1336	I
O	1337	1343	expect
O	1344	1350	memory
O	1351	1354	use
O	1354	1355	,
O	1356	1370	initialization
O	1371	1375	time
O	1375	1376	,
O	1377	1379	or
O	1380	1392	steady-state
O	1393	1398	speed
O	1399	1400	(
O	1400	1404	like
O	1405	1414	scrolling
O	1415	1422	through
O	1423	1426	the
O	1427	1431	list
O	1431	1432	)
O	1433	1435	to
O	1436	1438	be
O	1439	1452	significantly
O	1453	1461	affected
O	1461	1462	?

O	1463	1466	You
O	1467	1472	don't
O	1473	1480	explain
O	1481	1484	why
O	1485	1488	you
O	1489	1494	would
O	1495	1499	need
O	1500	1508	separate
O	1509	1514	click
O	1515	1524	listeners
O	1525	1528	for
O	1529	1533	each
O	1534	1537	row
O	1537	1538	,
O	1539	1542	but
O	1543	1544	I
O	1545	1550	would
O	1551	1560	recommend
O	1561	1568	against
O	1569	1571	it
O	1571	1572	.

O	1573	1577	Take
O	1578	1579	a
O	1580	1584	look
O	1585	1587	at
O	1588	1593	using
B-API	1594	1605	View.setTag
O	1606	1607	(
O	1607	1613	Object
O	1613	1614	)
O	1615	1616	/
B-API	1617	1630	View.getTag()
O	1631	1633	to
O	1634	1638	pass
O	1639	1651	row-specific
O	1652	1658	custom
O	1659	1663	data
O	1664	1666	by
O	1667	1672	which
O	1673	1676	you
O	1677	1680	can
O	1681	1690	customize
O	1691	1694	the
O	1695	1703	response
O	1704	1706	of
O	1707	1708	a
O	1709	1710	(
O	1710	1716	shared
O	1716	1717	)
O	1718	1723	click
O	1724	1732	listener
O	1732	1733	.

O	1734	1738	EDIT

O	1739	1740	I
O	1741	1744	see
O	1745	1749	from
O	1750	1754	your
O	1755	1762	example
O	1763	1766	why
O	1767	1770	you
O	1771	1775	want
O	1776	1785	different
B-API	1786	1801	OnClickListener
O	1802	1803	s
O	1804	1812	attached
O	1813	1815	to
O	1816	1820	your
O	1821	1825	rows
O	1825	1826	.

O	1827	1828	I
O	1829	1832	was
O	1833	1838	under
O	1839	1842	the
O	1843	1853	impression
O	1854	1858	that
O	1859	1862	you
O	1863	1869	wanted
O	1870	1871	a
O	1872	1880	separate
B-API	1881	1896	OnClickListener
O	1897	1905	instance
O	1906	1909	for
O	1910	1914	each
O	1915	1918	row
O	1918	1919	.

O	1920	1921	(
O	1921	1925	That
O	1926	1929	was
O	1930	1932	my
O	1933	1937	main
O	1938	1944	reason
O	1945	1948	for
O	1949	1961	recommending
O	1962	1969	against
O	1970	1974	this
O	1974	1975	.
O	1975	1976	)
O	1977	1979	If
O	1980	1983	you
O	1984	1988	have
O	1989	1992	two
O	1993	1998	types
O	1999	2001	of
O	2002	2006	rows
O	2007	2008	(
O	2008	2018	categories
O	2019	2022	and
O	2023	2029	titles
O	2029	2030	)
O	2031	2034	and
O	2035	2043	hundreds
O	2044	2046	of
O	2047	2051	rows
O	2051	2052	,
O	2053	2056	you
O	2057	2061	need
O	2062	2066	only
O	2067	2070	two
O	2071	2076	kinds
O	2077	2079	of
O	2080	2089	responses
O	2089	2090	,
O	2091	2094	not
O	2095	2103	hundreds
O	2104	2106	of
O	2107	2111	them
O	2111	2112	.

O	2113	2114	I
O	2115	2119	also
O	2120	2130	understand
O	2131	2134	the
O	2135	2140	point
O	2141	2146	about
O	2147	2157	separating
O	2158	2166	concerns
O	2166	2167	.

O	2168	2180	Nevertheless
O	2180	2181	,
O	2182	2183	I
O	2184	2189	think
O	2190	2200	overriding
B-API	2201	2231	ListActivity.onListItemClick()
O	2232	2233	(
O	2233	2235	or
O	2236	2243	calling
B-API	2244	2277	ListView.setOnItemClickListener()
O	2278	2280	if
O	2281	2284	you
O	2285	2291	aren't
O	2292	2297	using
O	2298	2299	a
B-API	2300	2312	ListActivity
O	2312	2313	)
O	2314	2319	would
O	2320	2322	be
O	2323	2330	cleaner
O	2331	2334	and
O	2335	2339	less
O	2340	2346	likely
O	2347	2349	to
O	2350	2359	interfere
O	2360	2364	with
O	2365	2368	the
O	2369	2378	operation
O	2379	2381	of
O	2382	2385	the
O	2386	2390	list
O	2391	2395	view
O	2395	2396	.

O	2397	2400	You
O	2401	2404	can
O	2405	2408	use
O	2409	2410	a
O	2411	2419	delegate
O	2420	2427	pattern
O	2428	2431	for
O	2432	2436	this
O	2436	2437	,
O	2438	2440	as
O	2441	2448	follows
O	2448	2449	.

O	2450	2456	Define
O	2457	2459	an
O	2460	2468	abstract
O	2469	2474	class
O	2475	2477	or
O	2478	2487	interface
O	2488	2489	:
O	2490	2509	@codeSnippetRemoved

O	2510	2514	Then
O	2515	2521	create
O	2522	2525	one
O	2526	2534	instance
O	2535	2537	of
O	2538	2540	an
O	2541	2547	object
O	2548	2552	that
O	2553	2563	implements
O	2564	2568	this
O	2569	2578	interface
O	2579	2582	for
O	2583	2587	each
O	2588	2592	type
O	2593	2595	of
O	2596	2599	row
O	2600	2604	data
O	2605	2606	(
O	2606	2609	not
O	2610	2613	one
O	2614	2622	instance
O	2623	2626	for
O	2627	2631	each
O	2632	2635	row
O	2635	2636	)
O	2636	2637	.

O	2638	2640	In
O	2641	2645	your
O	2646	2653	adapter
O	2653	2654	,
O	2655	2658	use
B-API	2659	2665	setTag
O	2666	2667	(
O	2667	2673	Object
O	2673	2674	)
O	2675	2677	to
O	2678	2688	initialize
O	2689	2692	the
O	2693	2696	tag
O	2697	2700	for
O	2701	2705	each
O	2706	2709	row
O	2710	2712	to
O	2713	2716	the
O	2717	2728	appropriate
O	2729	2742	MyClickHander
O	2743	2751	instance
O	2751	2752	.

O	2753	2755	In
O	2756	2760	your
B-API	2761	2791	ListActivity.onListItemClick()
O	2792	2800	override
O	2800	2801	,
O	2802	2805	use
O	2806	2810	this
O	2811	2816	logic
O	2817	2818	:
O	2819	2838	@codeSnippetRemoved

O	0	9	Reference
O	10	11	(
O	11	14	not
O	15	19	copy
O	19	20	)
O	21	22	a
O	23	31	subrange
O	32	34	of
O	35	36	a
O	37	52	one-dimensional
O	53	58	array
O	58	59	?

O	60	67	Suppose
O	68	69	I
O	70	74	have
O	75	78	the
O	79	88	following
O	89	95	method
O	96	105	signature
O	106	125	@codeSnippetRemoved

O	126	129	and
O	130	131	I
O	132	136	call
O	137	139	it
O	140	144	like
O	145	149	this
O	150	151	:
O	152	171	@codeSnippetRemoved

O	172	176	then
O	176	177	,
O	178	183	since
O	184	190	arrays
O	191	194	are
O	195	202	objects
O	202	203	,
O	204	207	and
O	208	215	objects
O	216	219	are
O	220	229	reference
O	230	235	types
O	235	236	,
O	237	238	f
O	239	247	receives
O	248	249	a
O	250	259	reference
O	260	262	to
O	263	266	the
O	267	271	ints
O	271	272	,
O	273	276	and
O	277	280	can
O	281	287	change
O	288	293	their
O	294	299	value
O	300	302	so
O	303	306	the
O	307	313	caller
O	314	317	can
O	318	321	see
O	322	325	the
O	326	333	changes
O	333	334	.

O	335	338	Now
O	339	342	how
O	343	346	can
O	347	348	I
O	349	353	then
O	354	358	call
O	359	360	f
O	361	363	in
O	364	365	a
O	366	369	way
O	370	374	that
O	375	377	it
O	378	386	receives
O	387	388	a
O	389	398	reference
O	399	401	to
O	402	405	the
O	406	411	array
O	412	420	elements
O	421	422	2
O	422	423	,
O	424	425	3
O	425	426	,
O	427	428	4
O	429	430	(
O	430	434	i.e.
O	435	443	subrange
O	444	448	from
O	449	454	index
O	455	456	1
O	457	459	to
O	460	461	3
O	462	471	inclusive
O	471	472	)
O	473	480	without
O	481	488	copying
O	489	497	myValues
O	497	498	?

O	499	508	Something
O	509	513	like
O	514	533	@codeSnippetRemoved

O	534	539	which
O	540	542	of
O	543	549	course
O	550	554	does
O	555	558	not
O	559	566	compile
O	567	568	(
O	568	571	and
O	572	577	would
O	578	583	leave
O	584	588	open
O	589	594	which
O	595	599	size
O	600	603	the
O	604	609	array
O	610	615	would
O	616	620	have
O	620	621	)
O	622	625	but
O	626	631	might
O	632	641	transport
O	642	645	the
O	646	650	idea
O	651	652	I
O	653	655	am
O	656	663	looking
O	664	667	for
O	667	668	?

O	669	671	In
O	672	677	other
O	678	687	languages
O	687	688	,
O	689	690	I
O	691	696	could
O	697	700	use
O	701	708	pointer
O	709	720	arithmetics
O	721	723	to
O	724	733	calculate
O	734	737	the
O	738	745	address
O	746	748	of
O	749	759	myValues[2
O	760	761	]
O	761	762	,
O	763	766	and
O	767	772	treat
O	773	775	it
O	776	777	a
O	778	781	the
O	782	791	beginning
O	792	794	of
O	795	797	an
O	798	803	array
O	804	806	of
O	807	814	integer
O	814	815	,
O	816	819	and
O	820	824	pass
O	825	827	an
O	828	836	explicit
O	837	842	count
O	843	852	parameter
O	852	853	.

O	854	855	(
O	855	860	Quite
O	861	872	type-unsafe
O	872	873	,
O	874	876	of
O	877	883	course
O	883	884	.
O	884	885	)

O	886	889	Can
O	890	891	I
O	892	894	do
O	895	899	this
O	900	902	in
B-PL	903	907	Java
O	908	915	without
O	916	923	copying
O	924	927	the
O	928	933	three
O	934	942	elements
O	943	944	'
O	945	951	values
O	952	954	to
O	955	957	an
O	958	970	intermediate
O	971	976	array
O	976	977	?

O	978	990	Sub-question
O	991	992	:
O	993	996	Are
O	997	1000	the
O	1001	1006	array
O	1007	1015	elements
O	1015	1016	,
O	1017	1022	being
O	1023	1028	value
O	1029	1034	types
O	1034	1035	,
O	1036	1042	stored
O	1043	1045	at
O	1046	1057	consecutive
O	1058	1067	addresses
O	1068	1070	at
O	1071	1074	all
O	1074	1075	,
O	1076	1078	or
O	1079	1081	is
O	1082	1085	the
O	1086	1091	array
O	1092	1100	composed
O	1101	1103	of
O	1104	1112	elements
O	1113	1117	that
O	1118	1121	are
O	1122	1132	references
O	1133	1135	to
O	1136	1144	integers
O	1144	1145	?

O	1146	1151	Could
O	1152	1154	it
O	1155	1157	be
O	1158	1161	the
O	1162	1170	question
O	1171	1175	does
O	1176	1179	not
O	1180	1184	make
O	1185	1190	sense
O	1191	1198	because
O	1199	1203	even
O	1204	1206	if
O	1207	1210	the
O	1211	1217	answer
O	1218	1220	to
O	1221	1224	the
O	1225	1231	latter
O	1232	1235	was
O	1236	1237	"
O	1237	1240	yes
O	1240	1241	"
O	1241	1242	,
O	1243	1244	I
O	1245	1250	could
O	1251	1254	not
O	1255	1260	build
O	1261	1263	on
O	1264	1268	that
O	1269	1274	since
O	1275	1279	that
O	1280	1285	would
O	1286	1288	be
O	1289	1291	an
O	1292	1306	implementation
O	1307	1313	detail
O	1314	1318	that
O	1319	1320	a
B-PL	1321	1325	Java
O	1326	1332	source
O	1333	1337	must
O	1338	1341	not
O	1342	1347	build
O	1348	1352	upon
O	1353	1355	it
O	1355	1356	?

O	1357	1359	It
O	1360	1364	even
O	1365	1371	cannot
O	1372	1374	--
O	1375	1380	there
O	1381	1383	is
O	1384	1386	no
O	1387	1396	semantics
O	1397	1400	for
O	1401	1403	it
O	1403	1404	,
O	1405	1410	right
O	1410	1411	?

O	1412	1416	Edit
O	1417	1418	:
O	1419	1425	Stupid
O	1426	1431	index
O	1432	1437	error

O	1438	1441	You
O	1442	1448	cannot
O	1449	1455	return
O	1456	1457	a
O	1458	1463	range
O	1464	1465	/
O	1466	1472	subset
O	1473	1475	of
O	1476	1481	items
O	1482	1484	in
O	1485	1491	arrays
O	1492	1493	(
O	1493	1497	also
O	1498	1508	Collection
O	1508	1509	)
O	1510	1517	without
O	1518	1526	creating
O	1527	1528	a
O	1529	1532	new
O	1533	1541	instance
O	1542	1544	of
O	1545	1548	the
O	1549	1558	container
O	1558	1559	.

O	1560	1561	I
O	1562	1568	cannot
O	1569	1575	answer
O	1576	1579	the
O	1580	1586	second
O	1587	1594	without
O	1595	1603	guessing
O	1603	1604	,
O	1605	1608	but
O	1609	1611	IF
O	1612	1615	the
B-Fram	1616	1619	JVM
O	1620	1625	wants
O	1626	1628	to
O	1629	1637	allocate
O	1638	1639	2
O	1640	1647	regions
O	1648	1650	of
O	1651	1657	memory
O	1658	1661	for
O	1662	1665	one
O	1666	1671	array
O	1671	1672	,
O	1673	1675	it
O	1676	1679	can
O	1680	1682	do
O	1683	1685	it
O	1686	1693	without
O	1694	1697	you
O	1698	1705	knowing
O	1705	1706	.

O	1707	1710	You
O	1711	1714	can
O	1715	1718	use
O	1719	1723	List
O	1724	1731	instead
O	1732	1734	of
O	1735	1737	an
O	1738	1743	array
O	1743	1744	.

O	1745	1764	@codeSnippetRemoved

O	1765	1767	In
B-PL	1768	1769	C
O	1770	1771	/
B-PL	1772	1775	C++
O	1776	1780	this
O	1781	1786	would
O	1787	1789	be
O	1790	1798	terribly
O	1799	1803	easy
O	1804	1806	to
O	1807	1809	do
O	1810	1814	with
O	1815	1816	a
O	1817	1820	bit
O	1821	1823	of
O	1824	1831	pointer
O	1832	1842	arithmetic
O	1842	1843	,
O	1844	1847	but
O	1848	1850	in
B-PL	1851	1855	Java
O	1855	1856	,
O	1857	1858	I
O	1859	1861	am
O	1862	1865	not
O	1866	1868	so
O	1869	1873	sure
O	1874	1876	it
O	1877	1879	is
O	1880	1888	possible
O	1888	1889	.

O	1890	1893	The
O	1894	1898	best
O	1899	1902	you
O	1903	1908	could
O	1909	1911	do
O	1912	1914	is
O	1915	1918	use
O	1919	1922	the
B-API	1923	1934	copyOfRange
O	1935	1941	method
O	1942	1950	although
O	1951	1955	that
O	1956	1961	makes
O	1962	1963	a
O	1964	1968	deep
O	1969	1973	copy
O	1973	1974	.

O	0	4	Hide
O	5	12	private
O	13	17	keys
O	18	21	etc
O	22	26	from
O	27	41	administrators

O	42	51	Currently
O	52	53	I
O	54	58	take
O	59	63	part
O	64	66	in
O	67	77	developing
O	78	79	a
O	80	86	system
O	87	92	based
O	93	95	on
B-Plat	96	100	Java
I-Plat	101	103	EE
O	104	105	(
B-API	105	113	WebLogic
O	114	120	server
O	120	121	,
O	122	124	to
O	125	127	be
O	128	132	more
O	133	140	precise
O	140	141	)
O	142	145	and
O	146	147	I
O	148	150	am
O	151	160	wondering
O	161	164	how
O	165	167	to
O	168	175	protect
O	176	180	some
O	181	188	private
O	189	193	data
O	194	198	from
O	199	213	administrators
O	213	214	.

O	215	218	For
O	219	226	example
O	226	227	,
O	228	232	some
O	233	238	parts
O	239	241	of
O	242	243	a
O	244	250	system
O	251	257	stores
O	258	269	credentials
O	270	273	for
O	274	280	legacy
O	281	288	systems
O	289	291	in
O	292	293	a
O	294	304	deployment
O	305	316	descriptors
O	317	319	as
O	320	325	plain
O	326	330	text
O	331	334	and
O	335	339	this
O	340	342	is
O	343	346	bad
O	347	354	because
O	355	356	a
O	357	365	deployer
O	366	369	can
O	370	374	read
O	375	386	application
O	387	400	configuration
O	401	405	file
O	406	407	(
B-API	407	418	ejb-jar.xml
O	418	419	,
O	420	423	for
O	424	431	example
O	431	432	)
O	433	436	and
O	437	442	steal
O	443	451	username
O	452	455	and
O	456	464	password
O	465	468	for
O	469	478	powerfull
O	479	486	account
O	486	487	.

O	488	489	I
O	490	494	want
O	495	497	to
O	498	503	close
O	504	508	this
O	509	517	security
O	518	522	hole
O	522	523	,
O	524	527	but
O	528	533	don't
O	534	538	know
O	539	542	how
O	542	543	.

O	544	547	Now
O	548	549	I
O	550	552	am
O	553	563	interested
O	564	566	in
O	567	577	protecting
O	578	582	this
O	583	587	kind
O	588	590	of
O	591	595	data
O	596	597	:

O	598	603	Login
O	604	612	Password
O	613	620	Private
O	621	624	key
O	625	628	for
O	629	638	symmetric
O	639	649	encryption

O	650	654	From
O	655	659	here
O	660	664	I've
O	665	675	discovered
O	676	680	that
O	681	682	I
O	683	686	can
O	687	690	use
O	691	692	a
B-Stan	693	698	JCEKS
I-Stan	699	707	keystore
O	708	710	to
O	711	718	protect
O	719	723	this
O	724	728	type
O	729	731	of
O	732	743	information
O	743	744	,
O	745	748	but
O	749	750	I
O	751	754	can
O	755	758	not
O	759	769	understand
O	770	773	how
O	774	776	to
O	777	780	use
O	781	783	it
O	783	784	.

O	785	787	My
O	788	799	application
O	800	805	still
O	806	812	should
O	813	820	contain
O	821	824	the
O	825	832	kestore
O	833	841	password
O	842	845	and
O	846	849	the
O	850	853	key
O	854	862	password
O	863	865	to
O	866	872	access
O	873	875	it
O	875	876	.

O	877	879	So
O	879	880	,
O	881	882	a
O	883	890	depoyer
O	891	894	can
O	895	900	steal
O	901	910	passwords
O	911	914	for
O	915	924	keystores
O	925	928	and
O	929	933	keys
O	933	934	,
O	935	939	find
O	940	942	my
O	943	949	secure
O	950	957	storage
O	958	961	and
O	962	967	steal
O	968	978	credetials
O	978	979	.

O	980	989	Obviously
O	989	990	,
O	991	992	I
O	993	996	can
O	997	1003	revoke
O	1004	1008	read
O	1009	1019	privileges
O	1020	1024	from
O	1025	1028	the
O	1029	1037	deployer
O	1038	1045	account
O	1045	1046	,
O	1047	1050	but
O	1051	1055	then
O	1056	1058	he
O	1059	1062	can
O	1063	1072	decompile
O	1073	1075	my
O	1076	1087	appliaction
O	1088	1091	and
O	1092	1099	develop
O	1100	1103	his
O	1104	1107	own
O	1108	1115	similar
O	1116	1119	app
O	1120	1121	(
O	1121	1123	or
O	1124	1128	edit
O	1129	1131	my
O	1132	1135	one
O	1135	1136	)
O	1136	1137	,
O	1138	1142	that
O	1143	1149	simply
O	1150	1156	prints
O	1157	1163	secure
O	1164	1168	data
O	1169	1171	to
O	1172	1176	some
O	1177	1181	file
O	1182	1184	or
O	1185	1189	send
O	1190	1192	it
O	1193	1195	by
O	1196	1201	email
O	1202	1205	...

O	1206	1209	And
O	1210	1213	now
O	1214	1215	I
O	1216	1218	am
O	1219	1224	stuck
O	1225	1228	...

O	1229	1232	Can
O	1233	1240	anybody
O	1241	1245	give
O	1246	1248	me
O	1249	1253	some
O	1254	1259	links
O	1260	1264	that
O	1265	1268	can
O	1269	1276	explain
O	1277	1280	how
O	1281	1283	to
O	1284	1291	protect
O	1292	1293	a
O	1294	1300	system
O	1301	1305	from
O	1306	1320	administrators
O	1320	1321	?

B-API	1322	1330	Weblogic
O	1331	1338	related
O	1339	1344	links
O	1345	1349	will
O	1350	1352	be
O	1353	1363	preferable
O	1363	1364	.

O	1365	1366	I
O	1367	1374	totally
O	1375	1385	understand
O	1386	1390	that
O	1391	1393	it
O	1394	1396	is
O	1397	1400	not
O	1401	1409	possible
O	1410	1412	to
O	1413	1420	protect
O	1421	1425	from
O	1426	1429	all
O	1430	1444	administrators
O	1445	1448	and
O	1449	1454	there
O	1455	1461	should
O	1462	1464	be
O	1465	1469	some
O	1470	1478	security
O	1479	1492	administrator
O	1493	1497	that
O	1498	1502	will
O	1503	1505	be
O	1506	1517	responsible
O	1518	1521	for
O	1522	1530	keystore
O	1531	1541	management
O	1542	1545	and
O	1546	1548	so
O	1549	1554	forth
O	1554	1555	,
O	1556	1559	but
O	1560	1561	I
O	1562	1566	want
O	1567	1569	to
O	1570	1576	secure
O	1577	1580	all
O	1581	1590	sensitive
O	1591	1595	data
O	1596	1600	from
O	1601	1610	everybody
O	1611	1615	else
O	1615	1616	.

O	1617	1624	RESULTS

O	1625	1629	Both
O	1630	1639	jtahlborn
O	1640	1641	'
O	1642	1643	s
O	1644	1647	and
O	1648	1652	slim
O	1653	1654	'
O	1655	1656	s
O	1657	1664	answers
O	1665	1668	are
O	1669	1676	correct
O	1676	1677	,
O	1678	1681	but
O	1682	1687	slims
O	1688	1689	'
O	1690	1691	s
O	1692	1698	answer
O	1699	1701	in
O	1702	1706	more
O	1707	1718	interesting
O	1718	1719	.

O	1720	1721	I
O	1722	1727	think
O	1728	1732	that
O	1733	1735	in
O	1736	1738	my
O	1739	1743	case
O	1744	1746	it
O	1747	1751	will
O	1752	1754	be
O	1755	1766	appropriate
O	1767	1769	to
O	1770	1776	accept
O	1777	1781	only
O	1782	1788	signed
O	1789	1801	applications
O	1802	1805	for
O	1806	1818	installation
O	1819	1821	on
O	1822	1825	the
O	1826	1832	server
O	1832	1833	.

O	1834	1838	This
O	1839	1847	decidion
O	1848	1851	can
O	1852	1857	solve
O	1858	1865	problem
O	1866	1870	with
O	1871	1882	applicatoin
O	1883	1896	modifications
O	1897	1901	done
O	1902	1904	by
O	1905	1906	a
O	1907	1920	administrator
O	1920	1921	.

O	1922	1936	Administrators
O	1937	1941	will
O	1942	1946	have
O	1947	1955	password
O	1956	1960	from
O	1961	1969	keystore
O	1970	1973	and
O	1974	1977	all
O	1978	1982	keys
O	1982	1983	,
O	1984	1987	but
O	1988	1992	they
O	1993	1997	will
O	1998	2001	not
O	2002	2006	have
O	2007	2013	access
O	2014	2016	to
O	2017	2025	keystore
O	2026	2030	file
O	2031	2033	at
O	2034	2037	all
O	2037	2038	.

O	2039	2045	Access
O	2046	2048	to
O	2049	2057	keystore
O	2058	2062	file
O	2063	2067	will
O	2068	2072	have
O	2073	2077	only
O	2078	2085	special
O	2086	2094	security
O	2095	2109	administrators
O	2110	2111	(
O	2111	2112	'
O	2113	2115	rw
O	2116	2118	')
O	2119	2122	and
O	2123	2129	server
O	2130	2131	(
O	2131	2132	'
O	2133	2134	r
O	2135	2137	')
O	2137	2138	.

O	2139	2141	So
O	2141	2142	,
O	2143	2152	everybody
O	2153	2157	will
O	2158	2162	have
O	2163	2166	the
O	2167	2170	key
O	2170	2171	,
O	2172	2175	but
O	2176	2182	nobody
O	2183	2184	(
O	2184	2190	except
O	2191	2199	security
O	2200	2214	administrators
O	2214	2215	)
O	2216	2220	will
O	2221	2225	have
O	2226	2232	access
O	2233	2235	to
O	2236	2239	the
O	2240	2243	box
O	2243	2244	.

O	2245	2250	There
O	2251	2253	is
O	2254	2256	no
O	2257	2265	solution
O	2266	2268	to
O	2269	2273	this
O	2274	2281	problem
O	2282	2288	unless
O	2289	2292	you
O	2293	2298	enter
O	2299	2304	login
O	2305	2316	credentials
O	2317	2319	at
O	2320	2331	application
O	2332	2339	startup
O	2340	2341	(
O	2341	2349	assuming
O	2350	2353	the
O	2354	2359	admin
O	2360	2366	cannot
O	2367	2373	access
O	2374	2377	the
O	2378	2389	application
O	2390	2396	memory
O	2396	2397	,
O	2398	2403	which
O	2404	2407	may
O	2408	2411	not
O	2412	2414	be
O	2415	2416	a
O	2417	2421	safe
O	2422	2432	assumption
O	2432	2433	)
O	2433	2434	.
O	2435	2438	any
O	2439	2447	solution
O	2448	2453	which
O	2454	2462	involves
O	2463	2466	the
O	2467	2471	keys
O	2472	2479	sitting
O	2480	2482	in
O	2483	2486	the
O	2487	2491	same
O	2492	2497	place
O	2498	2500	as
O	2501	2504	the
O	2505	2516	application
O	2517	2521	will
O	2522	2528	result
O	2529	2531	in
O	2532	2534	an
O	2535	2548	administrator
O	2549	2550	(
O	2550	2554	with
O	2555	2566	application
O	2567	2577	filesystem
O	2578	2584	access
O	2584	2585	)
O	2586	2591	being
O	2592	2596	able
O	2597	2599	to
O	2600	2606	access
O	2607	2610	any
O	2611	2620	sensitive
O	2621	2625	data
O	2626	2636	accessible
O	2637	2639	by
O	2640	2643	the
O	2644	2655	application
O	2655	2656	.
O	2657	2661	this
O	2662	2664	is
O	2665	2672	similar
O	2673	2675	to
O	2676	2679	the
O	2680	2683	DRM
O	2684	2691	problem
O	2692	2693	(
O	2693	2696	you
O	2697	2702	can't
O	2703	2707	give
O	2708	2715	someone
O	2716	2717	a
O	2718	2724	locked
O	2725	2728	box
O	2729	2732	and
O	2733	2736	the
O	2737	2741	keys
O	2742	2745	and
O	2746	2752	expect
O	2753	2757	that
O	2758	2762	they
O	2763	2768	can't
O	2769	2773	open
O	2774	2777	the
O	2778	2781	box
O	2781	2782	)
O	2782	2783	.

O	2784	2785	I
O	2786	2791	think
O	2792	2795	the
O	2796	2800	meat
O	2801	2803	of
O	2804	2808	this
O	2809	2817	question
O	2818	2820	is
O	2821	2823	in
O	2824	2827	the
O	2828	2838	definition
O	2839	2841	of
O	2842	2843	"
O	2843	2848	admin
O	2848	2849	"
O	2849	2850	.

O	2851	2857	You've
O	2858	2862	said
O	2863	2867	that
O	2868	2874	you're
O	2875	2886	comfortable
O	2887	2891	with
O	2892	2893	a
O	2894	2895	"
O	2895	2903	security
O	2904	2909	admin
O	2909	2910	"
O	2911	2914	who
O	2915	2919	does
O	2920	2924	have
O	2925	2931	access
O	2932	2934	to
O	2935	2938	key
O	2939	2945	stores
O	2945	2946	.

O	2947	2960	Traditionally
O	2960	2961	,
B-Plat	2962	2966	UNIX
O	2967	2972	types
O	2973	2978	think
O	2979	2981	of
O	2982	2983	"
O	2983	2988	admin
O	2988	2989	"
O	2990	2992	as
O	2993	2998	being
O	2999	3002	the
O	3003	3004	"
O	3004	3008	root
O	3008	3009	"
O	3010	3014	user
O	3015	3016	-
O	3017	3024	someone
O	3025	3029	with
O	3030	3036	access
O	3037	3039	to
O	3040	3050	everything
O	3051	3053	on
O	3054	3057	the
O	3058	3065	machine
O	3065	3066	.

O	3067	3071	Root
O	3072	3075	can
O	3076	3078	do
O	3079	3088	literally
O	3089	3097	anything
O	3097	3098	,
O	3099	3104	right
O	3105	3109	down
O	3110	3112	to
O	3113	3120	peeking
O	3121	3124	and
O	3125	3131	poking
O	3132	3134	at
O	3135	3146	application
O	3147	3153	memory
O	3153	3154	,
O	3155	3157	or
O	3158	3165	reading
O	3166	3167	/
O	3168	3175	writing
O	3176	3178	to
O	3179	3182	raw
O	3183	3187	disk
O	3188	3197	addresses
O	3197	3198	.

O	3199	3201	If
O	3202	3205	the
O	3206	3212	server
O	3213	3216	can
O	3217	3220	get
O	3221	3222	a
O	3223	3230	private
O	3231	3234	key
O	3234	3235	,
O	3236	3238	so
O	3239	3242	can
O	3243	3247	root
O	3247	3248	.

O	3249	3251	If
O	3252	3255	you
O	3256	3260	want
O	3261	3263	to
O	3264	3270	define
O	3271	3273	an
O	3274	3275	"
O	3275	3280	admin
O	3280	3281	"
O	3282	3286	role
O	3287	3291	with
O	3292	3296	more
O	3297	3304	limited
O	3305	3311	access
O	3311	3312	,
O	3313	3317	then
O	3318	3321	yes
O	3321	3322	,
O	3323	3326	you
O	3327	3332	could
O	3333	3336	set
O	3337	3339	up
O	3340	3349	something
O	3350	3355	where
O	3356	3360	such
O	3361	3366	users
O	3367	3374	existed
O	3374	3375	.

O	3376	3380	They
O	3381	3386	would
O	3387	3391	need
O	3392	3394	to
O	3395	3399	have
O	3400	3405	fewer
O	3406	3416	privileges
O	3417	3421	than
O	3422	3425	the
O	3426	3432	server
O	3433	3444	application
O	3445	3451	itself
O	3451	3452	,
O	3453	3458	since
O	3459	3464	there
O	3465	3467	is
O	3468	3470	at
O	3471	3476	least
O	3477	3480	one
O	3481	3486	thing
O	3487	3490	the
O	3491	3494	app
O	3495	3498	can
O	3499	3501	do
O	3502	3503	(
O	3503	3506	get
O	3507	3508	a
O	3509	3516	private
O	3517	3520	key
O	3520	3521	)
O	3522	3526	that
O	3527	3530	the
O	3531	3532	"
O	3532	3537	admin
O	3537	3538	"
O	3539	3545	cannot
O	3545	3546	.

O	3547	3551	Such
O	3552	3553	a
O	3554	3558	user
O	3559	3567	probably
O	3568	3576	wouldn't
O	3577	3579	be
O	3580	3584	able
O	3585	3587	to
O	3588	3595	install
O	3596	3599	the
O	3600	3603	app
O	3604	3610	either
O	3611	3612	(
O	3612	3617	since
O	3617	3618	,
O	3619	3621	if
O	3622	3626	they
O	3627	3632	could
O	3632	3633	,
O	3634	3638	they
O	3639	3644	could
O	3645	3651	create
O	3652	3655	and
O	3656	3663	install
O	3664	3665	a
O	3666	3673	version
O	3674	3676	of
O	3677	3680	the
O	3681	3684	app
O	3685	3690	which
O	3691	3698	exposes
O	3699	3702	the
O	3703	3710	private
O	3711	3714	key
O	3714	3715	)
O	3715	3716	.

O	3717	3721	Your
O	3722	3723	"
O	3723	3728	admin
O	3728	3729	"
O	3730	3738	couldn't
O	3739	3748	therefore
O	3749	3755	deploy
O	3756	3759	the
O	3760	3769	component
O	3770	3774	that
O	3775	3780	works
O	3781	3785	with
O	3786	3789	the
O	3790	3797	private
O	3798	3801	key
O	3801	3802	.

O	3803	3807	They
O	3808	3813	could
O	3813	3814	,
O	3815	3822	however
O	3822	3823	,
O	3824	3835	potentially
O	3836	3842	deploy
O	3843	3844	a
O	3845	3851	module
O	3852	3856	that
O	3857	3861	runs
O	3862	3868	within
O	3869	3873	that
O	3874	3883	container
O	3884	3885	(
O	3885	3887	as
O	3888	3892	long
O	3893	3895	as
O	3896	3899	the
O	3900	3909	container
O	3910	3916	cannot
O	3917	3923	supply
O	3924	3927	the
O	3928	3935	private
O	3936	3939	key
O	3940	3942	to
O	3943	3946	the
O	3947	3953	module
O	3953	3954	)
O	3954	3955	.

O	3956	3963	However
O	3963	3964	,
O	3965	3967	it
O	3968	3969	'
O	3970	3971	s
O	3972	3975	not
O	3976	3980	just
O	3981	3984	the
O	3985	3988	key
O	3989	3992	you
O	3993	3997	want
O	3998	4000	to
O	4001	4008	protect
O	4008	4009	.

O	4010	4013	The
O	4014	4018	real
O	4019	4020	"
O	4020	4026	secret
O	4026	4027	"
O	4028	4030	is
O	4031	4034	the
O	4035	4039	data
O	4040	4049	encrypted
O	4050	4055	using
O	4056	4059	the
O	4060	4063	key
O	4063	4064	.

O	4065	4067	So
O	4068	4070	we
O	4071	4076	still
O	4077	4081	have
O	4082	4083	a
O	4084	4091	problem
O	4092	4096	with
O	4097	4100	the
O	4101	4109	approach
O	4110	4115	above
O	4115	4116	.

O	4117	4119	If
O	4120	4123	the
O	4124	4130	module
O	4131	4134	can
O	4135	4139	read
O	4140	4143	the
O	4144	4153	encrypted
O	4154	4158	data
O	4158	4159	,
O	4160	4164	then
O	4165	4167	so
O	4168	4171	can
O	4172	4174	an
O	4175	4176	"
O	4176	4181	admin
O	4181	4182	"
O	4183	4187	with
O	4188	4191	the
O	4192	4196	same
O	4197	4207	privileges
O	4208	4210	as
O	4211	4214	the
O	4215	4221	module
O	4221	4222	.

O	4223	4226	And
O	4227	4231	that
O	4232	4240	includes
O	4241	4247	anyone
O	4248	4251	who
O	4252	4255	can
O	4256	4263	install
O	4264	4267	the
O	4268	4274	module
O	4274	4275	.

O	4276	4279	You
O	4280	4285	could
O	4286	4297	investigate
O	4298	4302	ways
O	4303	4305	to
O	4306	4310	sign
O	4311	4314	the
O	4315	4321	module
O	4321	4322	,
O	4323	4325	so
O	4326	4330	that
O	4331	4333	an
O	4334	4335	"
O	4335	4340	admin
O	4340	4341	"
O	4342	4347	could
O	4348	4351	not
O	4352	4358	create
O	4359	4364	their
O	4365	4368	own
O	4369	4376	version
O	4376	4377	.

O	4378	4383	There
O	4384	4389	comes
O	4390	4391	a
O	4392	4397	point
O	4397	4398	,
O	4399	4405	though
O	4405	4406	,
O	4407	4412	where
O	4413	4416	the
O	4417	4425	measures
O	4426	4434	required
O	4435	4437	to
O	4438	4444	enable
O	4445	4458	untrustworthy
O	4459	4465	admins
O	4465	4466	,
O	4467	4473	become
O	4474	4478	more
O	4479	4488	expensive
O	4489	4490	(
O	4490	4492	in
O	4493	4498	terms
O	4499	4501	of
O	4502	4506	time
O	4507	4510	and
O	4511	4517	effort
O	4517	4518	)
O	4519	4523	than
O	4524	4530	simply
O	4531	4536	using
O	4537	4548	trustworthy
O	4549	4555	admins
O	4555	4556	.

O	4557	4559	So
O	4559	4560	,
O	4561	4564	you
O	4565	4569	need
O	4570	4572	to
O	4573	4577	make
O	4578	4579	a
O	4580	4584	list
O	4585	4587	of
O	4588	4594	things
O	4595	4599	your
O	4600	4602	so
O	4603	4609	called
O	4610	4611	"
O	4611	4616	admin
O	4616	4617	"
O	4618	4621	can
O	4622	4624	do
O	4624	4625	.

O	4626	4635	Depending
O	4636	4638	on
O	4639	4643	what
O	4644	4649	those
O	4650	4656	things
O	4657	4660	are
O	4660	4661	,
O	4662	4664	it
O	4665	4668	may
O	4669	4673	well
O	4674	4676	be
O	4677	4685	possible
O	4686	4688	to
O	4689	4694	allow
O	4695	4696	a
O	4697	4705	non-root
O	4706	4710	user
O	4711	4713	to
O	4714	4716	do
O	4717	4722	those
O	4723	4729	things
O	4729	4730	.

O	4731	4733	On
B-Plat	4734	4738	UNIX
O	4738	4739	,
O	4740	4743	you
O	4744	4749	might
O	4750	4753	use
O	4754	4755	a
O	4756	4760	tool
O	4761	4765	like
O	4766	4770	sudo
O	4771	4773	to
O	4774	4779	allow
O	4780	4781	a
O	4782	4790	non-root
O	4791	4795	user
O	4796	4798	to
O	4799	4801	do
O	4802	4808	things
O	4809	4813	like
O	4814	4819	start
O	4820	4821	/
O	4822	4826	stop
O	4827	4830	the
O	4831	4837	server
O	4837	4838	,
O	4839	4843	read
O	4844	4848	logs
O	4848	4849	,
O	4850	4855	clean
O	4856	4860	logs
O	4860	4861	,
O	4862	4865	etc
O	4865	4866	.

O	4867	4869	It
O	4870	4875	might
O	4876	4878	be
O	4879	4887	possible
O	4888	4890	to
O	4891	4899	separate
O	4900	4903	the
O	4904	4918	authentication
O	4919	4923	from
O	4924	4927	the
O	4928	4932	rest
O	4933	4935	of
O	4936	4939	the
O	4940	4951	application
O	4951	4952	.

O	4953	4956	For
O	4957	4964	example
O	4964	4965	,
O	4966	4968	if
O	4969	4972	you
O	4973	4984	communicate
O	4985	4989	with
O	4990	4993	the
O	4994	5000	legacy
O	5001	5008	systems
O	5009	5012	via
O	5013	5014	a
B-Stan	5015	5026	TLS-secured
I-Stan	5027	5033	socket
O	5033	5034	,
O	5035	5038	you
O	5039	5044	could
O	5045	5050	write
O	5051	5052	a
O	5053	5058	small
O	5059	5067	separate
O	5068	5079	application
O	5080	5084	that
O	5085	5092	accepts
O	5093	5104	unencrypted
O	5105	5116	connections
O	5117	5121	from
O	5122	5125	the
O	5126	5137	application
O	5137	5138	,
O	5139	5143	then
O	5144	5149	makes
O	5150	5151	a
O	5152	5158	secure
O	5158	5159	,
O	5160	5173	authenticated
O	5173	5174	,
O	5175	5185	connection
O	5186	5188	to
O	5189	5192	the
O	5193	5199	legacy
O	5200	5206	system
O	5206	5207	,
O	5208	5211	and
O	5212	5217	pumps
O	5218	5222	data
O	5223	5230	between
O	5231	5234	the
O	5235	5246	application
O	5247	5250	and
O	5251	5254	the
O	5255	5261	legacy
O	5262	5268	system
O	5268	5269	.

O	5270	5281	Essentially
O	5281	5282	,
O	5283	5285	it
O	5286	5287	'
O	5288	5289	s
O	5290	5292	an
O	5293	5307	authenticating
O	5308	5313	proxy
O	5313	5314	.

O	5315	5319	Then
O	5319	5320	,
O	5321	5324	the
O	5325	5336	application
O	5337	5345	wouldn't
O	5346	5350	need
O	5351	5356	these
O	5357	5361	keys
O	5361	5362	.

O	5363	5366	You
O	5367	5372	could
O	5373	5380	install
O	5381	5384	and
O	5385	5392	operate
O	5393	5396	the
O	5397	5408	application
O	5409	5411	as
O	5412	5413	a
O	5414	5418	user
O	5419	5422	who
O	5423	5429	didn't
O	5430	5434	have
O	5435	5445	permission
O	5446	5448	to
O	5449	5453	read
O	5454	5457	the
O	5458	5463	files
O	5464	5474	containing
O	5475	5478	the
O	5479	5482	key
O	5482	5483	,
O	5484	5487	but
O	5488	5491	the
O	5492	5503	application
O	5504	5509	could
O	5510	5515	still
O	5516	5527	communicate
O	5528	5532	with
O	5533	5536	the
O	5537	5543	legacy
O	5544	5551	systems
O	5551	5552	.

O	5553	5555	Of
O	5556	5562	course
O	5562	5563	,
O	5564	5567	now
O	5568	5571	you
O	5572	5576	have
O	5577	5580	the
O	5581	5588	problem
O	5589	5591	of
O	5592	5595	how
O	5596	5598	to
O	5599	5611	authenticate
O	5612	5615	the
O	5616	5627	application
O	5628	5630	to
O	5631	5634	the
O	5635	5640	proxy
O	5640	5641	.

O	5642	5645	You
O	5646	5651	might
O	5652	5656	feel
O	5657	5661	that
O	5662	5665	the
O	5666	5673	machine
O	5674	5676	is
O	5677	5683	secure
O	5684	5690	enough
O	5691	5695	that
O	5696	5699	you
O	5700	5705	don't
O	5706	5710	need
O	5711	5713	to
O	5714	5716	do
O	5717	5721	that
O	5722	5724	at
O	5725	5728	all
O	5729	5730	-
O	5731	5733	as
O	5734	5738	long
O	5739	5741	as
O	5742	5745	the
O	5746	5751	proxy
O	5752	5756	only
O	5757	5764	listens
O	5765	5767	on
O	5768	5771	the
O	5772	5780	loopback
O	5781	5790	interface
O	5790	5791	.

O	5792	5794	If
O	5795	5798	not
O	5798	5799	,
O	5800	5802	if
O	5803	5806	you
O	5807	5812	could
O	5813	5816	use
O	5817	5818	a
B-Plat	5819	5823	unix
O	5824	5830	domain
O	5831	5837	socket
O	5838	5845	instead
O	5845	5846	,
O	5847	5851	then
O	5852	5855	you
O	5856	5861	could
O	5862	5869	control
O	5870	5876	access
O	5877	5882	using
O	5883	5893	filesystem
O	5894	5905	permissions
O	5906	5907	:
O	5908	5911	you
O	5912	5917	could
O	5918	5921	run
O	5922	5925	the
O	5926	5937	application
O	5938	5940	as
O	5941	5945	some
O	5946	5950	user
O	5951	5953	in
O	5954	5958	some
O	5959	5969	particular
O	5970	5975	group
O	5975	5976	,
O	5977	5981	then
O	5982	5990	restrict
O	5991	5997	access
O	5998	6000	to
O	6001	6004	the
O	6005	6011	socket
O	6012	6014	to
O	6015	6022	members
O	6023	6025	of
O	6026	6030	that
O	6031	6036	group
O	6036	6037	.

B-PL	6038	6042	Java
O	6043	6050	doesn't
O	6051	6055	have
B-Plat	6056	6060	unix
O	6061	6067	domain
O	6068	6074	socket
O	6075	6082	support
O	6083	6085	in
O	6086	6089	the
O	6090	6098	standard
O	6099	6106	library
O	6106	6107	,
O	6108	6111	but
O	6112	6115	you
O	6116	6119	can
O	6120	6123	add
O	6124	6126	it
O	6127	6131	with
B-API	6132	6143	junixsocket
O	6144	6146	or
B-API	6147	6151	JUDS
O	6151	6152	.

O	0	6	Change
B-API	7	13	JLabel
O	14	18	text
O	19	23	from
O	24	31	another
O	32	37	class

O	38	39	I
O	40	44	have
O	45	48	the
O	49	58	following
O	59	64	class
O	65	69	that
O	70	75	draws
O	76	77	a
O	78	83	Label
O	83	84	.

O	85	86	(
O	86	87	I
O	88	92	have
O	93	97	only
O	98	103	given
O	104	108	part
O	109	111	of
O	112	115	the
O	116	120	code
O	121	125	here
O	125	126	)
O	126	127	.

O	128	138	Everyhting
O	139	144	works
O	145	149	fine
O	149	150	,
O	151	154	the
O	155	160	label
O	161	165	gets
O	166	175	displayed
O	175	176	.

O	177	180	Now
O	180	181	,
O	182	183	i
O	184	188	have
O	189	196	another
O	197	202	class
O	203	209	called
B-API	210	216	Caller
O	217	222	Class
O	222	223	.

O	224	225	I
O	226	230	have
O	231	232	a
O	233	239	method
O	240	242	in
O	243	247	that
O	248	253	where
O	254	255	i
O	256	260	will
O	261	264	use
O	265	267	to
O	268	274	change
O	275	278	the
O	279	284	value
O	285	287	of
O	288	292	this
O	293	298	label
O	298	299	.
O	300	303	how
O	304	307	can
O	308	309	i
O	310	312	do
O	313	317	that

O	318	323	later
O	324	326	on
O	326	327	,
O	328	329	i
O	330	334	will
O	335	337	be
O	338	343	using
O	344	347	the
O	348	357	following
O	358	363	class
O	364	366	to
O	367	373	change
O	374	377	the
O	378	382	text
O	383	385	of
O	386	389	the
O	390	395	above
O	396	401	label
O	401	402	.

O	403	406	How
O	407	410	can
O	411	412	i
O	413	415	do
O	416	420	this
O	420	421	.

O	422	423	1
O	423	424	.

O	425	426	)
O	427	431	When
O	432	435	the
O	436	445	methodA()
O	446	448	is
O	449	457	executed
O	457	458	,
O	459	462	the
O	463	467	text
O	468	473	Hello
O	474	476	is
O	477	480	not
O	481	488	getting
O	489	498	displayed
O	499	501	on
O	502	505	the
O	506	511	Label
O	512	517	field
O	517	518	.

O	519	521	it
O	522	527	still
O	528	535	remains
O	536	538	as
O	539	544	Whooo
O	544	545	.

O	546	549	How
O	550	553	can
O	554	555	i
O	556	563	correct
O	564	568	this
O	568	569	.

O	570	571	I
O	572	576	want
O	577	580	the
O	581	586	label
O	587	591	text
O	592	594	to
O	595	597	be
O	598	603	Hello
O	604	608	once
O	609	613	that
O	614	620	method
O	621	624	has
O	625	629	been
O	630	638	executed
O	638	639	.

O	640	643	The
O	644	654	immeditate
O	655	662	problem
O	663	664	I
O	665	668	can
O	669	672	see
O	673	675	is
O	676	678	to
O	679	686	appears
O	687	691	that
O	692	695	you
O	696	699	are
O	700	706	either
O	707	712	using
O	713	714	a
O	715	719	null
O	720	726	layout
O	727	729	or
O	730	734	your
O	735	740	don't
O	741	751	understand
O	752	755	how
O	756	762	layout
O	763	771	managers
O	772	776	work
O	776	777	.

O	778	781	The
O	782	791	following
O	792	796	code
O	797	804	updates
O	805	808	the
O	809	814	label
O	815	819	from
O	820	823	the
O	824	828	main
O	829	834	class
O	835	837	in
O	838	839	a
O	840	843	sub
O	844	849	class
O	850	853	via
O	854	855	a
B-API	856	863	setText
O	864	870	method
O	871	875	call
O	875	876	.

O	877	881	This
O	882	888	method
O	889	891	is
O	892	898	called
O	899	904	every
O	905	911	second

O	912	914	If
O	915	921	you're
O	922	927	using
O	928	929	a
O	930	934	null
O	935	941	layout
O	941	942	,
O	943	947	then
O	948	952	stop
O	953	955	it
O	955	956	.

O	957	961	Just
O	962	967	don't
O	967	968	.

O	969	974	There
O	975	978	are
O	979	983	only
O	984	985	a
O	986	990	very
O	991	996	small
O	997	1003	number
O	1004	1006	of
O	1007	1012	times
O	1013	1016	you
O	1017	1022	would
O	1023	1027	ever
O	1028	1031	use
O	1032	1033	a
O	1034	1038	null
O	1039	1045	layout
O	1046	1049	and
O	1050	1051	I
O	1052	1059	suspect
O	1060	1064	this
O	1065	1070	isn't
O	1071	1074	one
O	1075	1077	of
O	1078	1082	them
O	1082	1083	.

O	0	7	Trouble
O	8	12	with
B-API	13	20	web.xml
O	21	24	url
O	25	32	pattern

O	33	35	In
O	36	38	my
B-API	39	46	web.xml
O	47	48	I
O	49	53	have
O	54	57	URL
O	58	65	pattern
O	66	69	for
B-Stan	70	77	servlet
O	78	82	like
O	83	87	this
O	88	89	:

O	90	101	url-pattern
O	102	103	/
O	104	105	*
O	106	107	/
O	108	117	myservice
O	118	119	/
O	120	131	url-pattern

O	132	134	So
O	135	136	I
O	137	141	want
O	142	144	to
O	145	149	call
O	150	152	it
O	153	158	using
O	159	168	blablabla
O	169	170	/
O	171	180	myservice
O	181	185	also
O	186	188	as
O	189	196	anyWord
O	197	198	/
O	199	208	myservice
O	208	209	.

O	210	213	But
O	214	216	it
O	217	224	doesn't
O	225	229	work
O	229	230	.

O	231	233	It
O	234	238	work
O	239	243	only
O	244	246	if
O	247	248	I
O	249	253	call
O	254	256	it
O	257	262	using
O	263	267	this
O	268	271	URL
O	272	273	:
O	274	275	/
O	276	277	*
O	278	279	/
O	280	289	myservice
O	290	291	(
O	291	295	with
O	296	304	asterisk
O	305	307	in
O	308	311	URL
O	311	312	)
O	312	313	.

O	314	317	You
O	318	323	can't
O	324	326	do
O	327	341	that.According
O	342	344	to
O	345	348	the
B-Stan	349	356	Servlet
I-Stan	357	360	2.5
O	361	374	Specification
O	375	376	(
O	376	379	and
O	380	386	things
O	387	393	aren't
O	394	398	that
O	399	408	different
O	409	411	in
O	412	417	other
O	418	424	levels
O	425	427	of
O	428	431	the
O	432	445	specification
O	445	446	)
O	446	447	,
O	448	455	chapter
O	456	464	SRV.11.2
O	465	466	:

O	467	468	A
O	469	475	string
O	476	485	beginning
O	486	490	with
O	491	492	a
O	493	494	/
O	495	504	character
O	505	508	and
O	509	515	ending
O	516	520	with
O	521	522	a
O	523	524	/
O	525	526	*
O	527	535	suffixis
O	536	540	used
O	541	544	for
O	545	549	path
O	550	557	mapping
O	557	558	.

O	559	560	A
O	561	567	string
O	568	577	beginning
O	578	582	with
O	583	584	a
O	585	586	*
O	586	587	.
O	588	594	prefix
O	595	597	is
O	598	602	used
O	603	605	as
O	606	608	an
O	609	618	extension
O	619	626	mapping
O	626	627	.

O	628	629	A
O	630	636	string
O	637	647	containing
O	648	652	only
O	653	656	the
O	657	658	/
O	659	668	character
O	669	678	indicates
O	679	682	the
O	683	684	"
O	684	691	default
O	691	692	"
B-Stan	693	700	servlet
O	701	703	of
O	704	707	the
O	708	719	application
O	719	720	.

O	721	723	In
O	724	728	this
O	729	733	case
O	734	737	the
B-Stan	738	745	servlet
O	746	750	path
O	751	753	is
O	754	757	the
O	758	765	request
O	766	769	URI
O	770	775	minus
O	776	779	the
O	780	787	context
O	788	792	path
O	793	799	andthe
O	800	804	path
O	805	809	info
O	810	812	is
O	813	817	null
O	817	818	.

O	819	822	All
O	823	828	other
O	829	836	strings
O	837	840	are
O	841	845	used
O	846	849	for
O	850	855	exact
O	856	863	matches
O	864	868	only
O	868	869	.

O	870	874	Your
O	875	879	case
O	880	885	falls
O	886	891	under
O	892	895	the
O	896	899	4th
O	900	906	bullet
O	906	907	,
O	908	910	so
O	911	916	exact
O	917	924	mapping
O	925	927	is
O	928	932	used
O	932	933	.

O	934	936	To
O	937	947	circumvent
O	948	952	that
O	952	953	,
O	954	957	use
O	958	959	a
O	960	967	mapping
O	968	970	of
O	971	972	/
O	973	974	(
O	974	979	third
O	980	984	case
O	984	985	)
O	985	986	.

O	987	990	Map
O	991	994	all
O	995	1003	requests
O	1004	1006	to
O	1007	1009	go
O	1010	1012	to
O	1013	1014	a
O	1015	1025	particular
B-Stan	1026	1033	servlet
O	1033	1034	,
O	1035	1038	and
O	1039	1043	have
O	1044	1048	that
B-Stan	1049	1056	servlet
O	1057	1065	re-route
O	1066	1074	requests
O	1075	1077	to
O	1078	1086	handlers
O	1087	1089	of
O	1090	1094	some
O	1095	1099	sort
O	1100	1101	(
O	1101	1107	either
O	1108	1113	other
O	1114	1122	servlets
O	1122	1123	,
O	1124	1126	or
O	1127	1131	some
O	1132	1138	custom
O	1139	1146	classes
O	1146	1147	)
O	1147	1148	.

O	1149	1152	For
O	1153	1160	example
O	1161	1162	:
O	1163	1182	@codeSnippetRemoved

O	1183	1186	And
O	1187	1191	then
O	1191	1192	,
O	1193	1199	within
O	1200	1209	MyServlet
O	1210	1211	'
O	1212	1213	s
O	1214	1218	code
O	1218	1219	,
O	1220	1227	inspect
O	1228	1231	the
O	1232	1235	URL
O	1236	1240	that
O	1241	1244	you
O	1245	1253	received
O	1254	1256	in
O	1257	1260	the
O	1261	1268	request
O	1269	1270	(
O	1270	1275	using
B-API	1276	1297	request.getPathInfo()
O	1297	1298	)
O	1299	1302	and
O	1303	1306	use
O	1307	1310	the
O	1311	1316	value
O	1317	1319	to
O	1320	1327	forward
O	1328	1331	the
O	1332	1339	request
O	1340	1342	to
O	1343	1348	other
O	1349	1357	handlers
O	1357	1358	.

O	1359	1362	You
O	1363	1368	could
O	1369	1372	use
O	1373	1374	a
O	1375	1381	filter
O	1382	1387	while
O	1388	1392	your
O	1393	1396	url
O	1397	1404	pattern
O	1405	1407	is
O	1408	1409	/
O	1410	1411	*
O	1412	1415	and
O	1416	1422	inside
O	1423	1426	the
O	1427	1433	filter
O	1434	1440	decide
O	1441	1446	which
O	1447	1458	redirection
O	1459	1462	you
O	1463	1471	required
O	1471	1472	.

O	1473	1492	@codeSnippetRemoved

O	1493	1512	@codeSnippetRemoved

O	1513	1517	What
O	1518	1523	about
O	1524	1527	two
O	1528	1539	ULR-mapping
O	1540	1548	sections
O	1548	1549	?

O	1550	1569	@codeSnippetRemoved

O	0	3	How
O	4	7	can
O	8	11	set
O	12	20	location
O	21	24	for
O	25	27	my
O	28	31	swt
O	32	36	file
O	37	43	dialog
O	43	44	?

O	45	46	I
O	47	51	have
O	52	54	an
O	55	66	application
O	67	72	where
O	73	74	i
O	75	79	want
O	80	82	to
O	83	90	display
O	91	94	swt
O	95	99	file
O	100	106	dialog
O	107	110	but
O	111	113	in
O	114	121	defined
O	122	130	location
O	131	132	(
O	132	133	i
O	134	138	want
O	139	141	it
O	142	149	display
O	150	159	somewhere
O	160	164	down
O	164	165	)
O	166	168	.I
O	169	171	am
O	172	175	not
O	176	183	getting
O	184	187	any
O	188	194	method
O	195	198	for
O	199	207	that.Any
O	208	212	help
O	213	215	on
O	216	220	this
O	221	223	is
O	224	235	appreciated
O	236	239	...

O	240	245	Isn't
B-API	246	256	FileDialog
O	257	271	#setFilterPath
O	272	273	(
O	273	274	)
O	275	279	what
O	280	283	you
O	284	287	are
O	288	295	looking
O	296	299	for
O	299	300	?

O	301	302	:

O	303	307	Sets
O	308	311	the
O	312	321	directory
O	322	326	path
O	327	331	that
O	332	335	the
O	336	342	dialog
O	343	347	will
O	348	351	use
O	352	354	to
O	355	358	the
O	359	367	argument
O	367	368	,
O	369	374	which
O	375	378	may
O	379	381	be
O	382	386	null
O	386	387	.

O	388	392	File
O	393	398	names
O	399	401	in
O	402	406	this
O	407	411	path
O	412	416	will
O	417	423	appear
O	424	426	in
O	427	430	the
O	431	437	dialog
O	437	438	,
O	439	447	filtered
O	448	457	according
O	458	460	to
O	461	464	the
O	465	471	filter
O	472	482	extensions
O	482	483	.

O	484	486	If
O	487	490	the
O	491	497	string
O	498	500	is
O	501	505	null
O	505	506	,
O	507	511	then
O	512	515	the
O	516	525	operating
O	526	532	system
O	533	534	'
O	535	536	s
O	537	544	default
O	545	551	filter
O	552	556	path
O	557	561	will
O	562	564	be
O	565	569	used
O	569	570	.

O	571	580	Currently
O	581	584	the
O	585	588	API
O	589	596	doesn't
O	597	604	support
O	605	607	to
O	608	611	set
O	612	615	the
O	616	624	location
O	625	627	of
O	628	631	the
B-API	632	642	FileDialog
O	643	647	.But
O	648	653	there
O	654	656	is
O	657	658	a
O	659	665	little
O	666	670	hack
O	671	672	/
O	673	683	workaround
O	684	687	for
O	688	692	that
O	692	693	.

O	694	697	All
O	698	701	you
O	702	706	need
O	707	709	is
O	710	712	to
O	713	719	create
O	720	722	an
O	723	732	invisible
B-API	733	738	Shell
O	739	742	and
O	743	746	set
O	747	750	the
O	751	759	location
O	759	760	.

O	761	764	The
B-API	765	775	FileDialog
O	776	783	decides
O	784	787	its
O	788	796	location
O	797	802	based
O	803	805	on
O	806	809	the
O	810	816	parent
O	816	817	.

O	818	820	It
O	821	826	seems
O	827	828	a
O	829	832	bit
O	833	840	complex
O	841	843	to
O	844	848	know
O	849	852	the
O	853	858	exact
O	859	870	coordinates
O	871	873	to
B-API	874	885	setLocation
O	886	888	on
B-API	889	894	Shell
O	895	898	but
O	898	899	,
O	900	901	I
O	902	907	leave
O	908	910	it
O	911	913	to
O	914	917	you
O	918	920	to
O	921	923	do
O	924	928	some
O	929	941	Permutations
O	942	945	and
O	946	958	Combinations
O	959	961	to
O	962	966	know
O	967	971	them
O	971	972	.

O	973	977	Here
O	978	980	is
O	981	984	the
O	985	989	code
O	990	995	which
O	996	1002	solves
O	1003	1007	your
O	1008	1015	problem
O	1016	1035	@codeSnippetRemoved

O	1036	1040	When
O	1041	1048	showing
O	1049	1052	the
B-API	1053	1063	FileDialog
O	1064	1066	on
O	1067	1070	top
O	1071	1073	of
O	1074	1075	a
B-API	1076	1081	shell
O	1081	1082	,
O	1083	1086	you
O	1087	1090	may
O	1091	1095	open
O	1096	1099	the
O	1100	1104	file
O	1105	1111	dialog
O	1111	1112	,
O	1113	1117	then
O	1118	1121	get
O	1122	1125	the
O	1126	1132	parent
B-API	1133	1138	shell
O	1139	1140	'
O	1141	1142	s
O	1143	1153	sub-shells
O	1154	1155	(
B-API	1155	1172	shell.getShells()
O	1172	1173	)
O	1174	1176	to
O	1177	1181	find
O	1182	1185	out
O	1186	1189	the
O	1190	1194	file
O	1195	1201	dialog
O	1202	1203	'
O	1204	1205	s
B-API	1206	1211	shell
O	1211	1212	.

O	1213	1216	Now
O	1217	1220	you
O	1221	1227	should
O	1228	1230	be
O	1231	1235	able
O	1236	1238	to
O	1239	1245	change
O	1246	1249	its
O	1250	1258	location
O	1258	1259	.

B-Fram	0	8	JConsole
O	9	12	Web
O	13	24	Application

O	25	26	I
O	27	31	need
O	32	34	to
O	35	39	have
O	40	43	the
O	44	55	information
O	56	59	and
O	60	70	operations
O	71	73	of
O	74	76	my
B-API	77	83	MBeans
O	84	86	in
O	87	89	my
O	90	102	applications
O	103	106	and
O	107	108	I
O	109	113	need
O	114	118	this
O	119	121	to
O	122	124	be
O	125	127	as
O	128	129	a
O	130	133	web
O	134	145	application
O	145	146	.

O	147	149	My
O	150	153	app
O	154	160	server
O	161	163	is
B-Fram	164	172	Weblogic
I-Fram	173	179	10.3.2

O	180	188	Actually
O	189	190	I
O	191	195	need
O	196	198	an
O	199	210	application
O	211	216	which
O	217	220	can
O	221	223	do
O	224	227	the
O	228	234	things
O	235	236	(
O	236	240	only
O	241	246	about
B-API	247	253	MBeans
O	253	254	)
O	255	259	like
B-Fram	260	268	JConsole
O	269	273	does
O	274	275	(
O	275	279	both
O	280	292	functionally
O	293	296	and
O	297	305	visually
O	305	306	)
O	306	307	.

O	308	311	ANy
O	312	324	applications
O	325	326	u
O	327	331	know
O	331	332	?
O	333	335	or
O	336	339	any
O	340	344	code
O	345	353	examples
O	354	356	to
O	357	359	do
O	360	362	it
O	363	370	easilly
O	370	371	?

O	372	378	Thanks

O	379	382	Ali

O	383	387	Take
O	388	389	a
O	390	394	look
O	395	397	at
O	398	399	:

B-Fram	400	407	Jolokia
O	408	409	:
O	410	417	Deploys
O	418	420	as
O	421	422	a
B-Stan	423	426	WAR
O	427	429	or
O	430	431	a
B-Stan	432	441	JavaAgent
O	442	445	and
O	446	453	exposes
B-Stan	454	457	JMX
O	458	461	ops
O	462	465	and
O	466	476	attributes
O	477	484	through
O	485	486	a
B-Stan	487	491	REST
O	492	495	API
O	495	496	.

O	497	502	There
O	503	504	'
O	505	506	s
O	507	509	no
O	510	516	actual
O	517	524	console
O	525	527	as
O	528	531	yet
O	531	532	,
O	533	536	but
O	537	542	check
O	543	547	here
O	548	551	and
O	552	556	here
O	557	560	for
O	561	569	possible
O	570	585	implementations
O	585	586	.

B-Fram	587	594	OpenDMK
O	595	596	:
O	597	601	This
O	602	604	is
O	605	608	the
O	609	621	open-sourced
B-Fram	622	626	Java
I-Fram	627	634	Dynamic
I-Fram	635	645	Management
I-Fram	646	649	Kit
O	649	650	.

O	651	653	It
O	654	662	contains
O	662	663	,
O	664	669	among
O	670	675	other
O	676	682	things
O	682	683	,
O	684	685	a
B-PL	686	690	HTML
O	691	699	Protocol
O	700	707	Adaptor
O	708	713	which
O	714	722	provides
O	723	724	a
O	725	729	very
O	730	735	basic
O	736	743	browser
O	744	754	accessible
O	755	759	view
O	760	762	of
O	763	767	your
B-API	768	779	MBeanServer
O	779	780	.

B-Fram	781	785	MX4J
O	786	787	:
O	788	792	Also
O	793	801	provides
O	802	804	an
B-Stan	805	809	HTTP
O	810	818	Protocol
O	819	826	Adaptor
O	826	827	.

O	828	831	The
O	832	836	last
O	837	838	2
O	839	842	are
O	843	846	not
O	847	859	particularly
O	860	866	active
O	867	870	any
O	871	875	more
O	875	876	,
O	877	880	but
O	881	882	I
O	883	886	can
O	887	893	attest
O	894	896	to
O	897	902	their
O	903	912	stability
O	912	913	.

O	0	7	Execute
O	8	13	While
O	14	16	in
B-PL	17	20	SQl
O	21	27	Script
O	28	30	in
B-PL	31	35	Java

O	36	37	i
O	38	42	want
O	43	45	to
O	46	53	execute
O	54	57	the
B-PL	58	61	SQL
O	62	68	Script
O	69	74	below
O	74	75	,
O	76	85	therefore
O	86	87	i
O	88	92	used
O	93	99	ibatis
O	100	106	Script
O	107	113	Runner
O	114	133	@codeSnippetRemoved

O	134	137	But
O	138	143	there
O	144	146	is
O	147	150	the
O	151	158	Problem
O	158	159	,
O	160	164	that
O	165	170	While
O	171	176	loops
O	177	181	will
O	182	185	not
O	186	188	be
O	189	199	completely
O	200	210	executed.I
O	211	218	pointed
O	219	222	out
O	223	227	that
O	228	231	the
O	232	239	problem
O	240	245	comes
O	246	253	because
O	254	257	the
O	258	264	Script
O	265	271	Runner
O	272	276	didn
O	277	278	t
O	279	283	wait
O	284	289	until
O	290	292	he
O	293	298	while
O	299	303	loop
O	304	306	is
O	307	317	completely
O	318	322	done
O	322	323	.

O	324	326	So
O	327	332	there
O	333	336	are
O	337	341	only
O	342	345	386
O	346	349	and
O	350	353	not
O	354	358	1000
O	359	363	rows
O	364	373	created.I
O	374	377	got
O	378	381	the
O	382	386	same
O	387	394	Problem
O	395	400	using
O	401	404	the
B-API	405	409	Java
I-API	410	419	Statement
I-API	420	427	execute
O	428	434	method
O	435	436	(
O	436	500	http://docs.oracle.com/javase/6/docs/api/java/sql/Statement.html
O	501	503	):
O	504	523	@codeSnippetRemoved

O	524	527	But
O	528	530	if
O	531	532	i
O	533	536	set
O	537	556	@codeSnippetRemoved

O	557	563	behind
B-API	564	577	stmnt.execute
O	578	581	the
O	582	587	while
O	588	592	loop
O	593	595	is
O	596	607	completeley
O	608	612	done
O	613	616	and
O	617	618	i
O	619	622	get
O	623	627	1000
O	628	632	rows
O	633	637	like
O	638	639	i
O	640	649	wanted.So
O	650	652	my
O	653	661	question
O	662	664	is
O	664	665	,
O	666	668	if
O	669	671	it
O	672	674	is
O	675	683	possible
O	684	686	to
O	687	694	execute
O	695	698	the
O	699	707	complete
O	708	713	While
O	714	718	loop
O	719	726	whitout
O	727	732	using
B-API	733	745	Thread.sleep
O	746	748	.?

O	749	754	Thank
O	755	758	you
O	759	761	in
O	762	769	advance
O	769	770	!

O	771	790	@codeSnippetRemoved

O	791	794	You
O	795	798	can
O	799	804	refer
O	805	807	to
O	808	813	below
O	814	821	example
O	822	826	from
O	827	833	MKYONG
O	834	837	for
O	838	842	same
O	842	843	.

O	844	848	Hope
O	849	853	this
O	854	859	helps
O	860	863	you
O	864	867	out
O	867	868	.

O	869	888	@codeSnippetRemoved

O	889	896	Without
O	897	903	having
B-API	904	916	ScriptRunner
O	917	919	at
O	920	924	hand
O	924	925	,
O	926	927	a
O	928	936	possible
O	937	945	solution
O	946	951	might
O	952	954	be
O	955	957	to
O	958	961	use
O	962	963	a
O	964	973	procedure
O	974	977	and
O	978	982	then
O	983	990	calling
O	991	994	the
O	995	1004	procedure
O	1005	1007	in
O	1008	1011	the
O	1012	1018	script
O	1018	1019	.

O	1020	1039	@codeSnippetRemoved

B-API	0	4	Java
I-API	5	14	Recursion
O	15	19	Over
O	20	21	A
O	22	26	Text
O	27	31	File

O	32	33	I
O	34	38	have
O	39	40	a
O	41	45	text
O	46	50	file
O	51	55	that
O	56	66	represents
O	67	68	a
O	69	77	building
O	77	78	.

O	79	80	A
O	81	89	building
O	90	93	has
O	94	100	floors
O	100	101	,
O	102	105	and
O	106	112	floors
O	113	117	have
O	118	123	rooms
O	123	124	.

O	125	128	The
O	129	134	first
O	135	140	floor
O	141	143	is
O	144	149	floor
O	150	151	0
O	151	152	.

O	153	156	The
O	157	161	text
O	162	166	file
O	167	169	is
O	170	180	structured
O	181	185	like
O	186	188	so
O	189	190	:
O	191	210	@codeSnippetRemoved

O	211	216	Where
O	217	222	North
O	222	223	,
O	224	228	East
O	228	229	,
O	230	235	South
O	235	236	,
O	237	241	West
O	241	242	,
O	243	245	Up
O	246	249	and
O	250	254	Down
O	255	258	are
O	259	267	integers
O	268	276	denoting
O	277	280	the
O	281	285	room
O	286	290	that
O	291	300	direction
O	301	306	leads
O	307	309	to
O	309	310	.

O	311	314	The
O	315	322	integer
O	323	325	-1
O	326	328	is
O	329	333	used
O	334	336	to
O	337	343	denote
O	344	348	that
O	349	354	there
O	355	357	is
O	358	360	no
O	361	365	exit
O	366	368	in
O	369	373	that
O	374	383	direction
O	383	384	.

O	385	389	This
O	390	392	is
O	393	401	repeated
O	402	405	for
O	406	409	the
O	410	416	number
O	417	419	of
O	420	425	rooms
O	426	429	the
O	430	438	building
O	439	442	has
O	442	443	.

O	444	446	So
O	447	450	for
O	451	455	four
O	456	461	rooms
O	462	465	the
O	466	474	contents
O	475	477	of
O	478	481	the
O	482	486	text
O	487	491	file
O	492	495	may
O	496	498	be
O	499	500	:
O	501	520	@codeSnippetRemoved

O	521	524	I'm
O	525	531	trying
O	532	534	to
O	535	540	write
O	541	542	a
O	543	552	recursive
O	553	561	function
O	562	566	that
O	567	571	will
O	572	577	allow
O	578	580	me
O	581	583	to
O	584	593	calculate
O	594	597	the
O	598	604	number
O	605	607	of
O	608	614	floors
O	615	617	in
O	618	621	the
O	622	630	building
O	631	636	based
O	637	639	on
O	640	643	the
O	644	646	up
O	647	653	values
O	653	654	.

O	655	658	For
O	659	666	example
O	666	667	,
O	668	670	if
O	671	673	we
O	674	678	have
O	679	680	a
O	681	685	room
O	686	690	that
O	691	695	goes
O	696	698	up
O	699	701	to
O	702	706	room
O	707	708	1
O	708	709	,
O	710	713	and
O	714	718	room
O	719	720	1
O	721	725	goes
O	726	728	up
O	729	731	to
O	732	736	room
O	737	738	2
O	739	742	and
O	743	747	that
O	748	750	no
O	751	756	other
O	757	762	rooms
O	763	765	go
O	766	772	higher
O	773	777	than
O	778	782	this
O	783	787	then
O	788	790	we
O	791	795	know
O	796	800	that
O	801	806	there
O	807	810	are
O	811	812	3
O	813	819	floors
O	819	820	.

O	821	822	I
O	823	827	know
O	828	831	how
O	832	834	to
O	835	838	use
O	839	845	either
O	846	847	a
B-API	848	862	BufferedReader
O	863	865	or
B-API	866	873	Scanner
O	874	880	object
O	881	883	to
O	884	888	read
O	889	892	the
O	893	897	text
O	898	902	file
O	903	906	but
O	907	910	the
O	911	920	recursion
O	921	923	is
O	924	928	what
O	929	932	I'm
O	933	942	concerned
O	943	948	about
O	948	949	.

O	950	951	I
O	952	956	want
O	957	959	to
O	960	963	say
O	964	973	thank-you
O	974	976	in
O	977	984	advance
O	984	985	,
O	986	989	the
O	990	999	community
O	1000	1004	here
O	1005	1007	is
O	1008	1015	amazing
O	1015	1016	.

O	1017	1019	My
O	1020	1026	method
O	1027	1029	to
O	1030	1039	calculate
O	1040	1043	the
O	1044	1050	number
O	1051	1053	of
O	1054	1060	floors
O	1061	1062	(
O	1062	1072	incomplete
O	1073	1076	and
O	1077	1080	may
O	1081	1083	be
O	1084	1089	wrong
O	1090	1092	):
O	1093	1112	@codeSnippetRemoved

O	1113	1115	Ok
O	1116	1117	I
O	1118	1124	edited
O	1125	1127	my
O	1128	1132	idea
O	1133	1134	:

O	1135	1137	So
O	1138	1142	what
O	1143	1145	we
O	1146	1150	need
O	1151	1153	to
O	1154	1156	do
O	1157	1158	:
O	1159	1161	We
O	1162	1167	visit
O	1168	1172	each
O	1173	1177	room
O	1178	1181	and
O	1182	1188	follow
O	1189	1192	all
O	1193	1201	possible
O	1202	1206	ways
O	1207	1211	from
O	1212	1216	that
O	1217	1221	room
O	1221	1222	.

O	1223	1225	If
O	1226	1228	we
O	1229	1231	go
O	1232	1234	up
O	1235	1237	we
O	1238	1241	add
O	1242	1244	+1
O	1244	1245	,
O	1246	1248	if
O	1249	1251	we
O	1252	1254	go
O	1255	1259	down
O	1260	1262	we
O	1263	1272	substract
O	1273	1275	-1
O	1276	1279	and
O	1280	1282	if
O	1283	1285	we
O	1286	1290	stay
O	1291	1293	on
O	1294	1297	the
O	1298	1302	same
O	1303	1308	level
O	1309	1311	we
O	1312	1316	dont
O	1317	1320	add
O	1321	1322	a
O	1323	1333	value.Also
O	1334	1336	we
O	1337	1341	need
O	1342	1344	to
O	1345	1349	keep
O	1350	1355	track
O	1356	1359	for
O	1360	1363	the
O	1364	1369	rooms
O	1370	1377	already
O	1378	1385	visited
O	1386	1388	to
O	1389	1392	not
O	1393	1395	go
O	1396	1398	in
O	1399	1405	cycles
O	1405	1406	.

O	1407	1426	@codeSnippetRemoved

O	1427	1431	This
O	1432	1438	should
O	1439	1443	work
O	1444	1445	(
O	1445	1449	just
O	1450	1453	add
O	1454	1457	the
O	1458	1462	code
O	1463	1465	to
O	1466	1470	find
O	1471	1474	the
O	1475	1485	directions
O	1486	1492	values
O	1493	1495	of
O	1496	1499	the
O	1500	1507	current
O	1508	1512	room
O	1512	1513	)
O	1514	1516	in
O	1517	1519	my
O	1520	1528	opinioin
O	1528	1529	.

O	1530	1536	public
O	1537	1540	int
O	1541	1556	calculateFloors
O	1557	1558	(
O	1558	1561	int
O	1562	1567	count
O	1567	1568	)
O	1569	1570	{
B-API	1571	1578	Scanner
O	1579	1586	scanner
O	1587	1588	;
O	1589	1592	int
O	1593	1600	count=1
O	1601	1602	;
O	1603	1606	try
O	1607	1608	{
O	1609	1616	scanner
O	1617	1618	=
O	1619	1622	new
B-API	1623	1630	Scanner
O	1631	1632	(
O	1632	1642	currentMap
O	1643	1645	);
O	1646	1648	//
O	1649	1653	uses
O	1654	1659	count
O	1660	1662	to
O	1663	1667	work
O	1668	1671	out
O	1672	1676	what
O	1677	1682	rooms
O	1683	1685	we
O	1686	1689	can
O	1690	1694	skip
O	1695	1698	for
O	1699	1700	(
O	1700	1703	int
O	1704	1707	i=0
O	1708	1709	;
O	1710	1711	i
O	1712	1719	count*6
O	1719	1720	)
B-API	1721	1739	scanner.nextLine()
O	1740	1741	;
O	1742	1744	//
O	1745	1749	gets
O	1750	1753	the
O	1754	1759	value
O	1760	1762	of
O	1763	1765	up
O	1766	1769	int
O	1770	1772	up
O	1773	1774	=
B-API	1775	1791	Integer.parseInt
O	1792	1793	(
B-API	1793	1811	scanner.nextLine()
O	1812	1814	);
O	1815	1817	//
O	1818	1821	our
O	1822	1826	base
O	1827	1831	case
O	1832	1835	---
O	1836	1838	if
O	1839	1844	there
O	1845	1848	are
O	1849	1851	no
O	1852	1856	more
O	1857	1863	floors
O	1863	1864	,
O	1865	1871	return
O	1872	1875	the
O	1876	1882	number
O	1883	1886	---
O	1887	1896	otherwise
O	1897	1904	perform
O	1905	1908	the
O	1909	1918	recursive
O	1919	1923	call
O	1923	1924	.

B-Plat	0	7	Android
O	8	9	:
O	10	14	Loop
O	15	17	to
O	18	22	pick
O	23	24	a
O	25	31	random
O	32	38	images
O	39	43	from
B-API	44	53	ArrayList

O	54	59	Right
O	60	63	now
O	64	66	my
O	67	74	program
O	75	83	randomly
O	84	92	displays
O	93	94	5
O	95	101	random
O	102	108	images
O	109	113	from
O	114	116	my
B-API	117	122	Array
I-API	123	127	List
O	128	131	and
O	132	136	here
O	137	138	'
O	139	140	s
O	141	144	the
O	145	149	main
O	150	154	part
O	155	157	of
O	158	162	what
O	163	164	I
O	165	169	have
O	170	173	now
O	174	175	:
O	176	195	@codeSnippetRemoved

O	196	199	I'm
O	200	203	now
O	204	211	getting
O	212	214	an
O	215	220	error
O	221	223	in
O	224	226	my
O	227	233	render
O	234	240	method
O	241	245	here
O	246	250	that
O	251	253	is
O	254	261	causing
O	262	265	the
O	266	269	app
O	270	272	to
O	273	278	crash
O	279	280	:
O	281	300	@codeSnippetRemoved

O	301	305	What
O	306	309	I'm
O	310	316	trying
O	317	319	to
O	320	322	do
O	323	325	is
O	326	330	make
O	331	335	each
O	336	344	drawable
O	345	350	image
O	351	355	have
O	356	358	an
O	359	366	integer
O	367	372	value
O	373	377	such
O	378	380	as
O	381	382	:
O	383	397	R.drawable.one
O	398	403	equal
O	404	406	to
O	407	408	1
O	408	409	,
O	410	424	R.drawable.two
O	425	430	equal
O	431	433	to
O	434	435	2
O	436	441	.....

O	442	457	R.drawable.five
O	458	463	equal
O	464	466	to
O	467	468	5
O	468	469	.

O	470	473	And
O	474	478	have
O	479	480	a
O	481	485	loop
O	486	492	repeat
O	493	498	until
O	499	502	the
O	503	509	images
O	510	519	displayed
O	520	526	equals
O	527	528	a
O	529	534	total
O	535	540	value
O	541	543	of
O	544	546	50
O	547	548	(
O	548	552	they
O	553	556	all
O	557	560	add
O	561	563	up
O	564	566	to
O	567	569	50
O	569	570	)
O	571	574	and
O	575	579	then
O	580	584	stop
O	584	585	.

O	586	589	I'm
O	590	596	trying
O	597	599	to
O	600	603	get
O	604	614	myImgCount
O	615	618	and
O	619	632	totalImgCount
O	633	635	to
O	636	640	keep
O	641	646	track
O	647	649	of
O	650	653	the
O	654	659	value
O	660	662	of
O	663	666	the
O	667	672	image
O	673	677	that
O	678	680	is
O	681	689	randomly
O	690	696	chosen
O	697	700	and
O	701	702	I
O	703	707	know
O	708	710	it
O	711	716	isn't
O	717	722	right
O	723	726	but
O	727	728	I
O	729	734	can't
O	735	739	find
O	740	743	any
O	744	748	info
O	749	751	on
O	752	755	how
O	756	758	to
O	759	767	complete
O	768	772	this
O	773	777	task
O	777	778	.

O	779	785	Thanks
O	786	788	in
O	789	796	advance
O	797	799	to
O	800	806	anyone
O	807	810	who
O	811	814	can
O	815	819	help
O	819	820	,
O	821	824	I'm
O	825	828	new
O	829	831	to
O	832	838	coding
O	839	841	so
O	842	844	if
O	845	848	you
O	849	852	can
O	853	860	explain
O	861	864	why
O	865	868	you
O	869	873	used
O	874	878	your
O	879	883	code
O	884	886	it
O	887	892	would
O	893	897	help
O	898	902	even
O	903	907	more
O	907	908	!

O	909	915	Thanks
O	915	916	!

O	917	920	You
O	921	924	can
O	925	928	use
O	929	932	the
O	933	941	drawable
O	942	948	naming
O	949	959	convention
O	960	962	as
O	963	980	R.drawable.image1
O	980	981	,
O	982	999	R.drawable.image2
O	1000	1003	and
O	1004	1007	use
O	1008	1027	@codeSnippetRemoved

O	1028	1035	Details
O	1036	1038	on
O	1039	1052	getIdentifier
O	1053	1059	method
O	1060	1064	here
O	1065	1066	:

O	1067	1071	Hope
O	1072	1076	this
O	1077	1082	helps

B-Fram	0	9	WebSphere
I-Fram	10	15	8.5.5
O	16	19	not
O	20	29	returning
B-Stan	30	33	JAR
O	34	41	signers

B-Fram	42	51	WebSphere
I-Fram	52	57	8.5.5
O	58	60	is
O	61	64	not
O	65	74	returning
O	75	82	signers
O	83	85	at
O	86	94	run-time
O	94	95	.

O	96	98	We
O	99	103	have
O	104	106	an
O	107	112	issue
O	113	117	with
O	118	119	a
O	120	128	deployed
O	129	140	environment
O	141	144	and
O	145	149	code
O	150	154	that
O	155	163	verifies
O	164	168	that
O	169	170	a
B-Stan	171	174	JAR
O	175	177	is
O	178	184	signed
O	185	189	with
O	190	192	an
O	193	201	expected
O	202	205	key
O	205	206	.

O	207	214	Running
O	215	216	:
O	217	223	public
O	224	230	static
O	231	234	int
O	235	247	checkSigning
O	248	249	(
O	249	254	Class
O	255	257	cl
O	257	258	)
O	259	260	{
O	261	267	Object
O	268	270	[]
O	271	278	signers
O	279	280	=
O	281	296	cl.getSigners()
O	297	298	;
O	299	318	@codeSnippetRemoved

O	319	326	Against
O	327	328	a
O	329	341	known-signed
B-Stan	342	345	JAR
O	346	347	(
O	347	355	verified
O	356	363	against
B-Fram	364	373	Jarsigner
O	373	374	)
O	375	377	is
O	378	387	returning
O	388	390	-1
O	391	392	(
O	392	399	meaning
B-API	400	410	getSigners
O	411	413	is
O	414	418	null
O	418	419	)
O	419	420	,
O	421	424	but
O	425	429	only
O	430	434	when
O	435	443	deployed
O	444	446	in
O	447	450	the
B-Fram	451	460	WebSphere
I-Fram	461	466	8.5.5
O	467	475	instance
O	475	476	.

O	477	484	Running
O	485	487	in
O	488	493	other
B-Stan	494	501	servlet
O	502	512	containers
O	513	514	(
B-Fram	514	523	GlassFish
O	523	524	,
B-Fram	525	533	WebLogic
O	533	534	,
B-Fram	535	540	JBoss
O	540	541	)
O	542	545	all
O	546	553	returns
O	554	557	the
O	558	565	signers
O	566	575	correctly
O	575	576	.

O	577	579	To
O	580	590	complicate
O	591	595	this
O	596	603	further
O	603	604	,
O	605	606	I
O	607	609	am
O	610	613	not
O	614	622	directly
O	623	625	in
O	626	633	control
O	634	636	of
O	637	640	the
B-Fram	641	650	WebSphere
O	651	659	instance
O	660	663	and
O	664	668	have
O	669	672	not
O	673	679	gotten
O	680	683	any
O	684	689	clear
O	690	697	answers
O	698	707	regarding
O	708	711	any
O	712	719	whether
O	720	723	the
B-Stan	724	727	JAR
O	728	730	is
O	731	736	being
O	737	745	unpacked
O	746	748	or
O	749	752	any
O	753	758	other
O	759	766	reasons
O	767	771	that
O	772	777	could
O	778	785	account
O	786	789	for
O	790	794	this
O	794	795	.

O	796	798	TL
O	799	801	;D
O	802	803	R
O	804	805	:

O	806	807	1
O	807	808	)
O	809	813	Does
B-Fram	814	823	WebSphere
I-Fram	824	829	8.5.5
O	830	834	have
O	835	838	any
O	839	844	known
O	845	851	issues
O	852	861	regarding
B-API	862	872	getSigners
O	873	875	on
O	876	877	a
O	878	883	class
O	883	884	?

O	885	886	2
O	886	887	)
O	888	890	If
O	891	894	not
O	894	895	,
O	896	899	are
O	900	905	there
O	906	909	any
O	910	921	low-hanging
O	922	927	fruit
O	928	941	configuration
O	942	943	/
O	944	954	deployment
O	955	963	settings
O	964	966	to
O	967	972	check
O	973	975	to
O	976	982	ensure
O	983	986	the
B-Stan	987	990	JAR
O	991	993	is
O	994	997	not
O	998	1003	being
O	1004	1011	mangled
O	1012	1018	during
O	1019	1029	deployment
O	1029	1030	?

O	1031	1032	I
O	1033	1037	have
O	1038	1043	spent
O	1044	1051	several
O	1052	1057	hours
O	1058	1064	trying
O	1065	1067	to
O	1068	1071	dig
O	1072	1075	and
O	1076	1086	everything
O	1087	1091	I've
O	1092	1097	found
O	1098	1102	that
O	1103	1108	could
O	1109	1116	explain
O	1117	1121	this
O	1122	1130	behavior
O	1131	1141	supposedly
O	1142	1149	doesn't
O	1150	1155	apply
O	1156	1158	to
B-Fram	1159	1168	WebSphere
I-Fram	1169	1174	8.5.5
O	1174	1175	.

O	1176	1179	The
O	1180	1191	application
O	1192	1197	class
O	1198	1204	loader
O	1205	1207	of
B-Fram	1208	1217	WebSphere
O	1218	1229	Application
O	1230	1236	Server
O	1237	1241	does
O	1242	1245	not
O	1246	1249	use
O	1250	1257	signing
O	1258	1269	information
O	1270	1274	when
O	1275	1283	defining
O	1284	1287	the
O	1288	1293	class
O	1293	1294	.

O	1295	1297	If
O	1298	1301	you
O	1302	1308	really
O	1309	1313	need
O	1314	1318	this
O	1318	1319	,
O	1320	1324	your
O	1325	1329	best
O	1330	1336	option
O	1337	1339	is
O	1340	1348	probably
O	1349	1351	to
O	1352	1356	open
O	1357	1359	an
O	1360	1363	RFE
O	1363	1364	.

O	1365	1374	Otherwise
O	1374	1375	,
O	1376	1379	you
O	1380	1385	might
O	1386	1392	choose
O	1393	1394	a
O	1395	1404	different
O	1405	1415	workaround
O	1416	1418	if
O	1419	1425	you're
O	1426	1430	just
O	1431	1437	trying
O	1438	1440	to
O	1441	1444	get
O	1445	1453	metadata
O	1453	1454	.

B-PL	0	4	Java
O	4	5	,
O	6	13	publish
O	14	18	with
O	19	24	local
O	25	32	folders

O	33	34	I
O	35	39	have
O	40	42	an
B-PL	43	47	Java
O	48	55	desktop
O	56	63	program
O	64	69	which
O	70	74	uses
O	75	76	a
O	77	78	"
O	78	82	file
O	82	83	"
O	84	90	folder
O	91	93	to
O	94	98	keep
O	99	103	logs
O	104	107	and
O	108	109	"
O	109	114	image
O	114	115	"
O	116	122	folder
O	123	125	to
O	126	129	get
O	130	136	images
O	137	139	of
O	140	143	its
O	144	147	gui
O	147	148	.

O	149	150	I
O	151	155	want
O	156	158	to
O	159	166	publish
O	167	171	this
O	172	179	program
O	180	184	with
O	185	186	"
O	186	192	.class
O	192	193	"
O	194	199	files
O	200	207	visible
O	208	209	(
O	209	211	so
O	212	216	that
O	217	218	i
O	219	222	can
O	223	229	update
O	230	234	them
O	234	235	)
O	235	236	.

O	237	239	1-
O	239	240	)
O	241	243	In
B-Fram	244	251	eclipse
O	251	252	,
O	253	257	when
O	258	259	i
O	260	263	use
O	264	270	export
O	271	274	-->
B-Stan	275	278	Jar
O	279	281	or
O	282	288	export
O	289	292	-->
O	293	303	Executable
B-Stan	304	307	Jar
O	308	315	options
O	315	316	.

O	317	320	Its
O	321	326	wraps
O	327	337	everything
O	338	340	in
O	341	344	one
B-Stan	345	348	jar
O	349	352	and
O	353	355	my
O	356	363	program
O	364	371	doesn't
O	372	376	work
O	377	378	(
O	378	386	probably
O	387	394	because
O	395	397	it
O	398	404	cannot
O	405	409	find
O	410	415	image
O	416	421	files
O	421	422	)
O	422	423	.

O	424	425	I
O	426	431	think
O	432	433	i
O	434	442	remember
O	443	444	a
O	445	448	way
O	449	451	to
O	452	459	publish
O	460	463	the
O	464	468	code
O	469	471	as
O	472	474	it
O	475	477	is
O	478	483	using
B-Fram	484	491	eclipse
O	492	495	but
O	496	502	cannot
O	503	507	find
O	508	510	it
O	511	513	:/
O	513	514	.

O	515	518	How
O	519	522	can
O	523	524	i
O	525	532	publish
O	533	535	my
O	536	540	code
O	541	548	keeping
O	549	552	the
O	553	560	folders
O	561	562	i
O	563	567	want
O	568	572	with
O	573	576	the
O	577	584	program
O	584	585	?

O	586	588	2-
O	588	589	)
O	590	592	Is
O	593	595	it
O	596	597	a
O	598	601	bad
O	602	606	idea
O	607	609	to
O	610	614	keep
O	615	622	visable
O	623	624	"
O	624	630	.class
O	630	631	"
O	632	637	files
O	638	641	for
O	642	649	updates
O	649	650	?

O	651	652	(
O	652	653	i
O	654	659	don't
O	659	660	,
O	661	665	also
O	666	670	want
O	671	677	people
O	678	683	sneak
O	684	686	in
O	687	690	the
O	691	695	code
O	696	703	because
O	704	706	it
O	707	711	will
O	712	716	have
O	717	725	database
O	726	729	url
O	730	731	'
O	732	733	s
O	734	737	and
O	738	742	such
O	742	743	)
O	743	744	.

O	745	749	What
O	750	753	are
O	754	756	my
O	757	769	alternatives
O	769	770	?

O	771	774	How
O	775	777	do
O	778	781	you
O	782	786	make
O	787	791	your
O	792	799	updates
O	799	800	?

O	801	807	Thanks
O	808	811	for
O	812	815	the
O	816	823	answers
O	824	827	and
O	828	834	pardon
O	835	837	me
O	838	840	if
O	841	842	i
O	843	848	asked
O	849	858	something
O	859	862	has
O	863	870	already
O	871	873	be
O	874	879	asked
O	880	883	and
O	884	892	answered
O	893	901	gazilion
O	902	907	times
O	908	910	:/
O	911	912	(
O	912	913	.

O	914	917	WOW
O	917	918	,
O	919	923	your
O	924	931	comment
O	932	939	sparked
O	940	946	lights
O	947	949	in
O	950	952	my
O	953	957	head
O	958	960	=)
O	960	961	.

O	962	969	Problem
O	970	976	solved
O	977	979	:)
O	979	980	.

O	981	985	What
O	986	987	i
O	988	991	did
O	992	994	is
O	994	995	,

O	996	1002	export
O	1003	1011	runnable
B-Stan	1012	1015	jar
O	1015	1016	,
O	1017	1020	and
O	1021	1029	selected
O	1030	1039	libraries
O	1040	1042	to
O	1043	1045	be
O	1046	1052	copied
O	1053	1055	in
O	1056	1062	folder
O	1062	1063	.

O	1064	1067	And
O	1068	1072	then
O	1072	1073	,
O	1074	1075	i
O	1076	1082	copied
O	1083	1086	the
O	1087	1095	external
O	1095	1096	,
O	1097	1103	namely
O	1104	1105	"
O	1105	1110	files
O	1110	1111	"
O	1112	1115	and
O	1116	1117	"
O	1117	1123	images
O	1123	1124	"
O	1125	1132	folders
O	1133	1135	to
O	1136	1139	the
O	1140	1146	folder
O	1147	1152	where
O	1153	1155	my
B-Stan	1156	1159	jar
O	1160	1164	file
O	1165	1167	is
O	1167	1168	.

O	1169	1172	And
O	1173	1175	it
O	1176	1182	worked
O	1182	1183	!

O	1184	1186	=)
O	1186	1187	.

O	1188	1190	//
O	1191	1194	For
O	1195	1198	the
O	1199	1205	second
O	1206	1214	question
O	1214	1215	,
O	1216	1219	yep
O	1220	1224	this
O	1225	1228	way
O	1229	1232	the
O	1233	1234	"
O	1234	1238	.jar
O	1238	1239	"
O	1240	1244	file
O	1245	1247	is
O	1248	1255	minimal
O	1256	1258	so
O	1259	1261	it
O	1262	1265	can
O	1266	1268	be
O	1269	1276	updated
O	1277	1283	easily
O	1283	1284	.

O	1285	1288	For
O	1289	1292	the
O	1293	1299	second
O	1300	1308	question
O	1308	1309	,
O	1310	1311	i
O	1312	1318	showed
O	1319	1325	images
O	1326	1328	as
O	1329	1338	resources
O	1339	1340	(
O	1340	1343	can
O	1344	1346	be
O	1347	1351	done
O	1352	1356	with
O	1357	1362	right
O	1363	1371	clicking
O	1372	1380	relative
O	1381	1387	folder
O	1388	1390	in
B-Fram	1391	1398	eclipse
O	1398	1399	)
O	1400	1402	as
O	1403	1414	recommended
O	1414	1415	.

O	1416	1422	Thanks
O	1423	1426	for
O	1427	1431	your
O	1432	1439	comment
O	1439	1440	.

O	1441	1442	A
O	1443	1446	lot
O	1447	1449	of
O	1450	1455	these
O	1456	1465	questions
O	1466	1470	will
O	1471	1477	vanish
O	1478	1482	once
O	1483	1486	you
O	1487	1492	start
O	1493	1498	using
B-Fram	1499	1504	maven
O	1505	1507	as
O	1508	1512	your
O	1513	1518	build
O	1519	1530	environment
O	1530	1531	.

O	1532	1541	Packaging
O	1542	1545	and
O	1546	1555	resources
O	1556	1564	handling
O	1565	1567	is
O	1568	1577	important
O	1578	1580	if
O	1581	1584	you
O	1585	1589	want
O	1590	1592	to
O	1593	1599	deploy
O	1600	1604	your
B-PL	1605	1609	java
O	1610	1614	code
O	1615	1617	to
O	1618	1621	the
O	1622	1629	outside
O	1630	1635	world
O	1636	1637	(
O	1637	1645	sticking
O	1646	1648	to
O	1649	1657	standard
O	1658	1666	patterns
O	1666	1667	)
O	1667	1668	.

O	1669	1670	A
O	1671	1677	common
O	1678	1685	pattern
O	1686	1688	to
O	1689	1693	load
O	1694	1703	resources
O	1704	1710	inside
O	1711	1715	your
B-Stan	1716	1719	Jar
O	1720	1721	(
O	1721	1723	as
O	1724	1725	I
O	1726	1736	understood
O	1736	1737	,
O	1738	1742	from
O	1743	1747	your
B-PL	1748	1752	java
O	1753	1757	code
O	1757	1758	)
O	1759	1761	is
O	1762	1764	to
O	1765	1768	use

O	1769	1771	Or
O	1772	1775	use
B-API	1776	1782	FileIO
O	1782	1783	.

O	1784	1789	There
O	1790	1793	are
O	1794	1795	a
O	1796	1799	lot
O	1800	1802	of
O	1803	1812	tutorials
O	1813	1816	and
O	1817	1826	resources
O	1827	1834	outside
O	1835	1844	regarding
B-Fram	1845	1850	maven
O	1851	1854	and
O	1855	1857	it
O	1858	1862	will
O	1863	1867	help
O	1868	1871	you
O	1872	1875	not
O	1876	1882	beeing
O	1883	1885	to
O	1886	1890	much
O	1891	1900	concerned
O	1901	1908	copying
O	1909	1917	anything
O	1918	1920	by
O	1921	1925	hand
O	1926	1928	in
O	1929	1933	your
O	1934	1939	build
O	1940	1947	process
O	1947	1948	.

O	1949	1959	Everything
O	1960	1964	else
O	1965	1969	than
O	1970	1976	coding
O	1977	1983	should
O	1984	1986	be
O	1987	1996	automated
O	1997	1999	by
O	2000	2004	your
O	2005	2016	environment
O	2016	2017	.

O	0	5	store
O	6	11	image
O	12	16	into
O	17	18	a
O	19	25	folder
O	26	28	in
B-Fram	29	37	netbeans

O	38	39	I
O	40	42	am
O	43	48	using
O	49	50	a
B-API	51	62	FileChooser
O	63	66	for
O	67	77	selectiong
O	78	83	image
O	84	88	from
O	89	92	the
O	93	103	system.Now
O	104	105	I
O	106	110	want
O	111	113	to
O	114	119	store
O	120	123	the
O	124	129	image
O	130	134	into
O	135	141	db.For
O	142	146	this
O	147	148	I
O	149	153	have
O	154	161	created
O	162	163	a
O	164	167	new
O	168	174	folder
O	175	180	image
O	181	183	in
O	184	187	the
O	188	195	project
O	195	196	,
O	197	200	and
O	201	203	my
O	204	208	idea
O	209	211	is
O	212	216	load
O	217	220	the
O	221	227	folder
O	228	232	with
O	233	236	the
O	237	243	opened
O	244	250	images
O	251	258	renamed
O	259	263	like
O	264	268	img1
O	268	269	,
O	270	274	img2
O	275	278	...
O	279	282	and
O	283	288	store
O	289	293	this
O	294	298	path
O	299	303	into
O	304	307	the
O	308	310	db
O	310	311	,
O	312	314	at
O	315	316	a
O	317	321	time
O	322	325	one
O	326	331	image
O	331	332	.

O	333	334	I
O	335	339	used
O	340	343	the
O	344	348	code
O	349	354	below
O	355	358	for
O	359	366	getting
O	367	370	the
O	371	376	image
O	377	381	name

O	382	385	But
O	386	387	I
O	388	392	dont
O	393	397	know
O	398	401	how
O	402	404	to
O	405	410	store
O	411	414	the
O	415	420	image
O	421	425	into
O	426	429	the
O	430	441	folder.Hope
O	442	448	anyone
O	449	453	will
O	454	458	help
O	459	461	to
O	462	467	solve
O	468	472	this
O	472	473	.

O	474	475	I
O	476	481	don't
O	482	485	see
O	486	489	the
O	490	495	point
O	496	498	of
O	499	506	storing
O	507	510	the
O	511	517	images
O	518	522	into
O	523	527	your
O	528	535	project
B-Stan	536	539	jar
O	539	540	.

O	541	543	It
O	544	549	would
O	550	554	make
O	555	559	more
O	560	565	sense
O	566	568	to
O	569	573	save
O	574	576	it
O	577	581	into
O	582	585	the
O	586	592	system
O	592	593	.

O	594	597	But
O	598	602	then
O	603	608	again
O	608	609	,
O	610	613	why
O	614	618	even
O	619	621	do
O	622	626	that
O	626	627	?

O	628	632	Just
O	633	638	store
O	639	642	the
O	643	648	image
O	649	657	directly
O	658	660	to
O	661	664	the
O	665	673	database
O	673	674	.

O	675	677	To
O	678	680	do
O	681	685	that
O	686	690	just
O	691	693	do
O	694	698	this

O	699	705	UPDATE

O	706	712	Saving
O	713	715	to
O	716	720	File
O	721	727	system
O	727	728	.

O	729	732	You
O	733	737	need
O	738	740	to
O	741	748	specify
O	749	752	the
O	753	757	path
O	758	760	in
O	761	765	this
O	766	770	line
O	771	773	of
O	774	778	code

B-Fram	0	6	spring
I-Fram	7	12	4.0.2
O	13	19	schema
O	20	25	error

O	26	27	I
O	28	30	am
O	31	37	trying
O	38	40	to
O	41	48	upgrade
O	49	51	my
B-Fram	52	58	spring
I-Fram	59	62	3.4
O	63	74	application
O	75	77	to
B-Fram	78	84	spring
I-Fram	85	90	4.0.2

O	91	92	I
O	93	101	imported
O	102	105	all
O	106	109	the
B-Fram	110	122	spring-4.0.2
B-Stan	123	126	jar
O	127	132	files
O	133	136	but
O	137	139	am
O	140	147	getting
O	148	154	errors
O	155	157	in
O	158	161	the
O	162	184	dispatcher-servlet.xml

O	185	187	if
O	188	189	I
O	190	193	use
O	194	198	this
O	199	203	code
O	203	204	,
O	205	206	I
O	207	210	get
O	211	221	Referenced
O	222	226	file
O	227	235	contains
O	236	242	errors
O	243	244	(
O	244	308	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
O	308	309	)

O	310	311	I
O	312	317	tried
O	318	320	to
O	321	327	remove
O	328	331	the
O	332	333	-
O	334	337	4.0
O	338	342	from
O	343	346	the
O	347	350	xsd
O	351	361	references
O	362	365	but
O	366	367	I
O	368	371	get
O	372	376	same
O	377	382	error
O	383	385	on
O	386	400	spring-mvc-xsd
O	401	404	now
O	404	405	.

O	406	407	I
O	408	412	even
O	413	418	tried
O	419	421	to
O	422	429	discard
O	430	440	everything
O	441	444	and
O	445	449	just
O	450	454	copy
O	455	458	the
B-Stan	459	462	xml
O	463	467	from
O	468	471	the
B-Fram	472	478	spring
O	479	488	reference
O	489	502	documentation
O	503	505	as
O	506	512	follow

O	513	516	but
O	517	521	with
O	522	526	this
O	527	533	simple
O	534	538	file
O	539	540	I
O	541	544	get
O	545	550	error
O	551	553	on

O	554	576	cvc-complex-type.2.4.c
O	577	578	:
O	579	582	the
O	583	591	matching
O	592	600	wildcard
O	601	603	is
O	604	610	strict
O	610	611	,
O	612	615	but
O	616	618	no
O	619	630	declaration
O	631	634	can
O	635	637	be
O	638	643	found
O	644	646	of
O	647	654	element
O	655	656	'
O	657	677	mvcannotation-driven

O	678	681	Any
O	682	689	example
O	690	691	I
O	692	696	take
O	697	701	from
B-Fram	702	711	spring4.0
O	712	721	reference
O	722	730	document
O	730	731	,
O	732	737	gives
O	738	740	me
O	741	745	same
O	746	751	error
O	751	752	.

O	753	755	is
O	756	760	this
O	761	762	a
O	763	770	problem
O	771	775	with
B-Fram	776	787	spring4.0.2
O	788	790	or
O	791	793	am
O	794	795	I
O	796	803	missing
O	804	813	something
O	813	814	?

O	815	820	Thank
O	821	824	you
O	825	828	for
O	829	833	your
O	834	838	help

O	0	3	How
O	4	6	do
O	7	8	I
O	9	15	detect
O	16	22	64-bit
B-PL	23	27	Java
O	28	32	from
O	33	36	the
O	37	44	command
O	45	49	line
O	49	50	?

O	51	53	Is
O	54	59	there
O	60	63	any
O	64	67	way
O	68	70	to
O	71	74	get
O	75	77	at
B-PL	78	82	Java
O	83	91	internal
O	92	102	properties
O	102	103	,
O	104	108	such
O	109	111	as
B-API	112	131	sun.arch.data.model
O	131	132	,
O	133	137	from
O	138	139	a
O	140	147	command
O	148	152	line
O	153	155	on
B-Plat	156	163	windows
O	163	164	?

O	165	166	I
O	167	171	need
O	172	173	a
O	174	181	command
O	182	184	to
O	185	188	put
O	189	191	in
O	192	193	a
O	194	199	batch
O	200	206	script
O	207	211	that
O	212	216	will
O	217	223	detect
O	224	227	the
B-PL	228	232	java
O	233	245	architecture
O	246	250	type
O	251	252	:
O	253	259	32-bit
O	260	262	or
O	263	269	64-bit
O	269	270	.

O	271	275	Here
O	276	278	is
O	279	280	a
O	281	291	prewritten
O	292	300	property
O	301	305	dump
O	306	313	program
O	314	317	for
O	318	321	you
O	322	323	:
O	324	329	linky

O	330	332	If
O	333	336	you
O	337	340	are
O	341	346	using
O	347	350	Sun
O	351	352	'
O	353	354	s
O	355	357	VM
O	358	359	(
O	359	362	and
O	363	364	I
O	365	370	would
O	371	378	suppose
O	379	384	other
O	385	388	VMs
O	389	393	have
O	394	401	similar
O	402	409	details
O	410	412	in
O	413	418	their
O	419	426	version
O	427	438	information
O	438	439	)
O	439	440	,
O	441	444	you
O	445	448	can
O	449	454	check
O	455	458	for
O	459	462	the
O	463	469	string
O	470	471	"
O	471	477	64-Bit
O	477	478	"
O	479	481	in
O	482	485	the
O	486	492	output
O	493	495	of
O	496	497	"
B-PL	497	501	java
O	502	510	-version
O	510	511	"
O	512	513	:
O	514	533	@codeSnippetRemoved

O	534	536	If
O	537	540	you
O	541	548	install
B-Fram	549	555	Groovy
O	556	559	you
O	560	563	can
O	564	567	use
O	568	587	@codeSnippetRemoved

O	588	591	for
O	592	595	all
O	596	606	properties
O	606	607	,
O	608	611	and
O	612	631	@codeSnippetRemoved

O	632	635	for
O	636	644	specific
O	645	655	properties
O	655	656	.

O	657	667	Installing
B-Fram	668	674	Groovy
O	675	677	is
O	678	680	as
O	681	685	easy
O	686	688	as
O	689	699	extracting
O	700	701	a
B-Stan	702	705	zip
O	706	709	and
O	710	713	add
O	714	716	to
O	717	721	path
O	721	722	.

O	723	730	jarnbjo
O	731	732	'
O	733	734	s
O	735	741	script
O	742	744	is
O	745	748	for
B-Plat	749	756	Windows
O	756	757	.

O	758	760	In
B-PL	761	765	Unix
I-PL	766	771	shell
O	771	772	,
O	773	776	you
O	777	780	can
O	781	784	use
O	785	788	the
O	789	798	following
O	799	805	script
O	805	806	.

O	807	826	@codeSnippetRemoved

O	0	9	Different
O	10	14	type
O	15	21	object
O	22	29	passing

O	30	31	I
O	32	34	am
O	35	43	beginner
O	44	46	of
B-Plat	47	54	android
O	55	58	and
B-PL	59	65	java.I
O	66	69	did
O	70	72	no
O	73	83	understand
O	84	88	when
O	89	95	object
B-API	96	107	pass.Object
O	108	112	pass
O	113	115	of
O	116	122	course
O	123	127	need
O	128	137	implement
O	138	150	Serializable
O	150	151	.

O	152	158	0.When
O	159	161	do
O	162	165	use
O	166	178	Serializable
O	178	179	?

O	180	184	what
O	185	187	is
O	188	190	it
O	190	191	?

O	192	198	1.what
O	199	201	is
O	202	208	Object
O	209	212	and
B-API	213	219	Bundle
O	220	225	Class
O	225	226	.

O	227	233	2.When
O	234	237	use
O	238	244	Object
O	245	248	and
B-API	249	255	Bundle
O	256	259	for
O	260	267	passing
O	268	274	Object

O	275	279	3.Do
O	280	287	support
O	288	294	Object
O	295	298	and
B-API	299	305	Bundle
O	306	312	object
O	313	316	all
O	317	321	data
O	322	326	type
O	327	333	object
O	333	334	?

O	335	341	please
O	342	346	help
O	347	356	me.Thanks

O	357	359	It
O	360	362	is
O	363	369	really
O	370	375	vague
O	376	380	what
O	381	384	you
O	385	388	are
O	389	395	asking
O	396	399	but
O	400	412	serializable
O	413	420	objects
O	421	424	can
O	425	427	be
O	428	439	transformed
O	440	444	into
O	445	446	a
O	447	453	stream
O	454	456	of
O	457	461	bits
O	462	466	that
O	467	470	can
O	471	473	be
O	474	486	deserialized
O	487	491	back
O	492	496	into
O	497	500	the
O	501	507	object
O	507	508	.

O	509	512	You
O	513	516	can
O	517	520	use
O	521	525	this
O	526	528	to
O	529	534	clone
O	534	535	,
O	536	543	objects
O	543	544	,
O	545	548	put
O	549	553	them
O	554	556	in
O	557	558	a
O	559	565	stream
O	565	566	,
O	567	569	or
O	570	574	send
O	575	579	them
O	580	584	over
O	585	586	a
O	587	594	network
O	594	595	.

B-PL	0	4	Java
O	5	14	animation
O	15	19	does
O	20	23	not
O	24	31	refresh
O	32	40	properly
O	41	44	and
O	45	49	uses
O	50	53	too
O	54	58	much
O	59	62	CPU

O	63	64	I
O	65	69	have
O	70	71	a
O	72	79	problem
O	80	84	with
O	85	86	a
O	87	93	simple
B-PL	94	98	Java
O	99	103	game
O	104	105	I
O	106	108	am
O	109	117	creating
O	118	123	right
O	124	127	now
O	127	128	.

O	129	130	I
O	131	135	want
O	136	137	a
O	138	141	dot
O	142	143	(
O	143	144	a
O	145	148	car
O	148	149	)
O	150	152	to
O	153	155	be
O	156	163	movable
O	164	170	across
O	171	174	the
O	175	179	game
O	180	186	screen
O	186	187	,
O	188	191	but
O	192	199	instead
O	200	202	of
O	203	207	this
O	208	211	all
O	212	213	I
O	214	217	can
O	218	221	see
O	222	224	on
O	225	228	the
O	229	235	screen
O	236	238	is
O	239	242	the
O	243	247	long
O	248	249	"
O	249	254	snake
O	254	255	"
O	256	263	created
O	264	266	by
O	267	270	the
O	271	274	dot
O	275	280	moved
O	281	283	by
O	284	286	me
O	287	288	:

O	289	294	Other
O	295	302	problem
O	303	305	is
O	306	310	that
O	311	319	activity
O	320	327	manager
O	328	330	on
O	331	333	my
O	334	337	Mac
O	338	343	shows
O	344	348	that
O	349	352	the
O	353	357	game
O	358	362	uses
O	363	367	huge
O	368	374	amount
O	375	377	of
O	378	381	CPU
O	382	387	power
O	388	389	-
O	390	392	my
O	393	399	laptop
O	400	404	gets
O	405	409	very
O	410	413	hot
O	414	418	very
O	419	423	fast
O	423	424	.

O	425	426	I
O	427	434	suspect
O	435	439	that
O	440	445	there
O	446	448	is
O	449	458	something
O	459	464	wrong
O	465	469	with
O	470	472	my
O	473	477	game
O	478	482	loop
O	482	483	,
O	484	487	but
O	488	493	since
O	494	497	now
O	498	499	I
O	500	507	haven't
O	508	513	found
O	514	517	any
O	518	526	solution
O	527	528	:

O	529	544	BoardPanel.java
O	545	546	:

O	547	555	Car.java

O	556	564	Map.java
O	565	566	(
O	566	567	I
O	568	575	haven't
O	576	583	created
O	584	587	map
O	588	591	yet
O	591	592	,
O	593	598	right
O	599	602	now
O	603	607	only
O	608	612	want
O	613	616	the
O	617	620	dot
O	621	623	to
O	624	628	move
O	629	637	properly
O	637	638	)

O	639	653	RacerMain.java

O	654	658	Many
O	659	665	thanks
O	666	669	for
O	670	674	your
O	675	679	help
O	680	683	!!!

O	684	686	In
O	687	691	your
O	692	698	draw()
O	699	705	method
O	706	709	you
O	710	714	need
O	715	717	to
O	718	723	clear
O	724	727	the
B-API	728	742	BufferedImages
O	743	753	background
O	754	760	before
O	761	765	your
O	766	772	invoke
O	773	776	the
O	777	785	fillOval
O	786	792	method
O	792	793	.

O	794	803	Something
O	804	808	like
O	809	810	:

O	811	816	Print
O	817	820	out
O	821	825	your
O	826	827	"
O	827	835	waitTime
O	835	836	"
O	837	839	to
O	840	844	make
O	845	849	sure
O	850	853	you
O	854	857	are
O	858	865	waiting
O	866	867	a
O	868	878	reasonable
O	879	883	time
O	883	884	.

O	885	887	In
O	888	896	addition
O	897	899	to
O	900	904	what
O	905	912	camickr
O	913	917	said
O	918	919	:
O	920	922	Be
O	923	930	careful
O	931	935	with
O	936	940	your
O	941	946	usage
O	947	949	of
O	950	953	the
O	954	962	Graphics
O	962	963	.

O	964	965	A
O	966	970	rule
O	971	973	of
O	974	979	thumb
O	980	981	:

O	982	987	Never
O	988	992	call
B-API	993	1004	getGraphics
O	1005	1007	on
O	1008	1009	a
O	1010	1019	Component
O	1019	1020	!

O	1021	1033	Additionally
O	1033	1034	,
O	1035	1038	you
O	1039	1042	are
O	1043	1048	never
O	1049	1058	disposing
O	1059	1062	the
O	1063	1071	Graphics
O	1072	1076	that
O	1077	1080	you
O	1081	1084	are
O	1085	1093	fetching
O	1094	1098	from
O	1099	1102	the
B-API	1103	1116	BufferedImage
O	1116	1117	.

O	1118	1121	You
O	1122	1125	are
O	1126	1133	instead
O	1134	1143	disposing
O	1144	1147	the
O	1148	1156	Graphics
O	1157	1161	that
O	1162	1165	you
O	1166	1174	obtained
O	1175	1179	from
O	1180	1183	the
O	1184	1193	Component
O	1193	1194	,
O	1195	1200	which
O	1201	1204	may
O	1205	1207	be
O	1208	1212	even
O	1213	1218	worse
O	1219	1223	than
O	1224	1232	fetching
O	1233	1235	it
O	1236	1238	in
O	1239	1242	the
O	1243	1248	first
O	1249	1254	place
O	1254	1255	!

O	1256	1257	I
O	1258	1264	wonder
O	1265	1268	why
O	1269	1272	you
O	1273	1276	are
O	1277	1287	overriding
O	1288	1291	the
O	1292	1301	addNotify
O	1302	1308	method
O	1308	1309	.

O	1310	1313	You
O	1314	1320	should
O	1321	1324	not
O	1325	1334	implement
O	1335	1338	any
O	1339	1352	functionality
O	1353	1358	based
O	1359	1361	on
O	1362	1372	averriding
O	1373	1377	this
O	1378	1384	method
O	1385	1389	....

O	1390	1392	So
O	1393	1396	you
O	1397	1403	should
O	1404	1410	change
O	1411	1414	the
O	1415	1424	respecive
O	1425	1430	parts
O	1431	1433	of
O	1434	1438	your
O	1439	1449	BoardPanel
O	1450	1455	class
O	1456	1463	roughly
O	1464	1466	as
O	1467	1474	follows
O	1475	1476	:

B-API	0	4	Java
I-API	5	11	JTable
O	12	21	groupings

O	22	25	I'd
O	26	30	like
O	31	33	to
O	34	37	get
O	38	42	some
O	43	51	ordering
O	52	56	into
O	57	59	my
B-API	60	66	JTable
O	66	67	.

O	68	77	Currently
O	78	79	I
O	80	84	have
O	85	88	one
O	89	94	large
B-API	95	101	JTable
O	102	112	containing
O	113	116	all
O	117	122	items
O	122	123	.

O	124	127	But
O	128	133	since
O	134	137	I'm
O	138	145	dealing
O	146	150	with
O	151	152	(
O	152	155	sub
O	155	156	)
O	157	167	selections
O	168	171	I'd
O	172	176	like
O	177	179	to
O	180	184	make
O	185	189	some
O	190	198	grouping
O	198	199	.

O	200	210	Expressing
O	211	215	this
O	216	218	in
O	219	226	textual
O	227	231	form
O	232	233	:
O	234	253	@codeSnippetRemoved

O	254	264	Expressing
O	265	269	this
O	270	272	in
B-PL	273	278	HTML5
O	279	280	:
B-Fram	281	289	jsfiddle

O	290	302	Experimental
B-Stan	303	308	SSCCE
O	309	310	:
O	311	330	@codeSnippetRemoved

O	331	333	My
O	334	339	guess
O	340	342	is
O	343	347	that
O	348	353	it'll
O	354	356	be
O	357	363	really
O	364	368	hard
O	369	371	to
O	372	375	use
O	376	379	out
O	380	382	of
O	383	386	the
O	387	390	box
B-API	391	397	JTable
O	397	398	.

O	399	408	Therefore
O	409	412	I'm
O	413	420	looking
O	421	424	for
O	425	428	any
O	429	434	other
O	435	443	suitable
O	444	451	options
O	451	452	.

O	453	455	My
B-Stan	456	461	SSCCE
O	462	471	described
O	472	473	a
O	474	482	possible
O	483	491	solution
O	491	492	,
O	493	496	but
O	497	498	a
O	499	502	big
O	503	511	drawback
O	512	514	is
O	515	519	that
O	520	521	a
O	522	530	multiple
O	531	533	of
B-API	534	546	JTableHeader
O	547	548	'
O	549	550	s
O	551	554	are
O	555	558	all
O	559	565	across
O	566	568	my
O	569	580	application
O	580	581	.

O	582	586	Does
O	587	593	anyone
O	594	598	have
O	599	600	a
O	601	606	smart
O	607	611	idea
O	612	614	to
O	615	621	easily
O	622	626	show
O	627	629	my
O	630	634	data
O	635	637	as
O	638	641	was
O	642	646	seen
O	647	649	in
O	650	652	my
B-PL	653	658	HTML5
O	659	666	example
O	666	667	?

O	668	672	With
O	673	675	or
O	676	683	without
B-API	684	690	JTable
O	690	691	,
O	692	693	I
O	694	699	don't
O	700	706	really
O	707	711	mind
O	711	712	.

O	713	719	Turned
O	720	723	out
O	724	728	that
O	729	730	a
B-API	731	742	JXTreeTable
O	743	748	suits
O	749	751	my
O	752	757	needs
O	757	758	,
O	759	763	this
O	764	767	tip
O	768	771	was
O	772	777	given
O	778	780	by
O	781	790	@mrKorbel
O	790	791	.

O	792	795	See
O	796	869	http://javanbswing.blogspot.nl/2013/08/swing-treetable-example-using.html
O	870	873	for
O	874	875	a
O	876	880	good
O	881	889	tutorial
O	890	892	on
O	893	896	how
O	897	899	to
O	900	909	implement
O	910	911	a
O	912	917	basic
B-API	918	929	JXTreeTable
O	929	930	.

O	0	4	Game
O	5	9	Jump
O	10	12	in
B-PL	13	17	Java

O	18	20	So
O	21	24	I'm
O	25	31	trying
O	32	34	to
O	35	38	get
O	39	43	this
O	44	53	rectangle
O	54	56	to
O	57	64	perform
O	65	66	a
O	67	74	jumping
O	75	81	motion
O	82	87	every
O	88	92	time
O	93	94	I
O	95	98	hit
O	99	102	the
O	103	108	space
O	109	112	bar
O	112	113	.

O	114	118	When
O	119	120	I
O	121	124	tap
O	125	128	the
O	129	134	space
O	135	138	bar
O	139	142	the
O	143	149	motion
O	150	152	is
O	153	157	fine
O	157	158	.

O	159	161	It
O	162	166	goes
O	167	169	up
O	170	173	and
O	174	179	comes
O	180	184	back
O	185	189	down
O	189	190	,
O	191	194	but
O	195	198	the
O	199	205	motion
O	206	211	isn't
O	212	216	very
O	217	222	fluid
O	222	223	.

O	224	226	It
O	227	231	just
O	232	243	immediately
O	244	249	comes
O	250	252	up
O	253	255	to
O	256	259	the
O	260	264	high
O	265	270	point
O	271	274	and
O	275	279	then
O	280	291	immediately
O	292	296	goes
O	297	301	back
O	302	304	to
O	305	308	the
O	309	315	ground
O	315	316	.

O	317	320	How
O	321	323	do
O	324	325	I
O	326	329	fix
O	330	334	this
O	334	335	?

O	336	340	Here
O	341	343	is
O	344	347	the
O	348	352	code
O	353	356	for
O	357	360	the
O	361	368	jumping
O	369	375	motion
O	376	377	(
O	377	381	Jump
O	382	384	is
O	385	389	what
O	390	392	is
O	393	399	called
O	400	404	upon
O	405	413	pressing
O	414	417	the
O	418	423	space
O	424	427	key
O	428	431	and
O	432	436	Fall
O	437	439	is
O	440	442	on
O	443	446	the
O	447	454	release
O	455	457	of
O	458	461	the
O	462	467	space
O	468	471	key
O	471	472	)
O	473	474	:
O	475	494	@codeSnippetRemoved

O	495	498	I'm
O	499	507	guessing
O	508	512	that
B-API	513	530	actionPerformed()
O	531	533	is
O	534	541	getting
O	542	548	called
O	549	551	by
O	552	556	some
O	557	562	clock
O	562	563	?

O	564	565	I
O	566	571	think
O	572	575	the
O	576	583	problem
O	584	586	is
O	587	591	that
O	591	592	,
O	593	599	within
B-API	600	615	actionPerformed
O	615	616	,
O	617	623	you've
O	624	629	added
O	630	634	your
O	635	638	own
O	639	644	while
O	645	649	loop
O	649	650	.

O	651	653	So
O	653	654	,
O	655	659	even
O	660	666	though
B-API	667	682	actionPerformed
O	683	687	only
O	688	692	gets
O	693	699	called
O	700	701	X
O	702	707	times
O	708	711	per
O	712	718	second
O	718	719	,
O	720	724	that
O	725	730	while
O	731	735	loop
O	736	738	is
O	739	744	going
O	745	747	to
O	748	754	update
O	755	759	your
O	760	769	variables
O	770	771	(
O	771	775	time
O	775	776	,
O	777	779	py
O	779	780	,
O	781	784	etc
O	784	785	.
O	785	786	)
O	787	790	and
O	791	798	repaint
O	799	802	the
O	803	809	screen
O	810	812	as
O	813	817	fast
O	818	820	as
O	821	823	it
O	824	827	can
O	827	828	.

O	829	830	I
O	831	836	can't
O	837	843	really
O	844	848	give
O	849	852	you
O	853	856	the
O	857	864	correct
O	865	869	code
O	870	877	without
O	878	891	understanding
O	892	895	the
O	896	905	interface
O	906	912	you're
O	913	918	using
O	919	920	(
O	920	924	i.e.
O	925	926	I
O	927	932	don't
O	933	937	know
O	938	943	where
O	944	945	"
O	945	949	time
O	949	950	"
O	951	954	and
O	955	956	"
O	956	958	py
O	958	959	"
O	960	964	come
O	965	969	from
O	969	970	)
O	970	971	,
O	972	975	but
O	976	981	maybe
O	982	985	try
O	986	995	something
O	996	1000	like
O	1001	1005	this
O	1006	1007	:
O	1008	1027	@codeSnippetRemoved

B-PL	0	4	Java
O	4	5	,
B-Fram	6	12	Tomcat
O	13	16	and
O	17	23	Jersey
O	24	31	hosting

O	32	36	Does
O	37	43	anyone
O	44	48	have
O	49	52	any
O	53	62	knowledge
O	63	65	of
O	66	67	a
O	68	75	hosting
O	76	84	provider
O	85	89	that
O	90	96	allows
O	97	100	for
O	101	104	the
O	105	108	use
O	109	111	of
O	112	115	the
O	116	125	following
O	126	127	:

B-PL	128	132	Java
B-Fram	133	139	Tomcat
O	140	146	Jersey
B-PL	147	152	MySQL

O	153	154	I
O	155	159	have
O	160	164	been
O	165	172	looking
O	173	179	around
O	180	183	and
O	184	188	cant
O	189	193	seem
O	194	196	to
O	197	201	find
O	201	202	.

O	203	209	Thanks

O	210	213	Try
O	214	221	Kattare
O	221	222	.

O	223	233	Relatively
O	234	245	inexpensive
O	246	249	and
O	250	254	very
O	255	265	responsive
O	266	273	support
O	274	276	by
O	277	282	email
O	283	286	and
O	287	289	by
O	290	295	phone
O	295	296	.

O	0	9	Recieving
O	10	13	0.0
O	14	18	when
O	19	30	multiplying
O	31	34	two
O	35	42	doubles
O	43	45	in
O	46	48	an
O	49	54	array
O	54	55	.

O	56	59	Any
O	60	64	help
O	64	65	?

O	66	67	(
O	67	71	noob
O	72	77	issue
O	77	78	)

O	79	82	I'm
O	83	89	having
O	90	95	quite
O	96	97	a
O	98	101	bit
O	102	104	of
O	105	112	trouble
O	113	124	multiplying
O	125	128	two
O	129	136	doubles
O	137	139	in
O	140	142	an
O	143	148	array
O	148	149	.

O	150	153	The
O	154	160	result
O	161	167	always
O	168	173	seems
O	174	176	to
O	177	179	be
O	180	183	0.0
O	184	186	no
O	187	193	matter
O	194	198	what
O	199	200	I
O	201	203	do
O	203	204	.

O	205	209	I've
O	210	215	tried
O	216	223	casting
O	223	224	,
O	225	233	changing
O	234	237	the
O	238	247	variables
O	248	252	from
O	253	259	double
O	260	262	to
O	263	266	int
O	266	267	,
O	268	271	etc
O	271	272	.

O	273	277	What
O	278	280	am
O	281	282	I
O	283	288	doing
O	289	294	wrong
O	294	295	?

O	296	302	Having
O	303	304	a
O	305	309	hard
O	310	314	time
O	315	322	finding
O	323	324	a
O	325	334	duplicate
O	335	343	question
O	344	347	but
O	348	351	I'm
O	352	356	more
O	357	361	than
O	362	366	sure
O	367	372	there
O	373	375	is
O	376	379	one
O	379	380	.

O	381	386	Could
O	387	394	someone
O	395	401	direct
O	402	404	me
O	405	407	to
O	408	410	it
O	410	411	?

O	412	418	Thanks

O	419	421	My
O	422	426	code
O	427	428	:
O	429	448	@codeSnippetRemoved

O	449	453	When
O	454	455	I
O	456	459	try
O	460	462	to
O	463	468	print
O	469	472	any
O	473	478	value
O	479	481	of
O	482	490	speedMPH
O	491	494	the
O	495	501	output
O	502	504	is
O	505	508	0.0

O	509	512	Any
O	513	517	help
O	518	523	would
O	524	526	be
O	527	538	appreciated
O	538	539	.

O	540	546	You're
O	547	551	only
O	552	561	modifying
O	562	565	the
O	566	571	first
O	572	579	element
O	580	582	of
O	583	591	speedMPH
O	592	593	(
O	593	594	n
O	595	597	is
O	598	604	always
O	605	606	0
O	606	607	)
O	607	608	.

O	609	612	I'd
O	613	622	recommend
O	623	628	using
O	629	630	a
O	631	637	normal
O	638	646	for-loop
O	646	647	,
O	648	655	because
O	656	659	you
O	660	664	need
O	665	668	the
O	669	676	current
O	677	682	index
O	682	683	.

O	684	703	@codeSnippetRemoved

O	704	711	Casting
O	712	714	to
O	715	721	double
O	722	724	is
O	725	728	not
O	729	738	necessary
O	738	739	.

O	740	742	If
O	743	746	you
O	747	753	really
O	754	758	want
O	759	761	to
O	762	765	use
O	766	768	an
O	769	777	enhanced
O	778	786	for-loop
O	786	787	,
O	788	791	you
O	792	796	need
O	797	799	to
O	800	809	increment
O	810	811	n
O	812	813	:
O	814	833	@codeSnippetRemoved

O	834	837	The
O	838	843	value
O	844	846	of
O	847	848	n
O	849	851	is
O	852	857	never
O	858	868	increasing
O	868	869	.

O	870	873	The
O	874	881	program
O	882	894	continuously
O	895	902	changes
O	903	906	the
O	907	912	value
O	913	915	of
O	916	926	speedMPH[0
O	927	928	]
O	928	929	,
O	930	933	not
O	934	939	other
O	940	946	values
O	947	949	of
O	950	953	the
O	954	959	array
O	959	960	.

O	961	964	Try
O	965	971	adding
O	972	973	a
O	974	977	n++
O	978	979	;
O	980	982	to
O	983	987	your
O	988	992	loop
O	992	993	.

O	994	997	I'm
O	998	1001	not
O	1002	1013	neccesarily
O	1014	1018	sure
O	1019	1022	why
O	1023	1029	you're
O	1030	1042	experiencing
O	1043	1047	this
O	1048	1053	issue
O	1053	1054	.

O	1055	1059	Just
O	1060	1062	by
O	1063	1070	looking
O	1071	1073	at
O	1074	1076	it
O	1076	1077	,
O	1078	1079	I
O	1080	1083	can
O	1084	1087	see
O	1088	1092	that
O	1093	1096	all
O	1097	1103	should
O	1104	1110	return
O	1111	1114	0.0
O	1114	1115	,
O	1116	1122	except
O	1123	1126	the
O	1127	1132	first
O	1133	1138	index
O	1139	1141	or
O	1141	1142	,
O	1143	1145	so
O	1146	1152	called
O	1153	1158	index
O	1159	1161	No
O	1161	1162	.

O	1163	1164	0
O	1164	1165	.

O	1166	1172	You're
O	1173	1178	using
O	1179	1180	n
O	1181	1183	as
O	1184	1187	the
O	1188	1196	iterator
O	1197	1200	but
O	1201	1204	you
O	1205	1210	never
O	1211	1219	increase
O	1220	1222	it
O	1222	1223	,
O	1224	1228	thus
O	1229	1232	all
O	1233	1239	inputs
O	1240	1243	you
O	1244	1246	do
O	1247	1249	to
O	1250	1253	the
O	1254	1262	speedMPH
O	1263	1268	array
O	1269	1273	will
O	1274	1276	go
O	1277	1281	into
O	1282	1287	index
O	1288	1289	0
O	1289	1290	.

O	1291	1295	Here
O	1296	1297	'
O	1298	1299	s
O	1300	1302	my
O	1303	1307	code
O	1307	1308	,
O	1309	1312	and
O	1313	1315	it
O	1316	1317	'
O	1318	1319	s
O	1320	1327	working
O	1328	1332	just
O	1333	1337	fine
O	1337	1338	.

O	1339	1358	@codeSnippetRemoved

O	1359	1367	Printing
O	1368	1369	:
O	1370	1389	@codeSnippetRemoved

B-Fram	0	6	izpack
O	7	16	installer
O	17	20	not
O	21	28	getting
O	29	41	instantiated

O	42	43	I
O	44	48	have
O	49	53	made
O	54	56	an
O	57	66	installer
O	67	72	using
B-Fram	73	76	ANT
O	77	88	integration
O	89	92	and
O	93	96	the
O	97	102	build
O	103	107	done
O	108	110	is
O	111	115	also
O	116	126	successful
O	126	127	.

O	128	129	I
O	130	135	tried
O	136	143	testing
O	144	147	the
O	148	157	installer
B-Stan	158	161	jar
O	162	166	over
B-Plat	167	173	ubuntu
O	174	177	but
O	178	180	it
O	181	182	'
O	183	184	s
O	185	188	not
O	189	196	getting
O	197	209	instantiated
O	210	212	in
B-Plat	213	220	windows
I-Plat	221	226	7.The
O	227	234	version
O	235	237	of
O	238	244	Izpack
O	245	249	that
O	250	253	I'm
O	254	259	using
O	260	262	is
O	263	284	izpack-dist-5.0.0-rc3
O	284	285	.

O	286	287	I
O	288	292	just
O	293	296	get
O	297	298	a
O	299	306	warning
O	307	311	each
O	312	316	time
O	317	318	I
O	319	322	try
O	323	325	to
O	326	333	execute
O	334	337	the
B-Stan	338	341	jar
O	341	342	,
O	343	348	which
O	349	351	is
O	352	354	->

O	355	361	Kindly
O	362	369	provide
O	370	373	any
O	374	384	assistance
O	384	385	,
O	386	388	if
O	389	397	possible
O	397	398	.

B-Plat	0	7	Android
O	8	12	open
O	13	15	an
B-API	16	24	EditText
O	25	29	link
O	30	35	using
O	36	37	a
O	38	44	button

O	45	49	I've
O	50	58	searched
O	59	65	around
O	66	71	allot
O	72	74	on
O	75	78	how
O	79	81	to
O	82	86	open
O	87	88	a
O	89	93	link
O	94	98	that
O	99	102	you
O	103	107	have
O	108	115	entered
O	116	118	in
O	119	121	an
O	122	127	input
O	128	133	field
O	134	135	(
B-API	135	143	EditText
O	143	144	)
O	145	150	which
O	151	155	will
O	156	160	open
O	161	165	when
O	166	169	you
O	170	175	press
O	176	177	a
O	178	184	button
O	184	185	.

O	186	189	But
O	190	195	sadly
O	195	196	,
O	197	201	I've
O	202	206	only
O	207	212	found
O	213	217	this
O	217	218	.

O	219	223	What
O	224	225	I
O	226	228	am
O	229	235	aiming
O	236	239	for
O	240	242	is
O	243	252	something
O	253	260	similar
O	261	263	to
O	264	268	this
O	268	269	,
O	270	271	I
O	272	276	want
O	277	279	to
O	280	284	have
O	285	286	a
O	287	294	default
O	295	299	link
O	300	307	already
O	308	314	stated
O	315	317	in
O	318	321	the
O	322	326	code
O	327	334	however
O	335	339	when
O	340	343	you
O	344	349	enter
O	350	354	text
O	355	359	into
O	360	363	the
O	364	369	input
O	370	375	field
O	375	376	,
O	377	379	it
O	380	384	will
O	385	388	add
O	389	391	to
O	392	395	the
O	396	403	default
O	404	408	link
O	408	409	.

O	410	413	For
O	414	421	example
O	422	431	something
O	432	436	like
O	437	441	this
O	441	442	,
O	443	450	default
O	451	455	link
O	456	458	is
O	459	460	:
O	461	482	http://www.google.com
O	483	486	But
O	487	491	when
O	492	493	I
O	494	499	enter
O	500	501	"
O	501	507	design
O	507	508	"
O	509	513	into
O	514	517	the
O	518	523	input
O	524	529	field
O	530	531	(
B-API	531	539	EditText
O	539	540	)
O	541	544	and
O	545	548	hit
O	549	552	the
O	553	559	button
O	560	562	it
O	563	567	will
O	568	572	make
O	573	575	it
O	576	577	:
O	578	606	http://www.google.com/design
O	607	610	and
O	611	616	it'll
O	617	621	open
O	622	625	the
O	626	630	link
O	631	633	as
O	634	638	that
O	638	639	.

O	640	643	How
O	644	647	can
O	648	649	I
O	650	657	achieve
O	658	662	this
O	662	663	?

O	664	667	I'm
O	668	671	new
O	672	674	to
O	675	686	programming
O	687	690	and
O	691	695	I've
O	696	701	taken
O	702	703	a
O	704	708	look
O	709	711	at
O	712	715	the
B-Fram	716	720	AOSP
I-Fram	721	728	browser
O	729	733	code
O	734	737	but
O	738	740	it
O	741	742	'
O	743	744	s
O	745	748	far
O	749	752	too
O	753	760	complex
O	761	764	for
O	765	767	me
O	768	770	to
O	771	781	understand
O	781	782	.

O	783	792	Hopefully
O	793	800	someone
O	801	806	could
O	807	814	explain
O	815	818	how
O	819	820	I
O	821	824	can
O	825	832	achieve
O	833	842	something
O	843	847	like
O	848	852	this
O	852	853	,
O	854	860	please
O	861	866	don't
O	867	870	get
O	871	876	angry
O	877	879	at
O	880	882	me
O	883	890	because
O	891	892	I
O	893	897	have
O	898	902	seen
O	903	907	many
O	908	911	new
O	912	917	users
O	918	925	getting
O	926	932	bashed
O	933	937	upon
O	938	944	asking
O	945	951	simple
O	952	958	things
O	958	959	.

O	960	966	Thanks
O	966	967	.

O	968	972	Here
O	973	975	is
O	976	977	a
O	978	986	detailed
O	987	991	code
O	992	994	as
O	995	998	per
O	999	1003	your
O	1004	1015	requirement
O	1015	1016	.

O	1017	1023	Please
O	1024	1027	let
O	1028	1030	me
O	1031	1035	know
O	1036	1038	if
O	1039	1042	you
O	1043	1047	find
O	1048	1051	any
O	1052	1059	problem
O	1060	1061	:

O	1062	1066	Your
B-Stan	1067	1070	XML
O	1071	1072	:

B-Fram	0	3	Ant
O	4	12	standard
O	13	18	tasks

B-Fram	19	24	Maven
O	25	28	has
O	29	30	a
O	31	37	fairly
O	38	50	standardized
O	51	58	project
O	59	68	structure
O	69	72	and
O	73	81	standard
O	82	89	plugins
O	90	93	for
O	94	105	compilation
O	106	109	and
O	110	117	testing
O	117	118	.

O	119	121	Is
O	122	127	there
O	128	137	something
O	138	148	widespread
O	149	152	for
B-Fram	153	156	Ant
O	156	157	?

O	158	159	I
O	160	165	found
O	166	169	the
O	170	179	following
O	180	188	projects
O	189	191	so
O	192	195	far
O	196	197	:

O	198	207	Antiplate

B-Fram	208	211	Ant
I-Fram	212	218	Script
I-Fram	219	226	Library

O	227	230	But
O	231	234	I'm
O	235	238	not
O	239	243	sure
O	244	251	whether
O	252	257	these
O	258	261	are
O	262	272	widespread
O	273	276	and
O	277	280	are
O	281	287	likely
O	288	290	to
O	291	293	be
O	294	304	maintained
O	305	307	in
O	308	311	the
O	312	318	future
O	318	319	.

O	320	324	Does
O	325	332	someone
O	333	337	have
O	338	348	experience
O	349	353	with
O	354	358	them
O	358	359	?

O	360	361	I
O	362	366	have
O	367	372	never
O	373	378	heard
O	379	381	of
O	382	386	them
O	386	387	.

O	388	392	I've
O	393	397	been
O	398	400	on
O	401	402	2
O	403	414	significant
B-PL	415	419	Java
O	420	428	projects
O	429	435	lately
O	435	436	.

O	437	440	Our
B-Fram	441	444	ant
O	445	450	tasks
O	451	455	were
O	456	462	simple
O	463	466	and
O	467	477	home-grown
O	477	478	.

O	479	483	Each
O	484	488	time
O	489	496	someone
O	497	503	starts
O	504	505	a
O	506	509	new
O	510	517	project
O	518	522	they
O	523	527	make
O	528	529	a
O	530	534	copy
O	535	537	of
O	538	541	the
B-Fram	542	545	ant
O	546	550	file
O	551	554	and
O	555	561	mostly
O	562	566	just
O	567	573	change
O	574	578	some
O	579	588	constants
O	589	591	at
O	592	595	the
O	596	599	top
O	599	600	.

O	601	602	I
O	603	607	know
O	608	611	the
O	612	615	guy
O	616	619	who
O	620	625	wrote
B-Fram	626	629	Ant
I-Fram	630	636	Script
I-Fram	637	644	Library
O	644	645	.

O	646	648	He
O	649	656	doesn't
O	657	661	have
O	662	665	any
O	666	675	intention
O	676	678	of
O	679	687	stopping
O	687	688	.

O	689	691	To
O	692	694	me
O	694	695	,
B-Fram	696	699	Ant
O	700	701	'
O	702	703	s
O	704	715	flexibility
O	716	721	makes
O	722	724	it
O	725	729	hard
O	730	733	for
O	734	740	things
O	741	745	like
O	746	750	this
O	751	753	to
O	754	761	succeed
O	761	762	.

B-Fram	763	774	Ant-contrib
O	775	779	only
O	780	785	makes
O	786	788	it
O	789	794	worse
O	795	799	IMHO
O	800	802	as
O	803	805	it
O	806	812	allows
O	813	819	people
O	820	822	to
O	823	828	break
O	829	832	the
O	833	838	model
O	839	841	of
O	842	845	the
O	846	850	tool
O	850	851	.

O	852	857	Shame
O	857	858	,
O	859	861	as
B-Fram	862	865	Ant
O	866	868	is
O	869	881	phenomenally
O	882	890	powerful
O	891	893	if
O	894	897	you
O	898	901	use
O	902	904	it
O	905	913	properly
O	913	914	.

O	0	3	how
O	4	7	can
O	8	9	I
O	10	13	get
O	14	18	Font
O	19	20	X
O	21	27	offset
O	28	33	width
O	34	36	in
B-Fram	37	43	java2D
O	43	44	?

O	45	46	I
O	47	51	need
O	52	57	print
O	58	61	two
O	62	67	words
O	68	69	:
O	70	71	"
O	71	72	A
O	72	73	"
O	74	77	and
O	78	79	"
O	79	80	B
O	80	81	"
O	82	87	using
B-Fram	88	92	java
I-Fram	93	95	2D

O	96	100	font
O	101	105	size
O	106	107	=
O	108	111	100
O	112	113	;

O	114	115	"
O	115	116	A
O	116	117	"
O	118	122	font
O	123	129	family
O	130	131	:
O	132	138	Bodoni
O	139	141	MT
O	142	148	Poster
O	149	159	Compressed

O	160	161	"
O	161	162	B
O	162	163	"
O	164	168	font
O	169	175	family
O	176	177	:
O	178	183	Arial

O	184	185	I
O	186	192	writed
O	193	198	below
O	199	204	codes
O	205	207	to
O	208	210	do
O	211	213	it
O	214	215	:
O	216	235	@codeSnippetRemoved

O	236	237	I
O	238	241	get
O	242	245	the
O	246	252	result
O	253	258	image
O	259	260	:

O	261	264	but
O	265	266	I
O	267	271	need
O	272	276	like
O	277	281	this
O	282	283	(
O	283	287	make
O	288	290	by
B-Fram	291	300	PhotoShop
O	301	303	):

O	304	305	I
O	306	311	think
O	312	315	the
O	316	324	question
O	325	327	at
O	328	340	g.drawString
O	341	342	(
O	342	343	"
O	343	344	B
O	344	345	"
O	345	346	,
O	347	356	FONT_SIZE
O	356	357	,
O	358	367	FONT_SIZE
O	368	370	);

O	371	374	How
O	375	378	can
O	379	380	I
O	381	384	get
O	385	388	the
O	389	393	font
O	394	395	X
O	396	402	offset
O	403	408	width
O	408	409	?

O	410	416	thanks
O	417	420	for
O	421	425	help
O	426	428	:)

O	429	434	After
O	435	438	you
O	439	441	do
O	442	445	the
B-API	446	453	setFont
O	453	454	,
O	455	462	declare
O	463	464	a
O	465	473	variable
O	474	478	like
O	479	498	@codeSnippetRemoved

O	499	502	Now
O	503	507	that
O	508	511	you
O	512	516	have
O	517	520	all
O	521	524	the
O	525	535	dimensions
O	536	538	of
O	539	542	the
O	543	550	letters
O	550	551	,
O	552	555	set
O	556	561	their
O	562	571	positions
O	572	573	(
O	573	575	px
O	576	578	is
O	579	587	distance
O	588	592	from
O	593	596	the
O	597	601	left
O	602	606	edge
O	607	609	to
O	610	613	the
O	614	620	letter
O	620	621	,
O	622	624	py
O	625	629	from
O	630	633	the
O	634	637	top
O	638	640	to
O	641	644	the
O	645	653	baseline
O	654	656	of
O	657	660	the
O	661	665	font
O	665	666	)
O	667	686	@codeSnippetRemoved

O	687	690	And
O	691	700	similarly
O	701	704	for
O	705	706	"
O	706	707	B
O	707	708	"
O	708	709	.

O	710	714	Hope
O	715	719	that
O	720	725	helps
O	725	726	,
O	727	728	-
O	729	732	M.S
O	732	733	.

O	0	6	Double
O	7	12	value
O	13	21	negative
O	22	27	after
O	28	42	multiplication
O	43	48	-Java

O	49	51	In
O	52	54	my
O	55	59	code
O	60	61	i
O	62	66	have
O	67	76	following
O	77	81	line
O	81	82	.

O	83	102	@codeSnippetRemoved

O	103	107	Here
O	108	111	c12
O	112	114	is
O	115	121	double
O	122	125	and
O	126	136	fileSizeis
O	137	143	double
O	144	147	c12
O	148	152	have
O	153	154	a
O	155	160	value
O	161	165	1700
O	166	169	and
O	170	178	fileSize
O	179	183	have
O	184	185	a
O	186	191	value
O	192	199	1944038

O	200	203	but
O	204	209	after
O	210	224	multiplication
O	225	226	i
O	227	229	am
O	230	237	getting
O	238	248	-990102696
O	248	249	.

O	250	253	Can
O	254	257	any
O	258	261	one
O	262	266	help
O	267	269	me
O	270	272	on
O	273	275	it
O	275	276	?

O	277	279	Is
O	280	284	that
O	285	289	some
O	290	294	size
O	295	301	limits
O	302	306	went
O	307	312	wrong
O	312	313	?

O	314	315	(
O	315	318	int
O	318	319	)
O	320	324	1700
O	325	326	*
O	327	328	(
O	328	331	int
O	331	332	)
O	333	340	1944038
O	341	343	is
O	344	349	equal
O	350	352	to
O	353	357	your
O	358	368	-990102696
O	368	369	.

O	370	373	Are
O	374	377	you
O	378	382	sure
O	383	386	c12
O	387	390	and
O	391	399	fileSize
O	400	406	aren't
O	407	415	integers
O	415	416	?

O	417	419	If
O	420	424	they
O	425	428	are
O	428	429	,
O	430	433	the
O	434	448	multiplication
O	449	455	occurs
O	456	460	with
O	461	468	integer
O	469	474	types
O	474	475	,
O	476	483	integer
O	484	492	overflow
O	493	496	and
O	497	499	it
O	500	502	is
O	503	508	being
O	509	517	promoted
O	518	520	to
O	521	527	double
O	528	538	afterwards
O	538	539	.

O	540	543	Use
B-API	544	554	BigDecimal
O	555	563	multiply
O	564	570	method
O	571	578	instead
O	579	583	like
O	584	588	this
O	589	591	to
O	592	601	safeguard
O	602	609	against
O	610	619	potential
O	620	627	overlow
O	628	634	issues
O	635	640	while
O	641	649	handling
O	650	655	large
O	656	662	double
O	663	670	numbers
O	671	672	:
O	673	692	@codeSnippetRemoved

O	693	697	Your
O	698	701	c12
O	702	705	and
O	706	714	fileSize
O	715	718	are
O	719	723	most
O	724	730	likely
O	731	735	ints
O	736	737	(
O	737	739	+1
O	740	746	Tomasz
O	746	747	)
O	747	748	.

B-PL	749	753	Java
O	754	764	multiplies
O	765	768	the
O	769	773	ints
O	773	774	,
O	775	780	which
O	781	790	overflows
O	790	791	,
O	792	800	becoming
O	801	809	negative
O	809	810	,
O	811	814	and
O	815	819	then
O	820	826	stores
O	827	831	that
O	832	840	negative
O	841	846	value
O	847	849	in
O	850	854	your
O	855	861	double
O	861	862	.

O	863	867	Cast
O	868	871	c12
O	872	875	and
O	876	884	fileSize
O	885	887	to
O	888	894	double
O	895	901	before
O	902	913	multiplying
O	914	915	:
O	916	935	@codeSnippetRemoved

O	936	944	produces
O	945	946	:
O	947	966	@codeSnippetRemoved

O	967	971	Make
O	972	973	a
O	974	980	double
O	981	983	on
O	984	987	the
O	988	991	fly
O	992	993	:
O	994	1013	@codeSnippetRemoved

O	1014	1018	else
O	1018	1019	,
O	1020	1022	an
O	1023	1026	c12
O	1027	1029	as
O	1030	1033	int
O	1034	1038	will
O	1039	1041	be
O	1042	1052	multiplied
O	1053	1055	by
O	1056	1063	another
O	1064	1067	int
O	1067	1068	,
O	1069	1072	and
O	1073	1076	the
O	1077	1083	result
O	1084	1093	overflows
O	1093	1094	,
O	1095	1098	and
O	1099	1101	is
O	1102	1107	later
O	1108	1109	-
O	1110	1113	too
O	1114	1118	late
O	1119	1120	-
O	1121	1130	converted
O	1131	1133	to
O	1134	1140	double
O	1140	1141	.

O	1142	1161	@codeSnippetRemoved

O	1162	1167	would
O	1168	1172	help
O	1172	1173	,
O	1174	1177	but
O	1178	1179	a
O	1180	1188	filesize
O	1189	1191	as
O	1192	1197	float
O	1198	1199	/
O	1200	1206	double
O	1207	1212	looks
O	1213	1218	fishy
O	1218	1219	.

O	1220	1226	double
O	1227	1230	c12
O	1231	1232	=
O	1233	1237	1700
O	1238	1239	;
O	1240	1246	double
O	1247	1255	fileSize
O	1256	1257	=
O	1258	1265	1944038
O	1266	1267	;
O	1268	1274	double
O	1275	1279	temp
O	1280	1282	=(
O	1283	1295	c12*fileSize
O	1296	1298	);
B-API	1299	1317	System.out.println
O	1318	1319	(
O	1319	1323	temp
O	1324	1326	);

O	1327	1332	Gives
O	1333	1344	3.3048646E9

O	1345	1346	I
O	1347	1350	bet
O	1351	1355	your
O	1356	1359	c12
O	1360	1363	and
O	1364	1372	fileSize
O	1373	1376	are
O	1377	1381	ints
O	1381	1382	.

O	1383	1386	Hmm
O	1386	1387	,
O	1388	1389	I
O	1390	1394	just
O	1395	1400	tried
O	1401	1405	that
O	1406	1409	and
O	1410	1411	I
O	1412	1415	get
O	1416	1417	"
O	1417	1428	3.3048646E9
O	1428	1429	"
O	1429	1430	.

O	1431	1434	You
O	1435	1444	shouldn't
O	1445	1448	get
O	1449	1452	any
O	1453	1461	overflow
O	1462	1466	wrap
O	1467	1473	around
O	1474	1476	on
O	1477	1478	a
O	1479	1485	double
O	1486	1487	:
O	1488	1490	if
O	1491	1494	you
O	1495	1501	exceed
O	1502	1505	the
O	1506	1513	maximum
O	1513	1514	,
O	1515	1517	it
O	1518	1524	should
O	1525	1529	turn
O	1530	1534	into
O	1535	1536	"
O	1536	1544	Infinity
O	1544	1545	"
O	1545	1546	.

O	1547	1548	I
O	1549	1556	suspect
O	1557	1560	the
O	1561	1568	problem
O	1569	1571	is
O	1572	1574	in
O	1575	1583	whatever
O	1584	1590	you're
O	1591	1597	trying
O	1598	1600	to
O	1601	1603	do
O	1604	1606	to
O	1607	1612	write
O	1613	1617	this
O	1618	1624	number
O	1624	1625	.

O	1626	1628	Or
O	1629	1634	maybe
O	1635	1638	you
O	1639	1643	need
O	1644	1646	to
O	1647	1651	show
O	1652	1654	us
O	1655	1659	some
O	1660	1664	more
O	1665	1669	code
O	1669	1670	.

O	0	5	Batch
O	6	12	insert
O	13	18	using
B-Stan	19	22	JPA
O	23	24	/
B-Stan	25	32	Toplink

O	33	34	I
O	35	39	have
O	40	41	a
O	42	45	web
O	46	57	application
O	58	62	that
O	63	71	receives
O	72	80	messages
O	81	88	through
O	89	91	an
B-Stan	92	96	HTTP
O	97	106	interface
O	106	107	,
O	108	112	e.g.
O	113	114	:
O	115	134	@codeSnippetRemoved

O	135	139	This
O	140	147	request
O	148	156	contains
O	157	160	the
O	161	163	ID
O	164	166	of
O	167	170	the
O	171	177	sender
O	177	178	,
O	179	182	the
O	183	185	ID
O	186	188	of
O	189	192	the
O	193	202	recipient
O	203	206	and
O	207	210	the
O	211	215	text
O	216	218	of
O	219	222	the
O	223	230	message
O	230	231	.

O	232	236	This
O	237	244	message
O	245	251	should
O	252	254	be
O	255	264	processed
O	265	269	like
O	270	271	:

O	272	279	finding
O	280	283	the
O	284	292	matching
O	293	297	User
O	298	304	object
O	305	308	for
O	309	313	both
O	314	317	the
O	318	324	source
O	325	328	and
O	329	332	the
O	333	344	destination
O	345	349	from
O	350	353	the
O	354	362	database
O	363	371	creating
O	372	373	a
O	374	378	tree
O	379	381	of
O	382	389	objects
O	390	391	:
O	392	393	a
O	394	401	Message
O	402	406	that
O	407	415	contains
O	416	417	a
O	418	423	field
O	424	427	for
O	428	431	the
O	432	439	message
O	440	444	text
O	445	448	and
O	449	452	two
O	453	457	User
O	458	465	objects
O	466	469	for
O	470	473	the
O	474	480	source
O	481	484	and
O	485	488	the
O	489	500	destination
O	501	511	persisting
O	512	516	this
O	517	521	tree
O	522	524	to
O	525	526	a
O	527	535	database
O	535	536	.

O	537	540	The
O	541	545	tree
O	546	550	will
O	551	553	be
O	554	560	loaded
O	561	563	by
O	564	569	other
O	570	582	applications
O	583	587	that
O	588	589	I
O	590	595	can't
O	596	601	touch
O	601	602	.

O	603	604	I
O	605	608	use
O	609	615	Oracle
O	616	618	as
O	619	622	the
O	623	630	backing
O	631	639	database
O	640	643	and
B-Stan	644	647	JPA
O	648	652	with
B-Stan	653	660	Toplink
O	661	664	for
O	665	668	the
O	669	677	database
O	678	686	handling
O	687	692	tasks
O	692	693	.

O	694	696	If
O	697	705	possible
O	705	706	,
O	707	710	I'd
O	711	715	stay
O	716	720	with
O	721	726	these
O	726	727	.

O	728	735	Without
O	736	740	much
O	741	753	optimization
O	754	755	I
O	756	759	can
O	760	767	achieve
O	768	771	~30
O	772	780	requests
O	781	782	/
O	783	786	sec
O	787	797	throughput
O	798	800	in
O	801	803	my
O	804	815	environment
O	815	816	.

O	817	821	That
O	822	823	'
O	824	825	s
O	826	829	not
O	830	834	much
O	834	835	,
O	836	839	I'd
O	840	847	require
O	848	852	~300
O	853	861	requests
O	862	863	/
O	864	867	sec
O	867	868	.

O	869	871	So
O	872	873	I
O	874	882	measured
O	883	888	where
O	889	892	the
O	893	904	performance
O	905	915	bottleneck
O	916	918	is
O	919	922	and
O	923	928	found
O	929	933	that
O	934	937	the
O	938	943	calls
O	944	946	to
B-API	947	959	em.persist()
O	960	965	takes
O	966	970	most
O	971	973	of
O	974	977	the
O	978	982	time
O	982	983	.

O	984	986	If
O	987	988	I
O	989	995	simply
O	996	1003	comment
O	1004	1007	out
O	1008	1012	that
O	1013	1017	line
O	1017	1018	,
O	1019	1022	the
O	1023	1033	throughput
O	1034	1036	go
O	1037	1041	well
O	1042	1046	over
O	1047	1051	1000
O	1052	1060	requests
O	1061	1062	/
O	1063	1066	sec
O	1066	1067	.

O	1068	1069	I
O	1070	1075	tried
O	1076	1078	to
O	1079	1084	write
O	1085	1086	a
O	1087	1092	small
O	1093	1097	test
O	1098	1109	application
O	1110	1114	that
O	1115	1119	used
O	1120	1126	simple
B-Stan	1127	1131	JDBC
O	1132	1137	calls
O	1138	1140	to
O	1141	1148	persist
O	1149	1150	1
O	1151	1158	million
O	1159	1167	messages
O	1168	1170	to
O	1171	1174	the
O	1175	1179	same
O	1180	1188	database
O	1188	1189	.

O	1190	1191	I
O	1192	1196	used
O	1197	1205	batching
O	1205	1206	,
O	1207	1214	meaning
O	1215	1216	I
O	1217	1220	did
O	1221	1224	100
O	1225	1232	inserts
O	1233	1237	then
O	1238	1239	a
O	1240	1246	commit
O	1246	1247	,
O	1248	1251	and
O	1252	1260	repeated
O	1261	1266	until
O	1267	1270	all
O	1271	1274	the
O	1275	1282	records
O	1283	1286	was
O	1287	1289	in
O	1290	1293	the
O	1294	1302	database
O	1302	1303	.

O	1304	1305	I
O	1306	1314	measured
O	1315	1319	~500
O	1320	1328	requests
O	1329	1330	/
O	1331	1334	sec
O	1335	1345	throughput
O	1346	1348	in
O	1349	1353	this
O	1354	1362	scenario
O	1362	1363	,
O	1364	1368	that
O	1369	1374	would
O	1375	1379	meet
O	1380	1382	my
O	1383	1388	needs
O	1388	1389	.

O	1390	1392	It
O	1393	1395	is
O	1396	1401	clear
O	1402	1406	that
O	1407	1408	I
O	1409	1413	need
O	1414	1416	to
O	1417	1425	optimize
O	1426	1432	insert
O	1433	1444	performance
O	1445	1449	here
O	1449	1450	.

O	1451	1458	However
O	1459	1461	as
O	1462	1463	I
O	1464	1473	mentioned
O	1474	1481	earlier
O	1482	1483	I
O	1484	1489	would
O	1490	1494	like
O	1495	1497	to
O	1498	1502	keep
O	1503	1508	using
B-Stan	1509	1512	JPA
O	1513	1516	and
B-Fram	1517	1524	Toplink
O	1525	1528	for
O	1529	1533	this
O	1533	1534	,
O	1535	1538	not
O	1539	1543	pure
B-Stan	1544	1548	JDBC
O	1548	1549	.

O	1550	1552	Do
O	1553	1556	you
O	1557	1561	know
O	1562	1563	a
O	1564	1567	way
O	1568	1570	to
O	1571	1577	create
O	1578	1583	batch
O	1584	1591	inserts
O	1592	1596	with
B-Stan	1597	1600	JPA
O	1601	1604	and
B-Fram	1605	1612	Toplink
O	1612	1613	?

O	1614	1617	Can
O	1618	1621	you
O	1622	1631	recommend
O	1632	1635	any
O	1636	1641	other
O	1642	1651	technique
O	1652	1655	for
O	1656	1665	improving
B-Stan	1666	1669	JPA
O	1670	1677	persist
O	1678	1689	performance
O	1689	1690	?

O	1691	1701	ADDITIONAL
O	1702	1706	INFO
O	1707	1708	:

O	1709	1710	"
O	1710	1718	requests
O	1719	1720	/
O	1721	1724	sec
O	1724	1725	"
O	1726	1731	means
O	1732	1736	here
O	1737	1738	:
O	1739	1744	total
O	1745	1751	number
O	1752	1754	of
O	1755	1763	requests
O	1764	1765	/
O	1766	1771	total
O	1772	1776	time
O	1777	1781	from
O	1782	1791	beginning
O	1792	1794	of
O	1795	1799	test
O	1800	1802	to
O	1803	1807	last
O	1808	1814	record
O	1815	1822	written
O	1823	1825	to
O	1826	1834	database
O	1834	1835	.

O	1836	1837	I
O	1838	1843	tried
O	1844	1846	to
O	1847	1851	make
O	1852	1855	the
O	1856	1861	calls
O	1862	1864	to
B-API	1865	1877	em.persist()
O	1878	1890	asynchronous
O	1891	1893	by
O	1894	1902	creating
O	1903	1905	an
O	1906	1915	in-memory
O	1916	1921	queue
O	1922	1929	between
O	1930	1933	the
B-Stan	1934	1941	servlet
O	1942	1947	stuff
O	1948	1951	and
O	1952	1955	the
O	1956	1965	persister
O	1965	1966	.

O	1967	1969	It
O	1970	1976	helped
O	1977	1980	the
O	1981	1992	performance
O	1993	2000	greatly
O	2000	2001	.

O	2002	2009	However
O	2010	2013	the
O	2014	2019	queue
O	2020	2023	did
O	2024	2028	grow
O	2029	2035	really
O	2036	2040	fast
O	2041	2044	and
O	2045	2047	as
O	2048	2051	the
O	2052	2063	application
O	2064	2068	will
O	2069	2076	receive
O	2077	2081	~200
O	2082	2090	requests
O	2091	2092	/
O	2093	2099	second
O	2100	2112	continuously
O	2112	2113	,
O	2114	2116	It
O	2117	2119	is
O	2120	2123	not
O	2124	2126	an
O	2127	2137	acceptable
O	2138	2146	solution
O	2147	2150	for
O	2151	2153	me
O	2153	2154	.

O	2155	2157	In
O	2158	2162	this
O	2163	2172	decoupled
O	2173	2181	approach
O	2182	2183	I
O	2184	2193	collected
O	2194	2202	requests
O	2203	2206	for
O	2207	2210	100
O	2211	2215	msec
O	2216	2219	and
O	2220	2226	called
B-API	2227	2239	em.persist()
O	2240	2242	on
O	2243	2246	all
O	2247	2256	collected
O	2257	2262	items
O	2263	2269	before
O	2270	2279	commiting
O	2280	2283	the
O	2284	2295	transaction
O	2295	2296	.

O	2297	2300	The
B-API	2301	2321	EntityManagerFactory
O	2322	2324	is
O	2325	2331	cached
O	2332	2339	between
O	2340	2344	each
O	2345	2356	transaction
O	2356	2357	.

O	2358	2362	What
O	2363	2365	is
O	2366	2370	your
O	2371	2378	measure
O	2379	2381	of
O	2382	2383	"
O	2383	2391	requests
O	2392	2393	/
O	2394	2397	sec
O	2397	2398	"
O	2398	2399	?

O	2400	2402	In
O	2403	2408	other
O	2409	2414	words
O	2414	2415	,
O	2416	2420	what
O	2421	2428	happens
O	2429	2432	for
O	2433	2436	the
O	2437	2441	31st
O	2442	2449	request
O	2449	2450	?

O	2451	2455	What
O	2456	2464	resource
O	2465	2467	is
O	2468	2473	being
O	2474	2481	blocked
O	2481	2482	?

O	2483	2485	If
O	2486	2488	it
O	2489	2491	is
O	2492	2495	the
O	2496	2505	front-end
O	2506	2507	/
B-Stan	2508	2515	servlet
O	2516	2517	/
O	2518	2521	web
O	2522	2529	portion
O	2529	2530	,
O	2531	2534	can
O	2535	2538	you
O	2539	2542	run
B-API	2543	2555	em.persist()
O	2556	2558	in
O	2559	2566	another
O	2567	2573	thread
O	2574	2577	and
O	2578	2584	return
O	2585	2596	immediately
O	2596	2597	?

O	2598	2602	Also
O	2602	2603	,
O	2604	2607	are
O	2608	2611	you
O	2612	2620	creating
O	2621	2633	transactions
O	2634	2638	each
O	2639	2643	time
O	2643	2644	?

O	2645	2648	Are
O	2649	2652	you
O	2653	2661	creating
B-API	2662	2682	EntityManagerFactory
O	2683	2690	objects
O	2691	2695	with
O	2696	2700	each
O	2701	2708	request
O	2708	2709	?

O	2710	2713	You
O	2714	2720	should
O	2721	2729	decouple
O	2730	2734	from
O	2735	2738	the
B-Stan	2739	2742	JPA
O	2743	2752	interface
O	2753	2756	and
O	2757	2760	use
O	2761	2764	the
O	2765	2769	bare
B-API	2770	2777	TopLink
O	2778	2781	API
O	2781	2782	.

O	2783	2786	You
O	2787	2790	can
O	2791	2799	probably
O	2800	2805	chuck
O	2806	2809	the
O	2810	2817	objects
O	2818	2824	you're
O	2825	2835	persisting
O	2836	2840	into
O	2841	2842	a
B-API	2843	2853	UnitOfWork
O	2854	2857	and
O	2858	2864	commit
O	2865	2868	the
B-API	2869	2879	UnitOfWork
O	2880	2882	on
O	2883	2887	your
O	2888	2896	schedule
O	2897	2898	(
O	2898	2902	sync
O	2903	2905	or
O	2906	2911	async
O	2911	2912	)
O	2912	2913	.

O	2914	2918	Note
O	2919	2923	that
O	2924	2927	one
O	2928	2930	of
O	2931	2934	the
O	2935	2940	costs
O	2941	2943	of
B-API	2944	2956	em.persist()
O	2957	2959	is
O	2960	2963	the
O	2964	2972	implicit
O	2973	2978	clone
O	2979	2983	that
O	2984	2991	happens
O	2992	2994	of
O	2995	2998	the
O	2999	3004	whole
O	3005	3011	object
O	3012	3017	graph
O	3017	3018	.

B-API	3019	3026	TopLink
O	3027	3031	will
O	3032	3036	work
O	3037	3043	rather
O	3044	3050	better
O	3051	3053	if
O	3054	3057	you
B-API	3058	3078	uow.registerObject()
O	3079	3083	your
O	3084	3087	two
O	3088	3092	user
O	3093	3100	objects
O	3101	3109	yourself
O	3109	3110	,
O	3111	3117	saving
O	3118	3124	itself
O	3125	3128	the
O	3129	3137	identity
O	3138	3143	tests
O	3144	3146	it
O	3147	3150	has
O	3151	3153	to
O	3154	3163	otherwise
O	3164	3166	do
O	3166	3167	.

O	3168	3170	So
O	3171	3177	you'll
O	3178	3181	end
O	3182	3184	up
O	3185	3189	with
O	3190	3191	:
O	3192	3211	@codeSnippetRemoved

O	3212	3216	This
O	3217	3219	is
O	3220	3224	very
O	3225	3228	old
O	3229	3235	school
B-API	3236	3243	TopLink
O	3244	3247	btw
O	3248	3250	;)

O	3251	3255	Note
O	3256	3260	that
O	3261	3264	the
O	3265	3270	batch
O	3271	3275	will
O	3276	3280	help
O	3281	3282	a
O	3283	3286	lot
O	3286	3287	,
O	3288	3295	because
O	3296	3301	batch
O	3302	3309	writing
O	3310	3313	and
O	3314	3318	more
O	3319	3329	especially
O	3330	3335	batch
O	3336	3343	writing
O	3344	3348	with
O	3349	3358	parameter
O	3359	3366	binding
O	3367	3371	will
O	3372	3376	kick
O	3377	3379	in
O	3380	3385	which
O	3386	3389	for
O	3390	3394	this
O	3395	3401	simple
O	3402	3409	example
O	3410	3414	will
O	3415	3423	probably
O	3424	3428	have
O	3429	3430	a
O	3431	3435	very
O	3436	3441	large
O	3442	3448	impact
O	3449	3451	on
O	3452	3456	your
O	3457	3468	performance
O	3468	3469	.

O	3470	3475	Other
O	3476	3482	things
O	3483	3485	to
O	3486	3490	look
O	3491	3494	for
O	3495	3496	:
O	3497	3501	your
O	3502	3512	sequencing
O	3513	3517	size
O	3517	3518	.

O	3519	3520	A
O	3521	3524	lot
O	3525	3527	of
O	3528	3531	the
O	3532	3536	time
O	3537	3542	spent
O	3543	3550	writing
O	3551	3558	objects
O	3559	3561	in
B-API	3562	3569	TopLink
O	3570	3572	is
O	3573	3581	actually
O	3582	3587	spent
O	3588	3595	reading
O	3596	3606	sequencing
O	3607	3618	information
O	3619	3623	from
O	3624	3627	the
O	3628	3636	database
O	3636	3637	,
O	3638	3648	especially
O	3649	3653	with
O	3654	3657	the
O	3658	3663	small
O	3664	3672	defaults
O	3673	3674	(
O	3674	3675	I
O	3676	3681	would
O	3682	3690	probably
O	3691	3695	have
O	3696	3703	several
O	3704	3711	hundred
O	3712	3714	or
O	3715	3719	even
O	3720	3724	more
O	3725	3727	as
O	3728	3730	my
O	3731	3739	sequence
O	3740	3744	size
O	3744	3745	)
O	3745	3746	.

O	0	3	def
O	4	12	doStream
O	13	14	(
O	14	19	total
O	20	21	:
O	22	25	Int
O	26	27	=
O	28	29	0
O	30	32	):
O	33	36	Int
O	37	38	=
O	39	40	{
O	41	44	val
O	45	46	n
O	47	48	=
B-API	49	65	inputStream.read
O	66	67	(
O	67	73	buffer
O	73	74	)
O	75	77	if
O	78	79	(
O	79	80	n
O	81	83	-1
O	83	84	)
O	85	90	total
O	91	95	else
O	96	97	{
B-API	98	116	outputStream.write
O	117	118	(
O	118	124	buffer
O	124	125	,
O	126	127	0
O	127	128	,
O	129	130	n
O	130	131	)
O	132	140	doStream
O	141	142	(
O	142	147	total
O	148	149	+
O	150	151	n
O	151	152	)
O	153	154	}
O	155	156	}

B-API	157	167	doStream()
O	168	169	}

O	170	172	If
O	173	177	this
O	178	180	is
O	181	185	slow
O	186	187	:
O	188	207	@codeSnippetRemoved

O	208	211	you
O	212	215	can
O	216	222	expand
O	223	225	it
O	226	227	:
O	228	247	@codeSnippetRemoved

O	0	7	Inverse
O	8	15	Fourier
O	16	25	Transform
O	26	28	in
B-Plat	29	36	Android

O	37	40	Are
O	41	46	there
O	47	50	any
B-PL	51	55	Java
O	56	57	/
B-Plat	58	65	Android
O	66	75	libraries
O	76	80	that
O	81	85	have
O	86	97	implemented
O	98	101	the
O	102	109	inverse
O	110	117	fourier
O	118	127	transform
O	127	128	?

O	129	133	I've
O	134	139	found
O	140	141	a
O	142	145	few
O	146	150	that
O	151	160	implement
O	161	164	the
O	165	172	fourier
O	173	182	transform
O	183	186	but
O	187	191	none
O	192	196	that
O	197	206	implement
O	207	210	its
O	211	218	inverse
O	218	219	.

O	220	221	A
O	222	229	Fourier
O	230	239	transform
O	240	242	is
O	243	249	almost
O	250	253	its
O	254	257	own
O	258	265	inverse
O	265	266	.

O	267	279	Specifically
O	279	280	,
O	281	283	if
O	284	285	F
O	286	288	[]
O	289	291	is
O	292	296	your
O	297	304	Fourier
O	305	314	transform
O	314	315	,
O	316	335	@codeSnippetRemoved

O	336	337	(
O	337	342	where
O	343	344	K
O	345	352	depends
O	353	355	on
O	356	359	the
O	360	365	exact
O	366	376	definition
O	377	379	of
O	380	384	your
O	385	394	transform
O	395	396	;
O	397	400	see
O	401	404	the
O	405	413	relevant
O	414	421	section
O	422	424	of
O	425	428	the
O	429	438	wikipedia
O	439	446	article
O	447	449	on
O	450	453	DFT
O	454	455	'
O	456	457	s
O	457	458	)

O	459	462	The
O	463	472	wikipedia
O	473	480	article
O	481	489	suggests
O	490	491	a
O	492	498	number
O	499	501	of
O	502	506	ways
O	507	509	to
O	510	513	get
O	514	516	an
O	517	524	inverse
O	525	534	transform
O	534	535	.

O	536	539	One
O	540	543	way
O	544	546	is
O	547	549	to
O	550	557	reverse
O	558	561	the
O	562	567	order
O	568	570	of
O	571	574	the
O	575	580	input
O	581	582	(
O	582	594	specifically
O	594	595	,
O	596	600	swap
O	601	604	x[n
O	605	606	]
O	607	611	with
O	612	614	x[
O	615	618	N-n
O	619	620	]
O	620	621	)
O	622	628	before
O	629	639	performing
O	640	643	the
O	644	653	transform
O	653	654	.

O	655	662	Another
O	663	665	is
O	666	668	to
O	669	678	conjugate
O	679	683	your
O	684	688	data
O	689	695	before
O	696	699	and
O	700	705	after
O	706	709	you
O	710	717	perform
O	718	721	the
O	722	731	transform
O	731	732	.

O	733	735	In
O	736	739	any
O	740	744	case
O	744	745	,
O	746	749	you
O	750	754	will
O	755	764	generally
O	765	769	need
O	770	772	to
O	773	781	multiply
O	782	784	by
O	785	786	a
O	787	795	constant
O	796	802	factor
O	802	803	,
O	804	806	to
O	807	814	recover
O	815	819	your
O	820	826	signal
O	827	829	at
O	830	833	its
O	834	842	original
O	843	852	amplitude
O	852	853	.

O	854	856	In
O	857	864	summary
O	865	866	:
O	867	869	it
O	870	872	is
O	873	878	quick
O	879	882	and
O	883	887	easy
O	888	890	to
O	891	894	use
O	895	898	the
O	899	906	regular
O	907	916	transform
O	917	919	to
O	920	923	get
O	924	927	the
O	928	935	inverse
O	935	936	,
O	937	942	which
O	943	945	is
O	946	954	probably
O	955	958	why
O	959	963	they
O	964	969	don't
O	970	982	specifically
O	983	990	provide
O	991	994	one
O	994	995	.

O	0	3	You
O	4	10	should
O	11	15	then
O	16	19	use
O	20	23	the
O	24	27	get
O	28	31	...

O	32	33	-
O	34	37	and
O	38	41	set
O	42	45	...
O	46	53	methods
O	54	56	on
O	57	61	this
B-Stan	62	66	Blob
O	66	67	.

O	68	72	Here
O	73	76	you
O	77	86	basically
O	87	91	have
O	92	95	two
O	96	103	options
O	104	105	:

O	106	110	Work
O	111	115	with
O	116	117	a
O	118	128	byte-array
O	129	130	:

O	131	134	Get
O	135	139	hold
O	140	142	of
O	143	144	a
O	145	149	byte
O	150	152	[]
O	153	163	containing
O	164	167	the
O	168	172	data
O	173	180	through
B-API	181	194	Blob.getBytes
O	195	205	Manipulate
O	206	210	this
O	211	221	byte-array
O	222	225	Set
O	226	228	it
O	229	233	back
O	234	239	using
B-API	240	253	Blob.setBytes
O	253	254	.

O	255	259	Work
O	260	264	with
B-API	265	276	InputStream
O	277	278	/
B-API	279	291	OutputStream
O	292	293	:

O	294	297	Get
O	298	302	hold
O	303	304	a
O	305	307	an
B-API	308	319	InputStream
O	320	327	through
B-API	328	348	Blob.getBinaryStream
O	349	359	Manipulate
O	360	364	this
O	365	371	stream
O	372	374	as
O	375	378	you
O	379	382	see
O	383	386	fit
O	387	390	Use
B-API	391	411	Blob.setBinaryStream
O	411	412	.

O	413	415	An
O	416	427	alternative
O	428	436	approach
O	437	439	is
O	440	442	to
O	443	447	skip
O	448	455	messing
O	456	460	with
B-Stan	461	465	Blob
O	466	468	in
O	469	472	the
O	473	478	first
O	479	484	place
O	484	485	,
O	486	489	and
O	490	497	instead
O	498	501	use
O	502	505	the
O	506	512	second
O	513	521	approach
O	522	523	(
O	523	527	with
O	528	535	streams
O	535	536	)
O	537	545	directly
O	546	553	through
O	554	557	the
B-API	558	567	ResultSet
O	568	578	-interface
O	578	579	.

O	580	584	With
O	585	591	Simple
B-Stan	592	596	Java
I-Stan	597	601	JDBC
O	602	605	Api
O	605	606	,
O	607	610	you
O	611	614	can
O	615	618	get
O	619	620	a
B-API	621	634	java.sql.Blob
O	635	639	back
O	640	644	from
O	645	646	a
B-API	647	656	ResultSet
O	656	657	.

B-API	658	675	ResultSet.getBlob
O	676	677	(
O	677	682	index
O	682	683	)
O	684	686	or
B-API	687	704	ResultSet.getBlob
O	705	706	(
O	706	712	String
O	713	723	columnName
O	723	724	)
O	724	725	.

O	726	730	Both
O	731	738	returns
O	739	740	a
B-Stan	741	745	Blob
O	745	746	.

O	747	751	Once
O	752	755	you
O	756	759	get
O	760	761	a
B-Stan	762	766	Blob
O	766	767	,
O	768	771	you
O	772	775	can
O	776	779	get
O	780	783	the
O	784	788	byte
O	789	791	[]
O	792	796	back
O	797	801	from
O	802	805	the
B-API	806	821	Blob.getBytes()
O	822	828	method
O	829	831	or
O	832	835	set
O	836	841	using
B-API	842	852	setBytes()
O	853	859	method
O	859	860	.

O	861	867	Update
O	868	869	:
O	870	876	Seeing
O	877	881	that
O	882	886	some
O	887	895	Database
O	896	902	driver
O	903	910	vendors
O	911	916	don't
O	917	924	support
B-Stan	925	929	Blob
O	929	930	,
O	931	934	you
O	935	938	can
O	939	942	use
B-API	943	970	ResultSet.getBinaryStream()
O	970	971	.

O	972	974	It
O	975	982	depends
O	983	985	on
O	986	991	which
O	992	996	kind
O	997	999	of
O	1000	1004	blob
O	1005	1013	contains
O	1014	1015	(
O	1015	1020	image
O	1020	1021	,
O	1022	1027	video
O	1027	1028	)
O	1029	1032	and
O	1033	1035	it
O	1036	1037	'
O	1038	1039	s
O	1040	1049	extension
O	1049	1050	.

O	1051	1052	I
O	1053	1058	wrote
O	1059	1060	a
O	1061	1067	simple
O	1068	1075	program
O	1076	1078	to
O	1079	1087	retrieve
O	1088	1090	an
O	1091	1096	image
O	1097	1101	from
O	1102	1104	DB
O	1105	1108	and
O	1109	1113	show
O	1114	1116	it
O	1117	1119	in
B-Stan	1120	1123	JSP
O	1124	1128	page
O	1128	1129	.

O	1130	1134	Hope
O	1135	1137	it
O	1138	1143	helps
O	1143	1144	.

B-Stan	1145	1148	JSP
O	1149	1153	Page
O	1154	1173	@codeSnippetRemoved

B-Stan	1174	1181	Servlet
O	1182	1186	Page
O	1187	1206	@codeSnippetRemoved

O	1207	1214	Calling
O	1215	1224	Procedure
O	1225	1244	@codeSnippetRemoved

O	0	3	How
O	4	6	to
O	7	11	save
O	12	19	trained
O	20	26	Neural
O	27	34	Network
O	35	36	(
O	36	42	Number
O	43	53	recognitio
O	54	58	from
O	59	64	image
O	64	65	)

O	66	67	I
O	68	72	have
O	73	80	written
O	81	82	a
O	83	89	neural
O	90	97	network
O	98	105	program
O	106	108	to
O	109	114	train
O	115	118	for
O	119	130	recognition
O	131	137	digits
O	138	142	from
O	143	148	image
O	149	154	using
O	155	159	back
O	160	171	propagation
O	172	175	and
O	176	188	feed-forward
O	188	189	.

O	190	193	Its
O	194	201	working
O	202	207	quite
O	208	212	good
O	212	213	.

O	214	215	I
O	216	220	just
O	221	227	wanted
O	228	230	to
O	231	235	know
O	236	240	that
O	241	244	how
O	245	247	do
O	248	249	i
O	250	254	save
O	255	259	this
O	260	267	trained
O	268	274	neural
O	275	282	network
O	283	288	since
O	289	290	i
O	291	296	don't
O	297	301	know
O	302	306	what
O	307	309	to
O	310	314	save
O	314	315	.

O	316	318	My
O	319	328	objective
O	329	331	is
O	332	334	to
O	335	340	train
O	341	343	my
O	344	350	neural
O	351	358	network
O	359	363	just
O	364	368	once
O	369	376	because
O	377	379	it
O	380	385	takes
O	386	390	very
O	391	395	long
O	396	400	time
O	401	403	to
O	404	409	train
O	410	411	(
O	411	415	1000
O	416	425	iteration
O	425	426	,
O	427	430	and
O	431	435	many
O	436	444	training
O	445	449	sets
O	449	450	)
O	451	454	and
O	455	459	then
O	460	461	i
O	462	466	want
O	467	469	to
O	470	474	save
O	475	477	it
O	478	481	and
O	482	486	load
O	487	489	it
O	490	493	for
O	494	499	later
O	500	503	use
O	503	504	.

O	505	506	I
O	507	511	hope
O	512	513	u
O	514	524	understand
O	525	527	my
O	528	535	problem
O	535	536	.

O	537	538	I
O	539	545	cannot
O	546	552	reveal
O	553	556	all
O	557	559	my
O	560	566	neural
O	567	572	codes
O	572	573	.

O	574	577	But
O	578	582	this
O	583	585	is
O	586	589	how
O	590	599	execution
O	600	604	code
O	605	610	looks
O	611	615	like
O	616	635	@codeSnippetRemoved

O	636	641	After
O	642	646	your
O	647	654	network
O	655	657	is
O	658	665	trained
O	666	669	you
O	670	673	can
O	674	679	store
O	680	681	(
O	681	684	and
O	685	690	later
O	691	695	load
O	695	696	)
O	697	700	the
O	701	710	in-memory
O	711	719	contents
O	720	722	of
O	723	736	NeuralNetwork
O	737	740	and
O	741	744	its
O	745	753	children
O	754	759	using
B-PL	760	764	Java
O	765	778	Serialization
O	778	779	.

O	780	785	class
O	786	799	NeuralNetwork
O	800	810	implements
B-API	811	823	Serializable
O	824	825	{
O	826	829	...

O	830	831	}

O	832	837	Chain
B-API	838	856	ObjectOutputStream
O	857	861	with
B-API	862	878	FileOutputStream
O	878	879	.

O	880	884	Call
O	885	888	the
O	889	895	method
B-API	896	907	writeObject
O	908	909	(
O	909	912	...
O	912	913	)
O	914	916	to
O	917	922	write
O	923	926	the
O	927	940	NeuralNetwork
O	941	947	object
O	947	948	.

O	0	8	Executer
O	9	15	thread
O	16	20	with
O	21	30	different
O	31	38	actions

O	39	42	One
O	43	45	of
O	46	53	actions
O	54	56	in
B-Fram	57	64	Struts2
O	65	67	is
O	68	73	using
O	74	79	below
O	80	84	code
O	85	86	:

O	87	91	Here
O	91	92	,
O	93	99	myTask
O	100	102	is
O	103	108	inner
O	109	114	class
O	115	120	which
O	121	131	implements
O	132	140	Runnable
O	141	150	interface
O	150	151	.

O	152	155	Can
O	156	157	I
O	158	164	invoke
O	165	168	the
O	169	174	above
O	175	179	code
O	180	184	from
O	185	190	other
O	191	197	action
O	198	203	class
O	204	206	as
O	207	211	well
O	212	214	by
O	215	222	passing
O	223	232	parameter
O	233	234	a
O	235	240	shown
O	241	246	below
O	247	248	:

O	249	251	In
O	252	255	Run
O	256	262	method
O	262	263	,
O	264	268	I'll
O	269	274	check
O	275	278	the
O	279	285	action
O	286	288	if
O	289	292	its
O	293	296	add
O	296	297	,
O	298	305	perform
O	306	310	some
O	311	319	activity
O	319	320	,
O	321	323	if
O	324	327	its
O	328	334	update
O	334	335	,
O	336	343	perform
O	344	349	other
O	350	358	activity
O	359	363	....

O	364	368	Also
O	368	369	,
O	370	374	from
O	375	382	another
O	383	386	3rd
O	387	393	action
O	394	399	class
O	399	400	,
O	401	404	can
O	405	406	I
O	407	413	invoke
O	414	417	the
O	418	422	same
O	423	428	above
O	429	435	thread
O	436	438	by
O	439	446	passing
O	447	454	another
O	455	461	action
O	461	462	,
O	463	466	say
O	467	468	"
O	468	474	update
O	474	475	"
O	476	479	???

O	480	486	Thanks
O	486	487	!

O	488	490	No
O	491	492	-
B-API	493	505	Runnable.run
O	506	513	doesn't
O	514	518	take
O	519	522	any
O	523	533	parameters
O	533	534	,
O	535	537	so
O	538	541	how
O	542	547	would
O	548	551	you
O	552	558	expect
O	559	562	the
O	563	564	"
O	564	570	delete
O	570	571	"
O	572	576	part
O	577	579	to
O	580	582	be
O	583	591	provided
O	592	594	to
O	595	598	you
O	598	599	?

O	600	604	Just
O	605	608	use
O	609	612	the
O	613	618	first
O	619	623	form
O	624	625	-
O	626	632	create
O	633	636	the
B-API	637	645	Runnable
O	646	654	instance
O	655	659	with
O	660	663	all
O	664	667	the
O	668	679	information
O	680	682	it
O	683	688	needs
O	689	691	to
O	692	696	know
O	697	699	so
O	700	704	that
O	705	707	it
O	708	711	can
O	712	714	do
O	715	718	its
O	719	723	work
O	723	724	.

O	725	738	Alternatively
O	738	739	,
O	740	741	I
O	742	747	would
O	748	756	probably
O	757	763	create
O	764	769	three
O	770	779	different
O	780	795	implementations
O	796	798	of
B-API	799	807	Runnable
O	808	809	-
O	810	813	one
O	814	817	for
O	818	821	add
O	821	822	,
O	823	826	one
O	827	830	for
O	831	837	delete
O	837	838	,
O	839	842	and
O	843	846	one
O	847	850	for
O	851	857	update
O	857	858	.

O	859	861	If
O	862	865	you
O	866	870	want
O	871	873	to
O	874	876	do
O	877	880	one
O	881	883	of
O	884	889	three
O	890	896	things
O	896	897	,
O	898	901	why
O	902	908	switch
O	909	911	on
O	912	916	data
O	917	919	at
O	920	929	execution
O	930	934	time
O	935	939	when
O	940	943	you
O	944	947	can
O	948	951	use
O	952	964	polymorphism
O	964	965	?

O	966	968	If
O	969	972	you
O	973	977	have
O	978	979	a
O	980	983	lot
O	984	986	of
O	987	996	different
O	997	1007	operations
O	1007	1008	,
O	1009	1012	you
O	1013	1018	could
O	1019	1021	do
O	1022	1031	something
O	1032	1036	like
O	1037	1041	this
O	1041	1042	.

O	1043	1046	Not
O	1047	1051	many
B-PL	1052	1056	Java
O	1057	1067	developers
O	1068	1072	know
O	1073	1077	that
O	1078	1083	enums
O	1084	1087	can
O	1088	1090	be
O	1091	1095	used
O	1096	1098	in
O	1099	1103	this
O	1104	1107	way
O	1108	1111	and
O	1112	1116	thus
O	1117	1119	it
O	1120	1123	can
O	1124	1126	be
O	1127	1136	confusing
O	1136	1137	.

O	1138	1147	Therefore
O	1148	1151	you
O	1152	1158	should
O	1159	1162	use
O	1163	1165	it
O	1166	1175	sparingly
O	1175	1176	,
O	1177	1180	but
O	1181	1185	when
O	1186	1188	it
O	1189	1194	makes
O	1195	1200	sense
O	1201	1203	it
O	1204	1207	can
O	1208	1210	be
O	1211	1216	quite
O	1217	1227	convenient
O	1228	1230	:)

O	1231	1232	A
O	1233	1237	much
O	1238	1245	simpler
O	1246	1254	approach
O	1255	1257	is
O	1258	1260	to
O	1261	1264	use
O	1265	1267	an
O	1268	1277	anonymous
O	1278	1283	class
O	1283	1284	.

B-Fram	0	9	Hibernate
O	10	15	calls
O	16	21	flush
O	22	24	on
O	25	30	find-
O	31	37	causes
O	38	46	not-null
O	47	52	error

O	53	54	I
O	55	59	have
O	60	61	a
O	62	69	process
O	70	75	which
O	76	83	updates
O	84	85	a
O	86	90	tree
O	91	93	to
O	94	97	the
O	98	106	database
O	106	107	,
O	108	111	and
O	112	114	in
O	115	120	doing
O	121	123	so
O	123	124	,
O	125	133	performs
O	134	139	reads
O	140	142	to
O	143	148	check
O	149	152	for
O	153	163	duplicates
O	164	172	entities
O	172	173	.

O	174	177	I'm
O	178	185	finding
O	186	190	that
O	191	197	trying
O	198	200	to
O	201	203	do
O	204	205	a
B-API	206	229	criteria.uniqueResult()
O	230	236	midway
O	237	244	through
O	245	249	this
O	250	257	process
O	258	264	causes
O	265	268	the
O	269	278	following
O	279	284	error
O	285	286	:

B-API	287	323	org.hibernate.PropertyValueException
O	324	325	:
O	326	334	not-null
O	335	343	property
O	344	354	references
O	355	356	a
O	357	361	null
O	362	364	or
O	365	374	transient
O	375	380	value

O	381	388	Digging
O	389	396	through
O	397	400	the
O	401	406	stack
O	407	412	trace
O	412	413	,
O	414	415	I
O	416	419	see
O	420	424	that
O	425	428	the
B-API	429	443	uniqueResult()
O	444	446	is
O	447	455	flushing
O	456	459	the
O	460	467	session
O	467	468	,
O	469	479	attempting
O	480	482	to
O	483	490	perform
O	491	498	updates
O	499	503	that
O	504	510	aren't
O	511	516	ready
O	517	519	to
O	520	522	go
O	523	525	to
O	526	529	the
O	530	538	database
O	539	542	yet
O	542	543	.

O	544	563	@codeSnippetRemoved

O	564	568	Have
O	569	570	I
O	571	574	set
O	575	584	something
O	585	587	up
O	588	593	wrong
O	594	598	here
O	598	599	?

O	600	603	Any
O	604	608	help
O	609	616	greatly
O	617	628	appreciated
O	628	629	.

O	630	635	Marty

O	636	640	Turn
O	641	644	off
O	645	658	auto-flushing
O	659	661	on
O	662	665	the
O	666	673	Session
O	674	680	object
O	681	683	to
O	684	687	fix
O	688	692	this
O	693	702	exception
O	702	703	.

O	704	723	@codeSnippetRemoved

O	724	728	This
O	729	731	is
O	732	735	not
O	736	740	your
O	741	746	error
O	747	754	however
O	754	755	.

O	756	765	Something
O	766	773	earlier
O	774	776	in
O	777	781	your
O	782	786	code
O	787	789	is
O	790	797	causing
O	798	801	the
O	802	804	in
O	805	811	memory
O	812	819	objects
O	820	822	to
O	823	825	be
O	826	828	in
O	829	831	an
O	832	839	invalid
O	840	845	state
O	846	851	which
O	852	854	is
O	855	861	trying
O	862	864	to
O	865	867	be
O	868	877	persisted
O	878	880	to
O	881	884	the
O	885	887	DB
O	888	894	during
O	895	898	the
O	899	908	autoflush
O	908	909	.

B-Fram	910	919	hibernate
O	920	929	remembers
O	930	934	with
O	935	942	objects
O	943	948	needs
O	949	951	to
O	952	954	be
O	955	960	saved
O	960	961	.
O	962	966	when
O	967	974	issuing
O	975	976	a
O	977	983	select
O	983	984	,
B-Fram	985	994	hibernate
O	995	999	will
O	1000	1005	flush
O	1006	1011	these
O	1012	1019	changes
O	1019	1020	.
O	1021	1025	this
O	1026	1033	ensures
O	1034	1037	the
O	1038	1044	select
O	1045	1049	will
O	1050	1056	return
O	1057	1060	the
O	1061	1068	correct
O	1069	1076	results
O	1076	1077	.

O	1078	1085	setting
B-API	1086	1095	flushmode
O	1096	1098	to
O	1099	1107	anything
O	1108	1112	else
O	1113	1117	than
B-API	1118	1132	FlushMode.AUTO
O	1133	1137	will
O	1138	1145	prevent
O	1146	1150	this
O	1151	1160	behaviour
O	1160	1161	.

O	1162	1165	But
O	1166	1169	the
O	1170	1175	error
O	1176	1178	is
O	1179	1181	in
O	1182	1186	your
O	1187	1191	code
O	1191	1192	,
O	1193	1198	where
O	1199	1202	you
O	1203	1207	pass
O	1208	1210	an
O	1211	1221	incomplete
O	1222	1228	object
O	1229	1231	to
B-Fram	1232	1241	hibernate
O	1242	1244	to
O	1245	1252	persist
O	1253	1255	or
O	1256	1262	update
O	1262	1263	.

O	1264	1266	So
O	1267	1270	the
O	1271	1278	correct
O	1279	1287	solution
O	1288	1290	is
O	1291	1293	to
O	1294	1298	pass
O	1299	1302	the
O	1303	1309	object
O	1310	1315	later
O	1316	1318	to
B-Fram	1319	1328	hibernate
O	1328	1329	,
O	1330	1334	when
O	1335	1337	it
O	1338	1340	is
O	1341	1349	complete
O	1349	1350	.

O	1351	1355	I've
O	1356	1362	pulled
O	1363	1365	my
O	1366	1370	hair
O	1371	1374	out
O	1375	1379	many
O	1380	1385	times
O	1386	1392	trying
O	1393	1395	to
O	1396	1399	get
O	1400	1402	to
O	1403	1406	the
O	1407	1413	bottom
O	1414	1416	of
O	1417	1422	these
O	1423	1429	issues
O	1429	1430	.

O	1431	1434	The
O	1435	1442	problem
O	1443	1448	being
O	1449	1453	that
O	1454	1456	it
O	1457	1458	'
O	1459	1460	s
O	1461	1463	so
O	1464	1473	difficult
O	1474	1476	to
O	1477	1480	get
O	1481	1483	to
O	1484	1487	the
O	1488	1492	root
O	1493	1495	of
O	1496	1499	the
O	1500	1505	issue
O	1506	1513	causing
O	1514	1516	it
O	1516	1517	.

O	1518	1520	If
O	1521	1527	you're
O	1528	1535	nearing
O	1536	1540	your
O	1541	1545	wits
O	1546	1549	end
O	1550	1553	you
O	1554	1557	can
O	1558	1562	also
O	1563	1570	execute
O	1571	1574	the
O	1575	1585	supporting
O	1586	1593	queries
O	1594	1598	such
O	1599	1601	as
O	1602	1609	findAll
O	1610	1612	in
O	1613	1614	a
O	1615	1618	new
O	1619	1626	session
O	1627	1628	:
O	1629	1648	@codeSnippetRemoved

O	1649	1653	That
O	1654	1657	has
O	1658	1665	usually
O	1666	1678	circumvented
O	1679	1682	the
O	1683	1690	problem
O	1691	1694	for
O	1695	1697	me
O	1698	1700	in
O	1701	1705	most
O	1706	1711	cases
O	1711	1712	.

O	0	6	CREATE
O	7	9	OR
O	10	17	REPLACE
O	18	27	PROCEDURE
O	28	35	my_proc
O	36	37	(
O	37	40	cur
O	41	43	IN
O	44	57	SYS_REFCURSOR
O	57	58	)
O	59	61	IS

O	62	64	--
O	65	70	Using
O	71	72	a
O	73	85	pre-existing
O	86	91	TABLE
O	92	96	TYPE
O	97	101	from
O	102	105	the
O	106	109	SYS
O	110	116	schema
O	117	120	for
O	121	124	the
O	125	132	example

O	133	138	array
O	139	161	ORA_MINING_VARCHAR2_NT
O	162	163	;

O	164	169	BEGIN

O	170	175	FETCH
O	176	179	cur
O	180	184	BULK
O	185	192	COLLECT
O	193	197	INTO
O	198	203	array
O	204	205	;

O	206	209	FOR
O	210	211	i
O	212	214	IN
O	215	226	array.FIRST
O	227	229	..
O	230	240	array.LAST

O	241	245	LOOP

O	246	266	DBMS_OUTPUT.PUT_LINE
O	267	268	(
O	268	273	array
O	274	275	(
O	275	276	i
O	277	280	));

O	281	284	END
O	285	289	LOOP
O	290	291	;

O	292	294	EN
O	295	297	D;

O	298	301	The
B-Stan	302	306	JDBC
O	307	314	binding
O	315	320	would
O	321	325	then
O	326	328	be

O	329	335	String
O	336	338	[]
O	339	346	strings
O	347	348	=
O	349	352	new
O	353	359	String
O	360	362	[]
O	363	364	{
O	365	366	"
O	366	367	a
O	367	368	"
O	368	369	,
O	370	371	"
O	371	372	b
O	372	373	"
O	373	374	,
O	375	376	"
O	376	377	c
O	377	378	"
O	379	380	}
O	381	382	;

B-API	383	398	ArrayDescriptor
O	399	403	desc
O	404	405	=
O	406	409	new
B-API	410	425	ArrayDescriptor
O	426	427	(
O	427	428	"
O	428	450	ORA_MINING_VARCHAR2_NT
O	450	451	"
O	451	452	,
O	453	454	c
O	455	457	);

O	458	463	ARRAY
O	464	469	array
O	470	471	=
O	472	475	new
O	476	481	ARRAY
O	482	483	(
O	483	487	desc
O	487	488	,
O	489	490	c
O	490	491	,
O	492	499	strings
O	500	502	);

B-API	503	516	stmt.setArray
O	517	518	(
O	518	519	1
O	519	520	,
O	521	526	array
O	527	529	);

B-API	530	550	stmt.executeUpdate()
O	551	552	;

O	553	557	With
O	558	563	TABLE
O	564	566	OF
O	567	573	OBJECT
O	574	578	data
O	579	584	types
O	584	585	,
O	586	589	the
O	590	597	binding
O	598	600	is
O	601	602	a
O	603	606	bit
O	607	611	more
O	612	618	tricky
O	619	622	...

O	0	4	Best
O	5	13	practice
O	14	17	for
O	18	27	parameter
O	28	34	naming
O	35	37	in
B-PL	38	42	Java
O	43	55	constructors
O	56	59	and
O	60	66	simple
O	67	74	setters

O	75	77	Is
O	78	83	there
O	84	85	a
O	86	94	standard
O	95	105	acceptable
O	106	116	convention
O	117	120	for
O	121	131	parameters
O	132	134	in
B-PL	135	139	Java
O	140	142	to
O	143	158	straightforward
O	159	171	constructors
O	172	175	and
O	176	183	setters
O	183	184	?

O	185	186	(
O	186	190	I've
O	191	195	seen
O	196	199	the
O	200	206	answer
O	207	210	for
B-PL	211	214	C++
O	214	215	,
O	216	219	but
O	220	229	practices
O	230	233	are
O	234	239	often
O	240	249	different
O	250	257	between
O	258	261	the
O	262	265	two
O	266	277	communities
O	277	278	)

O	279	286	Suppose
O	287	291	that
O	292	293	I
O	294	298	have
O	299	300	a
O	301	306	class
O	307	308	C
O	309	313	with
O	314	315	a
O	316	319	foo
O	320	325	field
O	325	326	.

O	327	328	I
O	329	333	have
O	334	342	commonly
O	343	347	seen
O	348	351	the
O	352	361	following
O	362	367	three
O	368	375	options
O	376	377	:

O	378	379	1
O	379	380	)
O	381	384	Use
O	385	388	the
O	389	395	actual
O	396	401	field
O	402	406	name
O	407	411	with
O	412	414	an
O	415	425	underscore
O	426	427	:

O	428	429	2
O	429	430	)
O	431	434	Use
O	435	438	the
O	439	445	actual
O	446	451	field
O	452	456	name
O	456	457	,
O	458	462	just
O	463	466	use
O	467	468	"
O	468	472	this
O	472	473	"
O	474	476	in
O	477	484	setting
O	485	486	:

O	487	488	3
O	488	489	)
O	490	500	Completely
O	501	513	inconsistent
O	514	520	things
O	521	525	like
O	526	527	:

O	528	529	I
O	530	534	tend
O	535	537	to
O	538	541	use
O	542	543	2
O	543	544	,
O	545	548	but
O	549	552	I'm
O	553	562	wondering
O	563	567	what
O	568	569	'
O	570	571	s
O	572	579	correct
O	580	588	practice
O	588	589	.

O	590	591	I
O	592	596	have
O	597	601	seen
O	602	603	2
O	604	607	and
O	608	609	3
O	610	614	used
O	615	618	the
O	619	623	most
O	623	624	.

O	625	629	That
O	630	634	said
O	634	635	,
O	636	639	the
O	640	646	answer
O	647	649	is
O	650	658	dictated
O	659	661	by
O	662	666	what
O	667	670	the
O	671	679	accepted
O	680	688	standard
O	689	691	is
O	692	695	for
O	696	699	the
O	700	704	code
O	705	709	base
O	710	713	you
O	714	717	are
O	718	730	contributing
O	731	733	to
O	733	734	.

O	735	736	I
O	737	742	think
O	743	745	it
O	746	748	is
O	749	753	more
O	754	763	important
O	764	766	to
O	767	769	be
O	770	780	consistent
O	781	787	across
O	788	791	the
O	792	799	project
O	800	804	than
O	805	809	have
O	810	813	one
O	814	815	"
O	815	820	right
O	820	821	"
O	822	828	answer
O	829	832	for
O	833	838	every
O	839	845	single
B-PL	846	850	java
O	851	860	developer
O	860	861	.

B-Fram	862	869	Eclipse
O	870	874	code
O	875	884	genration
O	885	889	uses
O	890	895	style
O	896	898	#2
O	899	903	from
O	904	908	your
O	909	913	list
O	913	914	.

O	915	921	Option
O	922	925	two
O	926	928	is
O	929	933	most
O	934	940	common
O	940	941	.

O	942	944	In
B-PL	945	949	Java
O	950	952	it
O	953	954	'
O	955	956	s
O	957	967	considered
O	968	972	poor
O	973	981	practice
O	982	984	to
O	985	988	use
O	989	1000	meaningless
O	1001	1005	name
O	1006	1014	prefixes
O	1015	1017	or
O	1018	1026	suffixes
O	1027	1029	to
O	1030	1041	distinguish
O	1042	1050	instance
O	1051	1060	variables
O	1061	1065	from
O	1066	1076	parameters
O	1077	1081	from
O	1082	1087	local
O	1088	1097	variables
O	1097	1098	.

O	1099	1102	But
O	1103	1108	there
O	1109	1112	are
O	1113	1115	no
O	1116	1127	conventions
O	1128	1131	for
O	1132	1135	the
O	1136	1141	names
O	1142	1152	themselves
O	1152	1153	.

O	1154	1157	Use
O	1158	1166	whatever
O	1167	1172	names
O	1173	1177	make
O	1178	1181	the
O	1182	1186	code
O	1187	1194	easiest
O	1195	1197	to
O	1198	1208	understand
O	1208	1209	.

O	1210	1211	I
O	1212	1216	know
O	1217	1221	that
O	1222	1226	when
B-Fram	1227	1235	netbeans
O	1236	1249	automatically
O	1250	1257	creates
O	1258	1265	getters
O	1266	1269	and
O	1270	1277	setters
O	1278	1280	it
O	1281	1285	uses
O	1286	1292	number
O	1293	1294	2
O	1295	1301	method
O	1301	1302	.

O	1303	1304	I
O	1305	1315	personally
O	1316	1323	usually
O	1324	1327	add
O	1328	1332	temp
O	1333	1335	to
O	1336	1339	the
O	1340	1348	variable
O	1349	1352	i.e
O	1353	1356	foo
O	1357	1358	=
O	1359	1366	tempfoo
O	1366	1367	.

O	1368	1371	But
O	1372	1374	as
O	1375	1380	neesh
O	1381	1385	says
O	1386	1389	you
O	1390	1396	should
O	1397	1400	try
O	1401	1403	to
O	1404	1410	remain
O	1411	1421	consistent
O	1422	1432	regardless
O	1433	1435	of
O	1436	1441	which
O	1442	1448	method
O	1449	1452	you
O	1453	1459	choose

O	1460	1461	(
O	1461	1462	1
O	1462	1463	)
O	1464	1466	is
O	1467	1471	very
B-PL	1472	1473	C
O	1474	1475	/
B-PL	1476	1479	C++
O	1479	1480	.

B-PL	1481	1485	Java
O	1486	1493	doesn't
O	1494	1498	tend
O	1499	1501	to
O	1502	1505	use
O	1506	1513	leading
O	1514	1525	underscores
O	1526	1530	much
O	1530	1531	.

O	1532	1533	I
O	1534	1544	personally
O	1545	1548	use
O	1549	1550	(
O	1550	1551	2
O	1551	1552	)
O	1553	1559	almost
O	1560	1571	exclusively
O	1571	1572	.

O	1573	1574	(
O	1574	1575	3
O	1575	1576	)
O	1577	1579	is
O	1580	1584	just
O	1585	1591	making
O	1592	1596	your
O	1597	1601	life
O	1602	1611	difficult
O	1612	1619	because
O	1620	1622	it
O	1623	1626	can
O	1627	1629	be
O	1630	1634	hard
O	1635	1637	to
O	1638	1643	think
O	1644	1646	of
O	1647	1650	two
O	1651	1661	meaningful
O	1662	1665	yet
O	1666	1673	concise
O	1674	1679	names
O	1680	1683	for
O	1684	1687	the
O	1688	1694	member
O	1695	1698	and
O	1699	1702	the
O	1703	1712	parameter
O	1712	1713	.

O	1714	1716	As
O	1717	1720	you
O	1721	1725	code
O	1726	1728	to
O	1729	1733	make
O	1734	1737	the
O	1738	1747	interface
O	1748	1750	as
O	1751	1756	clear
O	1757	1759	as
O	1760	1768	possible
O	1768	1769	,
O	1770	1771	I
O	1772	1778	always
O	1779	1785	prefer
O	1786	1791	using
O	1792	1793	a
O	1794	1799	field
O	1800	1802	as
O	1803	1808	_name
O	1809	1819	internally
O	1819	1820	,
O	1821	1827	having
O	1828	1830	it
O	1831	1833	as
O	1834	1838	name
O	1839	1841	as
O	1842	1843	a
O	1844	1850	method
O	1851	1859	argument
O	1859	1860	,
O	1861	1870	assigning
O	1871	1873	it
O	1874	1883	elegantly
O	1884	1886	as
O	1887	1892	_name
O	1893	1894	=
O	1895	1899	name
O	1899	1900	.

O	1901	1902	I
O	1903	1907	have
O	1908	1912	seen
O	1913	1917	this
O	1918	1920	in
O	1921	1927	Fowler
O	1928	1929	'
O	1930	1931	s
O	1932	1943	Refactoring
O	1944	1947	and
O	1948	1953	other
O	1954	1961	similar
O	1962	1971	textbooks
O	1971	1972	,
O	1973	1979	though
O	1980	1981	I
O	1982	1985	see
O	1986	1990	ugly
O	1991	2001	mechanisms
O	2002	2006	such
O	2007	2009	as
O	2010	2015	using
O	2016	2019	the
O	2020	2025	field
O	2026	2028	as
O	2029	2033	name
O	2034	2044	internally
O	2045	2049	then
O	2050	2055	using
O	2056	2061	aName
O	2062	2064	as
O	2065	2066	a
O	2067	2073	method
O	2074	2082	argument
O	2082	2083	,
O	2084	2087	ugh
O	2087	2088	.

O	2089	2093	I've
O	2094	2098	also
O	2099	2103	seen
O	2104	2107	the
O	2108	2114	Option
O	2115	2116	2
O	2117	2119	as
O	2120	2123	the
O	2124	2128	most
O	2129	2135	common
O	2136	2139	one
O	2140	2141	:

O	2142	2146	IDEs
O	2147	2151	such
O	2152	2154	as
B-Fram	2155	2162	Eclipse
O	2163	2166	and
B-Fram	2167	2175	Netbeans
O	2176	2180	will
O	2181	2194	automatically
O	2195	2200	write
O	2201	2204	the
O	2205	2212	getters
O	2213	2216	and
O	2217	2224	setters
O	2225	2227	in
O	2228	2231	the
O	2232	2237	above
O	2238	2244	format
O	2244	2245	.

O	2246	2251	There
O	2252	2255	are
O	2256	2257	a
O	2258	2261	few
O	2262	2268	merits
O	2269	2271	to
O	2272	2277	using
O	2278	2282	this
O	2283	2289	method
O	2290	2291	:

O	2292	2296	Does
O	2297	2300	not
O	2301	2304	use
O	2305	2308	the
O	2309	2319	underscore
O	2320	2321	(
O	2321	2322	_
O	2322	2323	)
O	2324	2333	character
O	2334	2336	in
O	2337	2340	the
O	2341	2346	field
O	2347	2351	name
O	2352	2354	--
O	2355	2366	underscores
O	2367	2370	are
O	2371	2374	not
O	2375	2386	recommended
O	2387	2390	for
O	2391	2403	non-constant
O	2404	2409	field
O	2410	2415	names
O	2415	2416	.

O	2417	2420	The
O	2421	2424	use
O	2425	2427	of
O	2428	2431	the
O	2432	2442	underscore
O	2443	2452	character
O	2453	2455	in
O	2456	2458	an
O	2459	2469	identifier
O	2470	2472	is
O	2473	2476	not
O	2477	2488	recommended
O	2489	2495	except
O	2496	2499	for
O	2500	2511	identifiers
O	2512	2515	for
O	2516	2525	constants
O	2525	2526	.

O	2527	2530	The
O	2531	2540	Variables
O	2541	2545	page
O	2546	2548	of
O	2549	2552	The
B-PL	2553	2557	Java
O	2558	2567	Tutorials
O	2568	2576	mentions
O	2577	2580	the
O	2581	2590	following
O	2591	2596	about
O	2597	2608	underscores
O	2609	2610	:

O	2611	2613	If
O	2614	2618	your
O	2619	2627	variable
O	2628	2634	stores
O	2635	2636	a
O	2637	2645	constant

O	2646	2651	value
O	2651	2652	,
O	2653	2657	such
O	2658	2660	as
O	2661	2667	static
O	2668	2673	final
O	2674	2677	int

O	2678	2687	NUM_GEARS
O	2688	2689	=
O	2690	2691	6
O	2691	2692	,
O	2693	2696	the
O	2697	2707	convention
O	2708	2715	changes

O	2716	2724	slightly
O	2724	2725	,
O	2726	2738	capitalizing
O	2739	2744	every
O	2745	2751	letter

O	2752	2755	and
O	2756	2766	separating
O	2767	2777	subsequent
O	2778	2783	words
O	2784	2788	with

O	2789	2792	the
O	2793	2803	underscore
O	2804	2813	character
O	2813	2814	.

O	2815	2817	By

O	2818	2828	convention
O	2828	2829	,
O	2830	2833	the
O	2834	2844	underscore
O	2845	2854	character

O	2855	2857	is
O	2858	2863	never
O	2864	2868	used
O	2869	2878	elsewhere
O	2878	2879	.

O	2880	2881	(
O	2881	2889	Emphasis
O	2890	2895	added
O	2895	2896	.
O	2896	2897	)

O	2898	2903	Since
O	2904	2909	field
O	2910	2915	names
O	2916	2919	are
O	2920	2923	not
O	2924	2933	constants
O	2933	2934	,
O	2935	2944	according
O	2945	2947	to
O	2948	2952	what
O	2953	2955	is
O	2956	2963	written
O	2964	2966	on
O	2967	2971	that
O	2972	2976	page
O	2976	2977	,
O	2978	2981	one
O	2982	2988	should
O	2989	2992	not
O	2993	2996	use
O	2997	3008	underscores
O	3009	3011	in
O	3012	3024	non-constant
O	3025	3031	fields
O	3031	3032	.

O	3033	3037	IDEs
O	3038	3041	can
O	3042	3055	automatically
O	3056	3059	add
B-Fram	3060	3067	Javadoc
O	3068	3076	comments
O	3077	3086	according
O	3087	3089	to
O	3090	3093	the
O	3094	3098	name
O	3099	3101	of
O	3102	3105	the
O	3106	3115	parameter
O	3116	3118	of
O	3119	3122	the
O	3123	3129	method
O	3129	3130	,
O	3131	3133	so
O	3134	3140	having
O	3141	3144	the
O	3145	3149	name
O	3150	3152	of
O	3153	3156	the
O	3157	3162	field
O	3163	3165	in
O	3166	3169	the
O	3170	3179	parameter
O	3180	3184	list
O	3185	3190	would
O	3191	3193	be
O	3194	3204	beneficial
O	3204	3205	.

O	3206	3209	The
O	3210	3219	following
O	3220	3222	is
O	3223	3225	an
O	3226	3233	example
O	3234	3236	of
O	3237	3239	an
O	3240	3253	automatically
O	3254	3263	generated
O	3264	3271	Javadoc
O	3272	3273	:

O	3274	3280	Having
O	3281	3284	the
B-Fram	3285	3292	Javadoc
O	3293	3300	reflect
O	3301	3304	the
O	3305	3309	name
O	3310	3312	of
O	3313	3316	the
O	3317	3322	field
O	3323	3326	has
O	3327	3334	another
O	3335	3342	benefit
O	3343	3345	--
O	3346	3350	IDEs
O	3351	3355	that
O	3356	3360	have
O	3361	3365	code
O	3366	3376	completion
O	3377	3380	can
O	3381	3384	use
O	3385	3388	the
O	3389	3394	field
O	3395	3399	name
O	3400	3402	in
O	3403	3406	the
O	3407	3414	Javadoc
O	3415	3417	in
O	3418	3423	order
O	3424	3426	to
O	3427	3440	automatically
O	3441	3445	fill
O	3446	3449	out
O	3450	3459	parameter
O	3460	3465	names
O	3466	3467	:

O	3468	3474	Giving
O	3475	3482	meaning
O	3483	3485	to
O	3486	3489	the
O	3490	3495	field
O	3496	3500	name
O	3501	3504	and
O	3505	3514	parameter
O	3515	3519	name
O	3520	3524	will
O	3525	3529	make
O	3530	3532	it
O	3533	3539	easier
O	3540	3542	to
O	3543	3553	understand
O	3554	3558	what
O	3559	3562	the
O	3563	3572	parameter
O	3573	3581	actually
O	3582	3592	represents
O	3592	3593	.

O	3594	3599	Those
O	3600	3603	are
O	3604	3608	some
O	3609	3611	of
O	3612	3615	the
O	3616	3622	merits
O	3623	3624	I
O	3625	3628	can
O	3629	3633	come
O	3634	3636	up
O	3637	3641	with
O	3642	3644	at
O	3645	3648	the
O	3649	3655	moment
O	3655	3656	,
O	3657	3660	and
O	3661	3662	I
O	3663	3670	believe
O	3671	3675	that
O	3676	3678	it
O	3679	3681	is
O	3682	3686	most
O	3687	3693	likely
O	3694	3697	the
O	3698	3702	most
O	3703	3709	common
O	3710	3713	way
O	3714	3716	to
O	3717	3723	naming
O	3724	3734	parameters
O	3735	3737	in
B-PL	3738	3742	Java
O	3742	3743	.

O	3744	3750	Option
O	3751	3754	two
O	3754	3755	.

O	3756	3758	If
O	3759	3762	you
O	3763	3766	see
O	3767	3768	a
O	3769	3770	"
O	3770	3776	setFoo
O	3777	3778	(
O	3778	3784	String
O	3785	3788	foo
O	3789	3791	)"
O	3792	3802	definition
O	3803	3804	(
O	3804	3808	e.g.
O	3809	3811	in
O	3812	3819	javadoc
O	3820	3822	or
O	3823	3828	hover
O	3828	3829	)
O	3830	3833	you
O	3834	3839	would
O	3840	3842	be
O	3843	3853	reasonable
O	3854	3856	to
O	3857	3863	expect
O	3864	3868	that
O	3869	3872	the
O	3873	3878	field
O	3878	3879	"
O	3880	3883	foo
O	3884	3885	"
O	3885	3887	is
O	3888	3891	set
O	3892	3894	to
O	3895	3898	the
O	3899	3904	value
O	3905	3907	of
O	3908	3911	the
O	3912	3921	parameter
O	3921	3922	"
O	3923	3926	foo
O	3927	3928	"
O	3928	3929	.

O	3930	3935	Other
O	3936	3941	names
O	3942	3945	may
O	3946	3953	require
O	3954	3957	you
O	3958	3960	to
O	3961	3967	double
O	3968	3973	check
O	3974	3975	-
O	3976	3980	e.g.
O	3981	3986	would
O	3987	3994	setName
O	3995	3996	(
O	3996	4002	String
O	4003	4009	person
O	4009	4010	)
O	4011	4015	just
O	4016	4019	set
O	4020	4023	the
O	4024	4028	name
O	4029	4031	to
O	4032	4038	person
O	4039	4041	or
O	4042	4047	would
O	4048	4058	additional
O	4059	4065	action
O	4066	4068	be
O	4069	4074	taken
O	4075	4076	(
O	4076	4080	look
O	4081	4083	up
O	4084	4087	the
O	4088	4092	name
O	4093	4095	in
O	4096	4097	a
O	4098	4103	table
O	4104	4106	of
O	4107	4114	persons
O	4115	4118	etc
O	4118	4119	)
O	4120	4122	?.

O	4123	4126	The
O	4127	4132	usual
O	4133	4139	reason
O	4140	4143	for
O	4144	4147	not
O	4148	4153	doing
O	4154	4156	so
O	4157	4159	is
O	4160	4164	that
O	4165	4168	you
O	4169	4172	may
O	4173	4186	accidentially
O	4187	4192	write

O	4193	4196	...

O	4197	4200	foo
O	4201	4202	=
O	4203	4206	foo
O	4207	4208	;

O	4209	4216	instead
O	4217	4219	of

O	4220	4228	this.foo
O	4229	4230	=
O	4231	4234	foo
O	4235	4236	;

O	4237	4242	which
O	4243	4245	is
O	4246	4247	a
O	4248	4263	self-assignment
O	4264	4266	of
O	4267	4270	the
O	4271	4280	parameter
O	4281	4284	not
O	4285	4290	doing
O	4291	4299	anything
O	4299	4300	.

O	4301	4307	Modern
O	4308	4317	compilers
O	4318	4323	catch
O	4324	4328	this
O	4329	4330	-
O	4331	4337	modern
O	4338	4341	IDE
O	4342	4351	generates
O	4352	4355	the
O	4356	4357	"
O	4357	4365	this.foo
O	4366	4367	=
O	4368	4371	foo
O	4371	4372	"
O	4373	4382	statement
O	4383	4387	when
O	4388	4396	creating
O	4397	4398	a
O	4399	4405	setter
O	4406	4409	for
O	4410	4411	a
O	4412	4417	field
O	4417	4418	.

O	4419	4421	In
B-Fram	4422	4429	Eclipse
O	4430	4433	you
O	4434	4437	can
O	4438	4444	create
O	4445	4448	the
O	4449	4455	getter
O	4456	4459	and
O	4460	4466	setter
O	4467	4470	for
O	4471	4472	a
O	4473	4478	field
O	4478	4479	,
O	4480	4484	with
O	4485	4491	Ctrl-1
O	4492	4496	when
O	4497	4500	the
O	4501	4507	cursor
O	4508	4510	is
O	4511	4518	located
O	4519	4521	on
O	4522	4525	the
O	4526	4531	field
O	4532	4534	in
O	4535	4543	question
O	4543	4544	.

O	4545	4548	the
O	4549	4559	convention
O	4560	4564	that
O	4565	4566	I
O	4567	4570	use
O	4571	4573	is
O	4574	4576	to
O	4577	4584	preface
O	4585	4591	member
O	4592	4601	variables
O	4602	4606	with
O	4607	4609	m_
O	4610	4611	;
O	4612	4614	as
O	4615	4617	in
O	4618	4619	:

O	4620	4626	String
O	4627	4632	m_foo
O	4633	4634	;

O	4635	4639	that
O	4640	4643	way
O	4643	4644	,
O	4645	4647	it
O	4648	4650	is
O	4651	4655	very
O	4656	4661	clear
O	4662	4667	which
O	4668	4677	variables
O	4678	4681	are
O	4682	4689	members
O	4690	4693	and
O	4694	4699	which
O	4700	4703	are
O	4704	4707	not
O	4707	4708	.

O	4709	4713	also
O	4713	4714	,
O	4715	4717	my
O	4718	4722	last
O	4723	4730	company
O	4731	4739	prefaced
O	4740	4743	all
O	4744	4747	the
O	4748	4757	arguments
O	4758	4760	in
O	4761	4762	a
O	4763	4769	method
O	4770	4774	with
O	4775	4776	"
O	4776	4779	the
O	4779	4780	"
O	4780	4781	,
O	4782	4784	as
O	4785	4787	in
O	4788	4789	:

O	4790	4796	public
O	4797	4802	doFoo
O	4803	4804	(
O	4804	4810	String
O	4811	4817	theKey
O	4817	4818	,
O	4819	4825	String
O	4826	4835	theRandom
O	4835	4836	)
O	4837	4838	{

O	4839	4843	....

O	4844	4845	}

O	4846	4848	it
O	4849	4853	made
O	4854	4856	it
O	4857	4861	very
O	4862	4866	easy
O	4867	4869	to
O	4870	4873	not
O	4874	4881	confuse
O	4882	4885	the
O	4886	4895	arguments
O	4896	4900	with
O	4901	4909	internal
O	4910	4919	variables
O	4919	4920	.

O	4921	4932	conventions
O	4933	4939	should
O	4940	4942	be
O	4943	4948	about
O	4949	4955	making
O	4956	4959	the
O	4960	4964	code
O	4965	4971	easier
O	4972	4974	to
O	4975	4979	read
O	4979	4980	,
O	4981	4984	and
O	4985	4993	reducing
O	4994	5000	errors
O	5000	5001	.

O	5002	5008	Option
O	5009	5010	2
O	5011	5013	is
O	5014	5018	most
O	5019	5025	common
O	5026	5028	in
B-PL	5029	5033	Java
O	5034	5037	but
O	5038	5039	a
O	5040	5045	picky
O	5046	5056	Checkstyle
O	5057	5062	won't
O	5063	5066	let
O	5067	5070	you
O	5071	5074	use
O	5075	5079	this
O	5080	5086	option
O	5087	5094	because
O	5095	5098	the
O	5099	5103	name
O	5104	5106	of
O	5107	5110	the
O	5111	5116	local
O	5117	5120	var
O	5121	5128	shadows
O	5129	5132	the
O	5133	5138	other
O	5138	5139	.

O	5140	5147	Because
O	5148	5150	of
O	5151	5155	that
O	5156	5160	most
O	5161	5164	use
O	5165	5168	the
O	5169	5178	following
O	5179	5180	:

O	5181	5184	foo
O	5185	5186	(
O	5186	5189	int
O	5190	5197	thatBar
O	5197	5198	)
O	5199	5200	{

O	5201	5209	this.bar
O	5210	5211	=
O	5212	5219	thatBar
O	5220	5221	;

O	5222	5223	}

O	5224	5227	The
O	5228	5232	only
O	5233	5240	problem
O	5241	5246	using
O	5247	5251	this
O	5252	5258	option
O	5259	5261	is
O	5262	5266	that
O	5267	5273	others
O	5274	5277	may
O	5278	5283	guess
O	5284	5288	that
O	5289	5292	you
O	5293	5296	are
O	5297	5302	using
O	5303	5304	a
O	5305	5308	var
O	5309	5314	named
O	5315	5318	bar
O	5319	5321	in
O	5322	5326	your
O	5327	5332	class
O	5333	5340	because
O	5341	5343	if
O	5344	5347	not
O	5348	5351	you
O	5352	5360	wouldn't
O	5361	5365	name
O	5366	5369	the
O	5370	5379	parameter
O	5380	5382	so
O	5382	5383	.

O	5384	5386	An
O	5387	5391	evil
O	5392	5398	person
O	5399	5404	could
O	5405	5408	use
O	5409	5413	that
O	5414	5425	information
O	5426	5428	to
O	5429	5435	better
O	5436	5446	understand
O	5447	5451	your
O	5452	5457	class
O	5458	5462	only
O	5463	5465	by
O	5466	5473	looking
O	5474	5476	at
O	5477	5480	the
O	5481	5488	methods
O	5488	5489	.

O	5490	5493	But
O	5494	5497	for
O	5498	5502	that
O	5503	5506	you
O	5507	5512	would
O	5513	5516	use
O	5517	5519	an
O	5520	5530	obfuscator
O	5531	5536	which
O	5537	5544	renames
O	5545	5548	all
O	5549	5553	vars
O	5554	5557	etc
O	5557	5558	.

O	5559	5562	Yes
O	5563	5569	option
O	5570	5571	2
O	5572	5574	is
O	5575	5579	most
O	5580	5586	widely
O	5587	5591	used
O	5592	5593	;
O	5594	5602	although
O	5603	5605	it
O	5606	5609	has
O	5610	5611	a
O	5612	5618	severe
O	5619	5626	problem
O	5627	5628	:
O	5629	5631	if
O	5632	5635	you
O	5636	5640	have
O	5641	5642	a
O	5643	5647	typo
O	5648	5650	in
O	5651	5654	the
O	5655	5666	declaration
O	5667	5669	of
O	5670	5674	your
O	5675	5684	parameter
O	5685	5686	-
O	5687	5691	that
O	5692	5697	might
O	5698	5700	go
O	5701	5710	unnoticed
O	5710	5711	,
O	5712	5716	like
O	5717	5718	:

O	5719	5723	This
O	5724	5728	code
O	5729	5737	compiles
O	5738	5742	fine
O	5743	5744	;
O	5745	5748	and
O	5749	5751	it
O	5752	5757	takes
O	5758	5761	you
O	5762	5763	a
O	5764	5770	second
O	5771	5773	to
O	5774	5784	understand
O	5785	5789	what
O	5790	5792	is
O	5793	5798	wrong
O	5799	5801	in
O	5802	5807	there
O	5807	5808	.

O	5809	5812	Yes
O	5812	5813	,
O	5814	5822	nowadays
O	5823	5826	you
O	5827	5832	might
O	5833	5836	see
O	5837	5838	a
O	5839	5846	warning
O	5847	5852	about
O	5853	5857	that
O	5857	5858	,
O	5859	5861	or
O	5862	5866	some
O	5867	5871	code
O	5872	5880	checking
O	5881	5885	tool
O	5886	5891	tells
O	5892	5895	you
O	5896	5900	that
O	5901	5905	this
O	5906	5914	happened
O	5915	5916	;
O	5917	5920	and
O	5921	5923	of
O	5924	5930	course
O	5930	5931	,
O	5932	5936	your
O	5937	5941	unit
O	5942	5947	tests
O	5948	5954	should
O	5955	5959	find
O	5960	5962	it
O	5963	5974	immediately
O	5974	5975	.

O	5976	5979	But
O	5980	5981	:
O	5982	5984	if
O	5985	5988	you
O	5989	5994	avoid
O	5995	5999	this
O	6000	6007	pattern
O	6007	6008	,
O	6009	6012	and
O	6013	6016	use
O	6017	6025	prefixes
O	6026	6028	or
O	6029	6030	"
O	6030	6040	thatString
O	6040	6041	"
O	6042	6045	you
O	6046	6050	will
O	6051	6056	never
O	6057	6060	hit
O	6061	6065	this
O	6066	6073	problem
O	6074	6076	in
O	6077	6080	the
O	6081	6086	first
O	6087	6092	place
O	6092	6093	.

O	6094	6098	Thus
O	6099	6100	I
O	6101	6107	really
O	6108	6113	don't
O	6114	6124	understand
O	6125	6128	why
O	6129	6131	it
O	6132	6134	is
O	6135	6137	so
O	6138	6146	commonly
O	6147	6151	used
O	6151	6152	.

O	6153	6155	So
O	6155	6156	,
O	6157	6159	we
O	6160	6163	sat
O	6164	6168	down
O	6169	6171	in
O	6172	6175	our
O	6176	6180	team
O	6181	6184	and
O	6185	6189	when
O	6190	6197	putting
O	6198	6206	together
O	6207	6210	our
O	6211	6217	coding
O	6218	6223	style
O	6224	6229	guide
O	6230	6232	we
O	6233	6237	said
O	6238	6239	:
O	6240	6245	never
O	6246	6249	use
O	6250	6256	option
O	6257	6258	2
O	6258	6259	.

