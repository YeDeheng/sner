B-API	0	7	Android
I-API	8	12	Path
O	13	14	:
O	15	20	Merge
O	21	28	several
O	29	34	paths
O	35	38	and
O	39	43	draw
O	44	48	text
O	49	51	on
O	52	58	merged
O	59	63	path

O	64	66	In
O	67	69	my
O	70	81	application
O	82	83	I
O	84	88	have
O	89	91	to
O	92	97	merge
O	98	105	several
O	106	111	short
O	112	117	paths
O	118	120	to
O	121	127	create
O	128	129	a
O	130	136	larger
O	137	140	one
O	140	141	.

O	142	149	Example
O	150	151	:
O	152	171	@codeSnippetRemoved

O	172	176	This
O	177	182	works
O	183	187	just
O	188	192	fine
O	193	196	and
O	197	202	draws
O	203	204	a
O	205	209	neat
O	210	217	V-shape
O	218	220	to
O	221	224	the
O	225	231	canvas
O	231	232	.

O	233	240	However
O	241	243	if
O	244	245	I
O	246	250	want
O	251	253	to
O	254	257	use
O	258	261	the
O	262	268	merged
O	269	273	path
O	274	277	for
O	278	282	text
O	283	292	rendering
O	293	294	(
O	294	299	using
B-API	300	323	Canvas.drawTextOnPath()
O	323	324	)
O	324	325	,
O	326	328	it
O	329	333	only
O	334	339	draws
O	340	344	text
O	345	350	along
O	351	354	the
O	355	360	first
O	361	365	part
O	366	368	of
O	369	372	the
O	373	377	path
O	378	379	(
O	379	383	i.e.
O	384	387	the
O	388	396	original
O	397	399	p1
O	399	400	)
O	400	401	.

O	402	405	I'd
O	406	410	like
O	411	413	to
O	414	417	use
O	418	421	the
O	422	428	entire
O	429	433	path
O	434	437	for
O	438	442	text
O	443	452	rendering
O	452	453	,
O	454	460	though
O	460	461	.

O	462	464	So
O	465	467	is
O	468	473	there
O	474	475	a
O	476	479	way
O	480	482	to
O	483	490	achieve
O	491	495	that
O	495	496	?

O	497	499	Do
O	500	503	you
O	504	508	have
O	509	511	to
O	512	515	use
O	516	519	two
O	520	525	paths
O	525	526	?

O	527	530	You
O	531	534	can
O	535	538	try
O	539	544	using
O	545	548	one
O	549	553	like
O	554	555	:
O	556	575	@codeSnippetRemoved

O	576	579	and
O	580	584	then
O	585	588	use
O	589	592	the
O	593	596	the
B-API	597	620	Canvas.drawTextOnPath()
O	621	623	on
O	624	626	p1

O	627	631	Hope
O	632	636	that
O	637	642	helps
O	642	643	.

O	644	651	Figured
O	652	656	this
O	657	660	out
O	661	667	myself
O	668	671	...

O	672	675	The
O	676	684	behavior
O	685	694	described
O	695	700	seems
O	701	703	to
O	704	706	be
O	707	708	a
O	709	714	known
O	715	720	issue
O	720	721	.

O	722	723	I
O	724	729	guess
O	730	734	this
O	735	737	is
O	738	741	due
O	742	744	to
O	745	748	the
O	749	753	fact
O	754	758	that
O	759	764	every
O	765	769	path
O	770	772	is
O	773	783	internally
O	784	788	seen
O	789	791	as
O	792	793	a
O	794	802	separate
O	803	804	"
O	804	811	contour
O	811	812	"
O	813	818	which
O	819	825	cannot
O	826	828	be
O	829	835	merged
O	836	840	with
O	841	848	another
O	849	852	one
O	852	853	.

O	854	861	However
O	862	863	I
O	864	867	was
O	868	872	able
O	873	875	to
O	876	879	get
O	880	883	the
O	884	891	desired
O	892	900	behavior
O	901	905	with
O	906	907	a
O	908	914	simple
O	915	916	"
O	916	920	hack
O	920	921	"
O	921	922	.

O	923	927	This
O	928	932	only
O	933	938	works
O	939	942	for
O	943	953	line-based
O	954	959	paths
O	959	960	,
O	961	967	though
O	967	968	.

O	969	973	Here
O	974	975	'
O	976	977	s
O	978	981	the
O	982	986	code
O	987	988	(
O	988	995	minimal
O	996	1003	example
O	1003	1004	)
O	1004	1005	,
O	1006	1010	just
O	1011	1013	if
O	1014	1020	anyone
O	1021	1022	'
O	1023	1024	s
O	1025	1035	interested
O	1036	1039	...

O	1040	1059	@codeSnippetRemoved

O	1060	1063	The
O	1064	1069	usage
O	1070	1072	of
O	1073	1077	this
O	1078	1080	is
O	1081	1096	straightforward
O	1097	1098	:
O	1099	1118	@codeSnippetRemoved

B-API	1119	1133	Path.addPath()
O	1134	1139	still
O	1140	1145	seems
O	1146	1148	to
O	1149	1151	be
O	1152	1168	work-in-progress
O	1168	1169	.

O	1170	1173	You
O	1174	1177	can
O	1178	1183	avoid
O	1184	1189	using
O	1190	1192	it
O	1193	1200	without
O	1201	1210	extending
B-API	1211	1215	Path
O	1216	1218	by
O	1219	1228	appending
O	1229	1232	the
O	1233	1241	multiple
O	1242	1250	segments
O	1251	1259	directly
O	1260	1262	to
O	1263	1266	the
B-API	1267	1271	Path
O	1272	1275	you
O	1276	1280	will
O	1281	1285	draw
O	1285	1286	.

O	1287	1306	@codeSnippetRemoved

O	0	1	I
O	2	5	can
O	6	9	not
O	10	14	seem
O	15	17	to
O	18	22	stop
O	23	25	my
O	26	29	own
O	30	37	service

O	38	39	I
O	40	44	have
O	45	46	a
O	47	54	service
O	55	59	that
O	60	66	places
O	67	68	a
O	69	72	red
O	73	82	rectangle
O	83	85	on
O	86	89	the
O	90	96	screen
O	97	100	and
O	101	104	has
O	105	106	a
B-API	107	118	onDestroy()
O	119	123	that
O	124	129	looks
O	130	134	like
O	135	139	this
O	140	159	@codeSnippetRemoved

O	160	164	from
O	165	168	one
O	169	171	of
O	172	174	my
O	175	185	activities
O	186	187	i
O	188	190	am
O	191	198	calling
O	199	201	to
O	202	206	kill
O	207	211	this
O	212	219	service
O	220	224	like
O	225	227	so
O	228	229	:
O	230	249	@codeSnippetRemoved

O	250	251	i
O	252	255	see
O	256	259	the
O	260	265	toast
O	266	270	come
O	271	273	up
O	274	280	saying
O	281	285	that
O	286	289	the
B-API	290	301	onDestroy()
O	302	305	has
O	306	310	been
O	311	317	called
O	318	321	but
O	322	323	i
O	324	329	still
O	330	333	see
O	334	337	the
O	338	341	red
O	342	351	rectangle
O	352	355	and
O	356	358	it
O	359	361	is
O	362	367	still
O	368	375	running
O	376	378	..

O	379	381	my
O	382	390	manifest
O	391	393	is
O	394	399	using
O	400	401	:
O	402	421	@codeSnippetRemoved

O	422	431	myService
O	432	451	@codeSnippetRemoved

O	452	459	Firstly
O	460	463	you
O	464	469	don't
O	470	474	need
O	475	477	to
O	478	482	have
O	483	487	that
O	488	498	permission
O	499	501	to
O	502	506	stop
O	507	508	a
O	509	516	service
O	517	521	that
O	522	525	you
O	526	532	create
O	532	533	.

O	534	535	I
O	536	539	use
O	540	548	services
O	549	559	frequently
O	560	561	(
O	561	569	starting
O	570	573	and
O	574	582	stopping
O	582	583	)
O	584	587	and
O	588	589	I
O	590	596	assure
O	597	600	you
O	601	602	I
O	603	608	don't
O	609	613	ever
O	614	617	use
O	618	622	that
O	623	633	permission
O	633	634	.

O	635	637	ie
O	638	639	:
O	640	659	@codeSnippetRemoved

O	660	662	is
O	663	666	all
O	667	670	you
O	671	675	need
O	675	676	.

O	677	679	Of
O	680	686	course
O	687	691	your
O	692	699	service
O	700	704	does
O	705	709	need
O	710	712	to
O	713	715	be
O	716	724	declared
O	725	727	in
O	728	732	your
B-API	733	740	Android
I-API	741	749	Manifest
O	749	750	.

O	751	754	Now
O	755	763	anything
O	764	768	that
O	769	776	affects
O	777	781	your
O	782	790	activity
O	791	795	uses
O	796	799	the
O	800	807	context
O	808	814	inside
O	815	819	that
O	820	828	activity
O	828	829	.

O	830	832	So
O	833	840	killing
O	841	845	your
O	846	853	service
O	854	859	won't
O	860	866	change
O	867	871	what
O	872	873	'
O	874	875	s
O	876	878	on
O	879	882	the
O	883	885	UI
O	885	886	.

O	887	889	In
O	890	894	your
O	895	903	services
B-API	904	906	on
I-API	907	914	Destroy
O	914	915	,
O	916	919	you
O	920	926	should
O	927	931	need
O	932	934	to
O	935	942	somehow
O	943	952	reference
O	953	956	the
O	957	966	rectangle
O	967	973	object
O	974	977	and
O	978	984	remove
O	985	987	it
O	988	992	that
O	993	996	way
O	996	997	.

O	998	999	I
O	1000	1004	have
O	1005	1007	no
O	1008	1012	idea
O	1013	1016	how
O	1017	1020	you
O	1021	1028	created
O	1029	1032	the
O	1033	1042	rectangle
O	1042	1043	.

O	1044	1047	But
O	1048	1050	if
O	1051	1053	it
O	1054	1056	is
O	1057	1058	a
O	1059	1063	view
O	1063	1064	,
O	1065	1068	you
O	1069	1074	could
O	1075	1078	set
O	1079	1081	it
O	1082	1084	to
B-API	1085	1100	VISIBILITY.GONE
O	1100	1101	,
O	1102	1104	or
O	1105	1107	if
O	1108	1110	it
O	1111	1112	'
O	1113	1114	s
O	1115	1116	a
B-API	1117	1125	ViewStub
O	1125	1126	,
O	1127	1130	you
O	1131	1134	can
O	1135	1142	deflate
O	1143	1145	it
O	1145	1146	,
O	1147	1149	if
O	1150	1152	it
O	1153	1154	'
O	1155	1156	s
O	1157	1159	an
O	1160	1166	object
O	1167	1170	you
O	1171	1174	can
O	1175	1180	clear
O	1181	1183	it
O	1183	1184	,
O	1185	1188	etc
O	1189	1191	..

O	1192	1194	If
O	1195	1198	you
O	1199	1202	are
O	1203	1209	saying
O	1210	1214	your
O	1215	1222	service
O	1223	1225	is
O	1226	1231	still
O	1232	1239	running
O	1240	1244	even
O	1245	1250	after
O	1251	1254	you
O	1255	1259	call
O	1260	1263	the
O	1264	1268	stop
O	1269	1276	service
O	1277	1285	function
O	1285	1286	,
O	1287	1291	then
O	1292	1301	something
O	1302	1306	else
O	1307	1309	is
O	1310	1315	wrong
O	1315	1316	.

B-API	0	7	Android
I-API	8	15	WebView
O	16	21	shows
O	22	27	plain
O	28	32	text
O	33	40	instead
O	41	43	of
B-PL	44	48	html

O	49	54	First
O	54	55	,
O	56	57	I
O	58	60	am
O	61	66	going
O	67	69	to
O	70	73	say
O	74	78	this
O	79	81	is
O	82	86	only
O	87	89	an
O	90	95	issue
O	96	98	on
B-Plat	99	106	Android
I-Plat	107	108	2
O	109	112	and
O	113	118	older
O	119	120	(
O	120	121	4
O	122	127	seems
O	128	130	to
O	131	133	be
O	134	144	unaffected
O	145	148	and
O	149	150	I
O	151	157	didn't
O	158	162	test
O	163	164	3
O	164	165	)
O	165	166	.

O	167	168	I
O	169	173	have
O	174	175	a
B-API	176	183	WebView
O	184	188	that
O	189	194	loads
B-PL	195	199	html
O	200	204	from
O	205	206	a
O	207	213	string
O	213	214	.

O	215	218	The
B-PL	219	223	HTML
O	224	229	looks
O	230	234	like
O	235	239	this
O	240	241	:
O	242	261	@codeSnippetRemoved

O	262	265	You
O	266	269	can
O	270	273	see
O	274	278	that
B-PL	279	282	css
O	283	287	file
O	288	293	looks
O	294	298	like
O	299	303	this
O	304	305	:
O	306	325	@codeSnippetRemoved

O	326	329	The
B-API	330	337	WebView
O	338	342	code
O	343	348	looks
O	349	353	like
O	354	358	this
O	359	360	:
O	361	380	@codeSnippetRemoved

O	381	385	What
O	386	393	Happens

O	394	395	I
O	396	399	see
O	400	403	the
B-PL	404	408	html
O	409	413	code
O	414	416	in
O	417	420	the
B-API	421	428	WebView
O	429	431	as
O	432	434	if
O	435	436	I
O	437	440	had
O	441	444	set
O	445	448	the
O	449	453	mime
O	454	458	type
O	459	461	to
O	462	467	plain
O	468	472	text
O	472	473	.

O	474	478	What
O	479	482	I'd
O	483	489	Expect
O	490	491	(
O	491	494	and
O	495	499	what
O	500	507	happens
O	508	510	in
B-Plat	511	518	Android
I-Plat	519	522	4.x

O	523	524	I
O	525	528	see
O	529	532	the
B-PL	533	537	html
O	538	540	in
O	541	544	the
B-API	545	552	WebView

O	553	558	There
O	559	562	are
O	563	564	a
O	565	568	few
O	569	575	things
O	576	580	that
O	581	585	have
O	586	588	to
O	589	591	be
O	592	596	true
O	597	599	to
O	600	604	show
O	605	608	the
O	609	617	symptoms
O	618	619	I
O	620	622	am
O	623	629	seeing
O	630	631	:

B-Plat	632	639	Android
I-Plat	640	643	2.x
O	644	645	(
O	645	646	I
O	647	650	was
O	651	656	using
O	657	662	2.3.7
O	663	666	and
O	667	670	2.2
O	670	671	)
O	672	675	The
B-PL	676	679	css
O	680	683	has
O	684	686	to
O	687	689	be
O	690	698	accessed
O	699	702	via
O	703	704	a
O	705	708	url
O	709	714	href=
O	715	716	"
O	716	759	http://www.robotsidekick.com/test.css?rev=0
O	759	760	"
O	761	763	as
O	764	771	opposed
O	772	774	to
O	775	780	href=
O	781	782	"
O	782	790	test.css
O	790	791	"
O	792	793	(
O	793	800	however
O	801	803	it
O	804	811	doesn't
O	812	818	matter
O	819	821	if
O	822	824	it
O	825	826	'
O	827	828	s
O	829	830	a
O	831	835	real
B-PL	836	839	css
O	840	844	file
O	845	850	href=
O	851	852	"
O	852	900	http://www.thisisnotarealurl.fake/test.css?rev=0
O	901	907	causes
O	908	911	the
O	912	916	same
O	917	924	problem
O	924	925	)
O	926	929	The
B-PL	930	933	css
O	934	938	must
O	939	943	have
O	944	945	a
O	946	949	get
O	950	959	parameter
O	959	960	?

O	961	966	rev=0
O	966	967	,
O	968	971	but
O	972	974	it
O	975	982	doesn't
O	983	989	matter
O	990	994	what
O	995	997	it
O	998	1000	is

O	1001	1005	Also
O	1006	1012	wanted
O	1013	1015	to
O	1016	1020	note
O	1021	1025	that
O	1026	1029	the
O	1030	1039	following
O	1040	1043	did
O	1044	1047	not
O	1048	1052	make
O	1053	1054	a
O	1055	1065	difference
O	1066	1067	:

O	1068	1073	Using
O	1074	1077	the
O	1078	1089	appropriate
O	1090	1091	"
O	1091	1098	instead
O	1099	1101	of
O	1102	1103	'
O	1104	1106	in
O	1107	1110	the
B-PL	1111	1115	HTML
O	1116	1122	Having
O	1123	1126	the
O	1127	1131	link
O	1132	1135	tag
O	1136	1141	close
O	1142	1148	itself
O	1149	1151	or
O	1152	1155	not
O	1156	1159	The
O	1160	1168	contents
O	1169	1171	of
O	1172	1175	the
B-PL	1176	1179	css
O	1180	1186	Adding
O	1187	1188	a
O	1189	1196	doctype
O	1196	1197	!

B-API	1198	1205	DOCTYPE
I-API	1206	1210	html
O	1211	1213	to
O	1214	1217	the
B-PL	1218	1222	HTML

O	1223	1231	Changing
O	1232	1235	the
B-API	1236	1252	webview.loadData
O	1253	1257	line
O	1258	1260	to
O	1261	1265	this
O	1266	1267	:
O	1268	1287	@codeSnippetRemoved

O	1288	1294	Solves
O	1295	1299	this
O	1300	1307	problem
O	1307	1308	.

O	1309	1311	It
O	1312	1317	seems
O	1318	1323	weird
O	1324	1326	to
O	1327	1329	me
O	1330	1334	that
O	1335	1336	a
O	1337	1345	relative
O	1346	1350	path
O	1351	1355	with
O	1356	1358	an
O	1359	1368	unencoded
O	1368	1369	?

O	1370	1377	doesn't
O	1378	1383	cause
O	1384	1392	problems
O	1392	1393	,
O	1394	1399	while
O	1400	1401	a
O	1402	1406	fake
O	1407	1410	url
O	1411	1415	with
O	1416	1418	an
O	1419	1428	unencoded
O	1428	1429	?

O	1430	1434	does
O	1435	1440	cause
O	1441	1449	problems
O	1449	1450	.

O	1451	1455	Also
O	1456	1460	find
O	1461	1463	it
O	1464	1467	odd
O	1468	1472	that
O	1473	1476	the
B-API	1477	1484	WebView
O	1485	1492	changed
O	1493	1499	enough
O	1500	1502	in
O	1503	1513	subsequent
O	1514	1522	versions
O	1523	1525	of
B-Plat	1526	1533	Android
O	1534	1538	that
O	1539	1541	we
O	1542	1547	don't
O	1548	1552	have
O	1553	1555	to
O	1556	1558	go
O	1559	1567	encoding
O	1568	1571	our
B-PL	1572	1576	html
O	1577	1584	anymore
O	1584	1585	?

O	1586	1590	That
O	1591	1597	sounds
O	1598	1603	fishy
O	1603	1604	.

B-Plat	0	7	Android
O	8	11	App
O	12	19	Restart

O	20	21	I
O	22	24	am
O	25	35	developing
O	36	37	a
B-API	38	43	Timer
O	44	49	based
O	50	53	app
O	53	54	.

B-API	55	60	Timer
O	61	65	runs
O	66	78	continuously
O	79	81	in
O	82	85	one
O	86	88	of
O	89	92	the
O	93	101	activity
O	102	109	whether
O	110	113	the
O	114	117	app
O	118	120	is
O	121	123	in
O	124	127	the
O	128	138	foreground
O	139	141	or
O	142	152	background
O	152	153	.

O	154	155	A
O	156	164	separate
O	165	172	service
O	173	175	is
O	176	183	written
O	184	186	to
O	187	190	log
B-Stan	191	194	GPS
O	195	200	every
O	201	204	one
O	205	211	second
O	212	217	using
O	218	219	a
O	220	228	separate
B-API	229	234	timer
O	234	235	.

O	236	244	Activity
B-API	245	250	timer
O	251	253	is
O	254	265	responsible
O	266	269	for
O	270	278	starting
O	279	282	and
O	283	291	stopping
O	292	295	the
O	296	303	service
O	304	309	based
O	310	312	on
O	313	320	certain
O	321	330	condition
O	330	331	.

O	332	333	I
O	334	338	have
O	339	347	extended
O	348	351	the
B-API	352	363	Application
O	364	369	class
O	370	373	and
O	374	384	overridden
O	385	388	the
B-API	389	397	onCreate
O	398	401	and
B-API	402	413	onTerminate
O	414	420	events
O	420	421	.

O	422	441	@codeSnippetRemoved

O	442	445	and
O	446	465	AndroidManifest.xml
O	466	485	@codeSnippetRemoved

O	486	493	service
O	494	513	@codeSnippetRemoved

O	514	518	When
O	519	522	the
O	523	526	app
O	527	529	is
O	530	537	running
O	538	540	in
O	541	551	background
O	552	555	and
O	556	565	sometimes
O	566	568	in
O	569	579	foreground
O	579	580	,
O	581	584	the
B-API	585	593	onCreate
O	594	596	is
O	597	605	executed
O	606	613	several
O	614	619	times
O	620	623	and
O	624	626	if
O	627	630	the
O	631	638	service
O	639	641	is
O	642	649	running
O	650	652	it
O	653	657	also
O	658	662	gets
O	663	672	restarted
O	672	673	.

O	674	678	What
O	679	684	could
O	685	687	be
O	688	691	the
O	692	698	reason
O	699	701	of
O	702	710	frequent
O	711	718	restart
O	719	721	of
O	722	725	the
O	726	729	app
O	730	733	and
O	734	740	firing
O	741	743	of
B-API	744	752	onCreate
O	753	755	of
O	756	769	MyApplication
O	770	775	class
O	775	776	.

O	777	781	What
O	782	784	is
O	785	788	the
O	789	797	solution
O	798	800	of
O	801	805	this
O	806	813	problem
O	813	814	?

O	815	821	Please
O	822	826	help
O	827	829	me
O	830	835	since
O	836	837	I
O	838	840	am
O	841	847	trying
O	848	853	solve
O	854	858	this
O	859	866	problem
O	867	870	for
O	871	875	last
O	876	877	3
O	878	882	days

O	883	887	This
O	888	890	is
O	891	894	the
O	895	903	complete
O	904	919	androidmanifest
O	920	924	file
O	925	944	@codeSnippetRemoved

O	0	6	Stream
B-Plat	7	14	android
O	15	21	camera
O	22	26	over
B-Stan	27	31	RTMP

O	32	33	I
O	34	37	was
O	38	47	searching
O	48	50	in
O	51	54	all
O	55	68	stackoverflow
O	69	74	posts
O	74	75	,
O	76	79	but
O	80	83	not
O	84	88	find
O	89	92	ask
O	93	96	for
O	97	101	this
O	102	112	question.I
O	113	117	need
O	118	124	stream
O	125	130	video
O	131	135	from
B-Plat	136	143	android
O	144	150	camera
O	151	153	to
O	154	158	rtmp
O	159	165	server
O	165	166	.

O	167	169	In
O	170	174	this
O	175	179	time
O	179	180	,
O	181	182	I
O	183	187	make
B-Stan	188	192	rtmp
O	193	199	packet
O	199	200	,
O	201	204	put
O	205	207	in
B-Stan	208	212	rtmp
O	213	217	body
O	218	224	buffer
O	225	229	from
O	230	234	pipe
O	235	236	:
O	237	256	@codeSnippetRemoved

O	257	265	Settings
O	266	269	for
O	270	275	media
O	276	277	:
O	278	297	@codeSnippetRemoved

O	298	302	Then
O	303	310	reading
O	311	315	data
O	316	320	from
O	321	332	inputStream
O	333	337	into
O	338	343	array
O	344	347	and
O	348	351	put
O	352	356	this
O	357	361	data
O	362	364	to
O	365	375	rtmpbodyIm
O	376	386	understand
O	386	387	,
O	388	393	thats
O	394	399	wrong
O	399	400	,
O	401	404	but
O	405	406	I
O	407	411	have
O	412	414	no
O	415	419	idea
O	420	423	how
O	424	428	make
O	429	432	raw
B-Stan	433	437	h264
O	438	448	streamable

O	449	454	Maybe
O	455	458	you
O	459	466	already
O	467	470	did
O	470	471	,
O	472	474	if
O	475	478	not
O	478	479	,
O	480	483	you
O	484	490	should
O	491	495	take
O	496	497	a
O	498	502	look
O	503	505	to
O	506	511	these
O	512	521	questions
O	521	522	.

O	523	532	Accessing
O	533	536	the
O	537	543	output
O	544	549	video
O	550	555	while
O	556	565	recording

O	566	574	Transfer
B-API	575	586	InputStream
O	587	589	to
O	590	597	another
O	598	605	Service
O	606	607	(
O	607	613	across
O	614	621	process
O	622	632	boundaries
O	632	633	)
O	634	638	with
B-API	639	672	ParcelFileDescriptor.createPipe()
O	673	679	failes
O	680	684	with
B-Stan	685	690	EBADF
O	691	692	(
O	692	695	Bad
O	696	700	file
O	701	707	number
O	707	708	)

O	709	713	I've
O	714	717	got
O	718	719	a
O	720	725	small
O	726	733	project
O	734	738	that
O	739	744	shows
O	745	748	how
O	749	751	to
O	752	755	put
O	756	759	raw
B-API	760	764	h264
O	765	769	into
O	770	772	an
B-Stan	773	777	RTMP
O	778	784	format
O	785	789	here
O	790	791	;
O	792	795	its
O	796	799	not
O	800	807	perfect
O	807	808	,
O	809	812	but
O	813	815	it
O	816	822	mostly
O	823	828	works
O	828	829	.

O	0	8	Stopping
B-API	9	35	OnMyLocationChangeListener

O	36	37	I
O	38	42	want
O	43	45	to
O	46	50	stop
O	51	54	the
B-API	55	71	LocationListener
O	72	76	once
O	77	79	it
O	80	83	has
O	84	87	the
O	88	95	current
O	96	104	location
O	105	108	and
O	109	115	zoomed
O	116	118	to
O	119	121	it
O	121	122	.

O	123	126	Can
O	127	130	you
O	131	137	please
O	138	142	help
O	143	144	a
O	145	151	newbie
O	151	152	?

O	153	157	Here
O	158	159	'
O	160	161	s
O	162	164	my
O	165	169	code
O	170	171	:
O	172	191	@codeSnippetRemoved

O	192	195	Set
O	196	199	the
O	200	203	map
O	204	212	location
O	213	221	listener
O	222	224	to
O	225	229	null
O	230	232	to
O	233	237	turn
O	238	240	it
O	241	244	off
O	244	245	.

O	246	265	@codeSnippetRemoved

B-API	0	9	TabWidget
O	10	15	white
O	16	26	foreground
O	27	32	color
O	32	33	?

O	34	35	I
O	36	41	don't
O	42	46	know
O	47	51	what
O	52	53	I
O	54	57	did
O	58	61	but
O	62	65	for
O	66	67	a
O	68	74	period
O	75	77	of
O	78	82	time
O	83	85	my
B-API	86	95	TabWidget
O	96	99	had
O	100	105	white
O	106	113	colored
O	114	118	tabs
O	119	124	which
O	125	131	looked
O	132	138	really
O	139	143	nice
O	143	144	.

O	145	146	I
O	147	152	never
O	153	156	set
O	157	158	a
O	159	164	theme
O	165	167	or
O	168	178	background
O	179	180	/
O	181	191	foreground
O	192	197	color
O	198	200	in
O	201	203	my
O	204	211	project
O	212	214	at
O	215	218	all
O	218	219	.

O	220	223	The
O	224	228	next
O	229	233	time
O	234	235	I
O	236	244	compiled
O	245	247	it
O	248	250	it
O	251	259	reverted
O	260	264	back
O	265	267	to
O	268	271	the
O	272	276	gray
O	277	281	tabs
O	281	282	.

O	283	285	My
O	286	297	application
O	298	300	is
O	301	306	using
O	307	310	the
O	311	318	default
O	319	323	dark
O	324	329	theme
O	329	330	.

O	331	335	Even
O	336	338	if
O	339	340	I
O	341	344	set
O	345	348	the
O	349	360	application
O	361	366	theme
O	367	369	to
O	370	375	light
O	375	376	,
O	377	380	the
O	381	385	tabs
O	386	389	are
O	390	395	still
O	396	400	gray
O	400	401	.

O	402	404	So
O	405	414	obviously
O	415	417	it
O	418	421	was
O	422	431	something
O	432	436	else
O	437	441	that
O	442	449	changed
O	450	453	the
O	454	458	tabs
O	459	460	'
O	461	466	color
O	466	467	.

O	468	474	Anyone
O	475	479	know
O	480	483	how
O	484	486	to
O	487	489	do
O	490	494	this
O	494	495	?

O	496	501	Check
O	502	506	this
O	507	513	answer
O	514	516	of
O	517	521	mine
O	522	523	:
O	524	534	Background
O	535	537	in
O	538	541	tab
O	542	548	widget
O	549	555	ignore
O	556	563	scaling

O	564	567	You
O	568	571	can
O	572	576	also
O	577	582	refer
O	583	585	to
O	586	589	the
B-API	590	615	android.graphics.drawable
O	616	623	package

O	624	626	In
O	627	631	your
O	632	636	code
O	636	637	,
O	638	641	you
O	642	645	can
O	646	649	set
O	650	653	the
O	654	664	background
O	665	668	for
O	669	673	your
O	674	678	tabs
O	679	683	like
O	684	688	this
O	689	690	:
O	691	710	@codeSnippetRemoved

O	711	712	I
O	713	716	was
O	717	723	having
O	724	725	a
O	726	733	problem
O	734	737	due
O	738	740	to
O	741	742	a
O	743	746	bug
O	747	749	in
B-Plat	750	757	Android
I-Plat	758	761	1.6
O	762	763	'
O	764	765	s
O	766	771	light
O	772	777	theme
O	778	779	(
O	779	782	tab
O	783	792	indicator
O	793	797	text
O	798	800	is
O	801	806	white
O	806	807	)
O	807	808	.

O	809	810	I
O	811	814	was
O	815	819	able
O	820	822	to
O	823	831	override
O	832	835	the
O	836	843	default
O	844	849	theme
O	850	852	as
O	853	860	follows
O	861	862	:

O	863	864	I
O	865	872	created
O	873	874	a
O	875	881	custom
O	882	887	theme
O	888	892	that
O	893	902	inherited
O	903	907	from
O	908	911	the
O	912	919	default
O	920	925	theme
O	926	927	:

O	928	938	styles.xml
O	939	940	:
O	941	960	@codeSnippetRemoved

O	961	965	Then
O	966	967	I
O	968	972	just
O	973	978	apply
O	979	983	that
O	984	989	theme
O	990	992	to
O	993	995	my
O	996	1007	application
O	1008	1010	by
O	1011	1017	adding
O	1018	1025	android
O	1026	1027	:
O	1028	1034	theme=
O	1035	1036	"
O	1036	1042	@style
O	1043	1044	/
O	1045	1052	MyTheme
O	1052	1053	"
O	1054	1056	to
O	1057	1060	the
O	1061	1072	application
O	1073	1074	/
O	1075	1082	element
O	1083	1085	of
O	1086	1088	my
O	1089	1108	AndroidManifest.xml
O	1108	1109	.

O	1110	1112	in
O	1113	1116	the
O	1117	1123	public
O	1124	1128	void
B-API	1129	1137	onCreate
O	1138	1139	(
O	1139	1145	Bundle
O	1146	1164	savedInstanceState
O	1164	1165	)
O	1166	1185	@codeSnippetRemoved

O	1186	1190	than
O	1191	1193	in
O	1194	1197	the
O	1198	1206	listener
O	1207	1208	:

O	1209	1215	public
O	1216	1220	void
B-API	1221	1233	onTabChanged
O	1234	1235	(
O	1235	1241	String
O	1242	1247	tabId
O	1247	1248	)
O	1249	1250	{
O	1251	1264	setTabColor()
O	1265	1266	;

O	1267	1274	finally
O	1275	1278	the
O	1279	1287	function
O	1287	1288	,
O	1289	1294	which
O	1295	1298	set
O	1299	1302	the
O	1303	1313	foreground
O	1314	1317	and
O	1318	1321	the
O	1322	1332	background
O	1333	1336	too
O	1337	1338	:
O	1339	1358	@codeSnippetRemoved

O	1359	1361	In
B-API	1362	1373	onCreated()
O	1374	1375	:
O	1376	1395	@codeSnippetRemoved

O	0	1	"
O	1	10	Dangerous
O	10	11	"
B-API	12	19	Android
I-API	20	31	permissions
O	32	36	that
O	37	42	don't
O	43	47	need
O	48	50	to
O	51	53	be
O	54	62	accepted
O	63	65	by
O	66	71	users

O	72	78	Google
O	79	85	states
O	86	90	that
B-API	91	102	permissions
O	103	107	with
O	108	117	dangerous
O	118	120	as
O	121	124	the
O	125	130	value
O	131	133	of
B-API	134	149	protectionLevel
O	150	154	have
O	155	157	to
O	158	160	be
O	161	168	granted
O	169	171	by
O	172	175	the
O	176	180	user
O	181	183	on
O	184	196	installation
O	197	201	time
O	201	202	.

O	203	206	One
O	207	214	example
O	215	218	for
O	219	223	such
O	224	225	a
O	226	235	dangerous
B-API	236	246	permission
O	247	249	is
B-API	250	277	android.permission.INTERNET
O	277	278	.

O	279	282	But
O	283	291	although
O	292	296	apps
O	297	301	have
O	302	310	declared
O	311	313	to
O	314	317	use
O	318	322	this
B-API	323	334	permissions
O	334	335	,
O	336	338	it
O	339	340	'
O	341	342	s
O	343	350	treated
O	351	355	like
O	356	357	a
O	358	364	normal
O	365	375	permission
O	375	376	,
O	377	381	thus
O	382	385	the
O	386	390	user
O	391	396	won't
O	397	399	be
O	400	405	asked
O	406	411	about
O	412	414	it
O	414	415	.

O	416	420	This
O	421	423	is
O	424	428	also
O	429	438	mentioned
O	439	441	on
O	442	448	How-To
O	449	453	Geek
O	453	454	.

O	455	460	Where
O	461	465	does
O	466	472	Google
O	473	479	itself
O	480	487	explain
O	488	492	this
O	493	502	behaviour
O	502	503	?

O	504	507	Why
O	508	510	is
O	511	514	the
B-API	515	523	INTERNET
I-API	524	534	permission
O	535	540	still
O	541	550	dangerous
O	550	551	,
O	552	555	but
O	556	563	treated
O	564	568	like
O	569	570	a
O	571	577	normal
O	578	581	one
O	581	582	?

O	583	584	(
O	584	591	instead
O	592	594	of
O	595	603	changing
O	604	606	it
O	607	609	to
O	610	616	normal
O	617	619	in
O	620	623	the
O	624	631	mapping
O	632	636	file
O	636	637	)
O	638	643	Where
O	644	648	does
O	649	653	that
O	654	660	happen
O	660	661	?

O	662	664	Is
O	665	670	there
O	671	678	another
O	679	686	mapping
O	687	690	for
O	691	692	"
O	692	701	dangerous
O	701	702	,
O	703	706	but
O	707	710	too
O	711	720	important
O	721	723	to
O	724	729	worry
O	730	735	users
O	735	736	"
O	737	748	permissions
O	748	749	?

O	750	752	Or
O	753	755	is
O	756	758	it
O	759	768	hardcoded
O	768	769	?

O	770	773	Are
O	774	779	there
O	780	785	other
O	786	795	dangerous
B-API	796	807	permissions
O	808	812	than
B-Stan	813	821	INTERNET
O	822	827	where
O	828	832	this
O	833	840	applies
O	840	841	?

O	0	6	Access
B-PL	7	10	SQL
O	11	19	database
O	20	24	from
B-Plat	25	32	Android
O	32	33	?

O	34	35	I
O	36	46	understand
O	47	51	that
O	52	54	to
O	55	61	access
O	62	63	a
B-PL	64	67	SQL
O	68	76	database
O	77	81	from
B-Plat	82	89	Android
O	90	91	I
O	92	96	need
O	97	99	to
O	100	106	create
O	107	108	a
O	109	112	web
O	113	120	service
O	121	125	that
O	126	130	will
O	131	134	run
O	135	137	on
O	138	141	the
B-PL	142	145	SQL
O	146	152	server
O	153	156	and
O	157	161	will
O	162	169	process
O	170	178	requests
O	179	183	from
O	184	187	the
B-Plat	188	195	Android
O	196	207	application
O	207	208	,
O	209	213	what
O	214	215	I
O	216	220	need
O	221	223	to
O	224	228	know
O	229	231	is
O	232	235	how
O	236	238	to
O	239	245	create
O	246	250	this
O	251	254	web
O	255	262	service
O	263	266	and
O	267	270	how
O	271	273	to
O	274	280	access
O	281	283	it
O	284	288	from
B-Plat	289	299	Android.If
O	300	306	anyone
O	307	310	can
O	311	316	point
O	317	319	me
O	320	322	in
O	323	326	the
O	327	332	right
O	333	342	direction
O	343	347	then
O	348	352	this
O	353	358	would
O	359	361	be
O	362	369	greatly
O	370	381	appriciated
O	381	382	.

O	383	385	On
O	386	389	the
O	390	396	client
O	397	401	side
O	401	402	,
O	403	406	use
B-API	407	413	Apache
I-API	414	421	Commons
I-API	422	432	HttpClient
O	433	435	to
O	436	447	communicate
O	448	452	with
O	453	456	the
O	457	460	web
O	461	468	service
O	468	469	.

O	470	472	It
O	473	474	'
O	475	476	s
O	477	484	bundled
O	485	489	with
O	490	493	the
O	494	497	SDK
O	497	498	.

O	499	504	Don't
O	505	511	forget
O	512	516	that
O	517	520	you
O	521	524	can
O	525	529	also
O	530	533	use
O	534	535	a
O	536	541	local
O	542	544	DB
O	544	545	.

O	546	549	How
O	550	553	you
O	554	560	create
O	561	564	the
O	565	568	web
O	569	576	service
O	577	588	server-side
O	589	596	depends
O	597	599	on
O	600	604	your
O	605	616	environment
O	617	620	and
O	621	624	has
O	625	632	nothing
O	633	635	to
O	636	638	do
O	639	643	with
B-Plat	644	651	Android
O	652	658	itself
O	658	659	.

B-Plat	0	7	Android
O	8	15	testing
O	15	16	,
O	17	20	how
O	21	23	to
O	24	32	simulate
O	33	43	multitouch
O	44	45	(
O	45	49	zoom
O	50	52	in
O	53	54	/
O	55	58	out
O	58	59	)
O	60	65	using
O	66	77	instruments
O	77	78	?

O	79	80	I
O	81	84	can
O	85	91	simply
O	92	100	simulate
O	101	107	single
O	108	115	touches
O	116	117	-
O	118	121	tap
O	121	122	,
O	123	128	swipe
O	128	129	,
O	130	134	hold
O	135	138	etc
O	139	141	in
O	142	144	my
O	145	150	tests
O	150	151	,
O	152	155	but
O	156	166	completely
O	167	172	stuck
O	173	177	with
O	178	188	simulating
O	189	194	multi
O	195	200	touch
O	201	203	on
O	204	206	HT
O	206	207	?

O	208	214	Desire
O	215	219	with
B-Plat	220	227	Android
I-Plat	228	231	2.2
O	231	232	.

O	233	238	Could
O	239	242	you
O	243	249	please
O	250	256	advise
O	256	257	,
O	258	261	how
O	262	265	can
O	266	267	I
O	268	277	reproduce
O	278	284	events
O	285	290	chain
O	291	293	to
O	294	298	test
O	299	312	multi-touches
O	312	313	?

O	314	315	I
O	316	321	think
O	322	323	I
O	324	328	need
O	329	331	to
O	332	335	use
O	336	340	some
O	341	347	tricky
O	348	352	kind
O	353	355	of
B-API	356	367	MotionEvent
O	368	372	like
O	373	377	MASK
O	378	380	or
O	381	390	something
O	391	395	like
O	396	400	this
O	400	401	,
O	402	405	but
O	406	410	have
O	411	413	no
O	414	418	idea
O	419	422	how
O	423	425	do
O	426	430	this
O	430	431	.

O	432	433	I
O	434	438	have
O	439	444	found
O	445	449	here
O	450	451	a
O	452	456	dump
O	457	459	of
O	460	466	events
O	467	469	of
O	470	480	reproduced
O	481	488	zooming
O	489	490	:
O	491	624	http://www.zdnet.com/blog/burnette/how-to-use-multi-touch-in-android-2-part-3-understanding-touch-events/1775?tag=mantle_skin;content
O	625	644	@codeSnippetRemoved

O	645	649	Here
O	650	652	is
O	653	655	my
O	656	661	issue
O	662	663	:

O	664	669	event
B-API	670	689	ACTION_POINTER_DOWN
O	690	691	(
O	691	694	pid
O	695	696	1
O	696	697	)
O	698	699	[
O	700	702	#0
O	703	704	(
O	704	707	pid
O	708	709	0
O	710	712	)=
O	713	720	153,230
O	721	722	;
O	723	725	#1
O	726	727	(
O	727	730	pid
O	731	732	1
O	733	735	)=
O	736	743	380,538
O	744	745	]
O	746	751	event
B-API	752	764	ACTION_MOVE[
O	765	767	#0
O	768	769	*
O	770	771	(
O	771	774	pid
O	775	776	0
O	777	779	)=
O	780	787	153,231
O	788	789	*
O	790	791	;
O	792	794	#1
O	795	796	*
O	797	798	(
O	798	801	pid
O	802	803	1
O	804	806	)=
O	807	814	380,538
O	815	817	*]

O	818	821	How
O	822	825	can
O	826	827	I
O	828	836	generate
O	837	843	events
O	844	848	with
O	849	850	4
O	851	862	coordinates
O	863	864	(
O	864	867	pid
O	868	869	0
O	870	872	x0
O	873	875	y0
O	876	879	and
O	880	883	pid
O	884	885	1
O	886	888	x1
O	889	891	y1
O	891	892	)
O	892	893	?

O	894	899	Looks
O	900	904	like
O	905	906	I
O	907	911	need
O	912	914	to
O	915	919	find
O	920	923	the
O	924	927	way
O	928	931	how
O	932	934	to
O	935	938	use
O	939	948	following
O	949	954	event
O	955	956	:

O	957	963	public
O	964	970	static
B-API	971	982	MotionEvent
O	983	989	obtain
O	990	991	(
O	991	995	long
O	996	1004	downTime
O	1004	1005	,
O	1006	1010	long
O	1011	1020	eventTime
O	1020	1021	,
O	1022	1025	int
O	1026	1032	action
O	1032	1033	,
O	1034	1037	int
O	1038	1046	pointers
O	1046	1047	,
O	1048	1051	int
O	1052	1054	[]
O	1055	1065	pointerIds
O	1065	1066	,
B-API	1067	1080	PointerCoords
O	1081	1083	[]
O	1084	1097	pointerCoords
O	1097	1098	,
O	1099	1102	int
O	1103	1112	metaState
O	1112	1113	,
O	1114	1119	float
O	1120	1130	xPrecision
O	1130	1131	,
O	1132	1137	float
O	1138	1148	yPrecision
O	1148	1149	,
O	1150	1153	int
O	1154	1162	deviceId
O	1162	1163	,
O	1164	1167	int
O	1168	1177	edgeFlags
O	1177	1178	,
O	1179	1182	int
O	1183	1189	source
O	1189	1190	,
O	1191	1194	int
O	1195	1200	flags
O	1200	1201	)

O	1202	1208	Thanks
O	1209	1211	to
O	1212	1215	Dan
O	1216	1219	for
O	1220	1225	reply
O	1225	1226	,
O	1227	1228	I
O	1229	1233	have
O	1234	1239	tried
O	1240	1244	this
O	1245	1250	logic
O	1250	1251	,
O	1252	1255	but
O	1256	1261	still
O	1262	1274	encountering
O	1275	1283	problems
O	1284	1286	to
O	1287	1290	add
O	1291	1302	coordinates
O	1303	1304	:
O	1305	1324	@codeSnippetRemoved

O	1325	1330	These
O	1331	1337	events
O	1338	1346	sequence
O	1347	1350	are
O	1351	1357	caught
O	1358	1360	in
O	1361	1363	my
O	1364	1368	test
O	1369	1373	stub
O	1374	1377	and
O	1378	1384	dumped
O	1385	1389	like
O	1390	1391	:
O	1392	1411	@codeSnippetRemoved

O	1412	1416	Here
O	1417	1420	you
O	1421	1424	can
O	1425	1428	see
O	1428	1429	,
O	1430	1434	that
O	1435	1436	(
O	1436	1437	2
O	1438	1439	*
O	1440	1443	256
O	1443	1444	)
O	1445	1446	+
B-API	1447	1470	MotionEvent.ACTION_MOVE
O	1471	1478	doesn't
O	1479	1485	change
O	1486	1489	the
O	1490	1497	pointer
O	1498	1500	ID
O	1501	1504	for
O	1505	1510	event
O	1511	1513	:(
O	1514	1517	And
O	1518	1531	pointerToMove
B-API	1532	1578	MotionEvent.ACTION_POINTER_INDEX_SHIFTapproach
O	1579	1581	is
O	1582	1585	not
O	1586	1593	working
O	1594	1597	for
B-API	1598	1617	ACTION_POINTER_DOWN
O	1617	1618	,
O	1619	1622	may
O	1623	1625	be
O	1626	1629	I'm
O	1630	1633	not
O	1634	1641	allowed
O	1642	1644	to
O	1645	1648	use
O	1649	1653	such
O	1654	1657	way
O	1658	1661	for
B-API	1662	1674	POINTER_DOWN
O	1674	1675	?

O	1676	1678	My
O	1679	1684	issue
O	1685	1687	is
O	1688	1692	that
O	1693	1694	I
O	1695	1700	can't
O	1701	1709	generate
O	1710	1711	2
O	1712	1716	pair
O	1717	1719	of
O	1720	1726	coords
O	1727	1730	for
O	1731	1738	Pointer
O	1739	1740	0
O	1741	1744	and
O	1745	1752	Pointer
O	1753	1754	1
O	1755	1756	:
O	1757	1776	@codeSnippetRemoved

O	1777	1781	Here
O	1782	1785	you
O	1786	1789	can
O	1790	1793	see
O	1793	1794	,
O	1795	1799	that
O	1800	1805	using
O	1806	1810	your
O	1811	1816	logic
O	1817	1818	I
O	1819	1823	have
O	1824	1829	added
O	1830	1834	pid1
O	1835	1837	to
O	1838	1841	the
O	1842	1847	event
O	1847	1848	,
O	1849	1852	but
O	1853	1855	it
O	1856	1858	is
O	1859	1864	still
O	1865	1868	has
O	1869	1871	no
O	1872	1883	coordinates
O	1883	1884	,
O	1885	1890	cause
O	1891	1892	x
O	1893	1896	and
O	1897	1898	y
O	1899	1902	was
O	1903	1913	associated
O	1914	1918	with
O	1919	1922	pid
O	1923	1924	0
O	1925	1927	..

O	1928	1933	Thank
O	1934	1937	you
O	1938	1940	in
O	1941	1948	advance
O	1948	1949	.

O	1950	1955	Yahor

O	1956	1961	Still
O	1962	1966	have
O	1967	1969	no
O	1970	1975	ideas
O	1976	1979	how
O	1980	1982	to
O	1983	1992	implement
O	1993	1995	it
O	1995	1996	,
O	1997	2000	did
O	2001	2009	somebody
O	2010	2014	ever
O	2015	2019	send
O	2020	2021	a
O	2022	2032	multitouch
O	2033	2038	event
O	2038	2039	?

O	2040	2041	I
O	2042	2049	believe
O	2050	2053	you
O	2054	2058	just
O	2059	2063	need
O	2064	2066	to
O	2067	2075	indicate
O	2076	2079	the
O	2080	2087	pointer
O	2088	2093	index
O	2094	2096	in
O	2097	2100	the
O	2101	2102	'
O	2103	2109	action
O	2110	2111	'
O	2112	2121	parameter
O	2122	2128	passed
O	2129	2131	to
B-API	2132	2150	MotionEvent.obtain
O	2150	2151	.

O	2152	2164	Specifically
O	2164	2165	,
O	2166	2169	the
O	2170	2175	upper
O	2176	2179	8-b
O	2180	2183	its
O	2184	2186	of
O	2187	2190	the
O	2191	2197	action
O	2198	2200	is
O	2201	2204	the
O	2205	2212	pointer
O	2213	2218	index
O	2219	2222	and
O	2223	2226	the
O	2227	2232	lower
O	2233	2236	8-b
O	2237	2240	its
O	2241	2243	is
O	2244	2247	the
O	2248	2254	action
O	2255	2256	(
O	2256	2260	e.g.
B-API	2261	2284	MotionEvent.ACTION_MOVE
O	2284	2285	)
O	2285	2286	.

O	2287	2289	So
O	2289	2290	,
O	2291	2293	if
O	2294	2297	you
O	2298	2302	want
O	2303	2305	to
O	2306	2310	move
O	2311	2314	the
O	2315	2321	second
O	2322	2329	pointer
O	2330	2334	this
O	2335	2341	should
O	2342	2346	work
O	2347	2348	:
O	2349	2368	@codeSnippetRemoved

O	2369	2373	-Dan

O	2374	2375	I
O	2376	2384	supposed
O	2385	2389	this
O	2390	2393	can
O	2394	2398	help
O	2399	2402	you
O	2403	2405	..

O	2406	2407	i
O	2408	2410	am
O	2411	2416	sorry
O	2417	2419	..

O	2420	2421	i
O	2422	2427	think
O	2428	2429	i
O	2430	2443	misunderstood
O	2444	2448	your
O	2449	2457	question
O	2457	2458	.

O	2459	2462	You
O	2463	2466	may
O	2467	2473	ignore
O	2474	2477	the
O	2478	2484	answer

O	2485	2490	there
O	2491	2493	is
O	2494	2496	no
O	2497	2502	event
O	2503	2507	such
O	2508	2509	a
O	2510	2515	multi
O	2516	2521	touch
O	2522	2527	event
O	2527	2528	.

O	2529	2532	All
O	2533	2536	you
O	2537	2541	have
O	2542	2545	are
O	2546	2552	motion
O	2553	2559	events
O	2559	2560	.

O	2561	2565	When
O	2566	2567	a
O	2568	2572	user
O	2573	2580	touches
O	2581	2586	first
O	2587	2591	time
O	2591	2592	,
O	2593	2595	an
B-API	2596	2607	ACTION_DOWN
O	2608	2613	event
O	2614	2616	is
O	2617	2623	raised
O	2623	2624	.

O	2625	2629	When
O	2630	2633	the
O	2634	2640	second
O	2641	2647	finger
O	2648	2650	is
O	2651	2655	also
O	2656	2663	touched
O	2664	2665	(
O	2665	2669	dual
O	2670	2675	touch
O	2675	2676	)
O	2677	2679	an
B-API	2680	2694	ACTION_POINTER
I-API	2695	2699	DOWN
O	2700	2705	event
O	2706	2708	is
O	2709	2715	raised
O	2715	2716	.

O	2717	2720	You
O	2721	2725	need
O	2726	2728	to
O	2729	2737	override
B-API	2738	2750	onTouchEvent
O	2751	2754	and
O	2755	2764	implement
O	2765	2775	multitouch
O	2775	2776	.

O	2777	2780	The
O	2781	2785	code
O	2786	2791	below
O	2792	2796	will
O	2797	2801	help
O	2802	2805	you
O	2805	2806	.

O	2807	2809	It
O	2810	2816	tracks
O	2817	2822	mutli
O	2823	2828	touch
O	2829	2833	zoom
O	2833	2834	,
O	2835	2844	scrolling
O	2844	2845	.

O	2846	2865	@codeSnippetRemoved

O	2866	2870	Hope
O	2871	2875	this
O	2876	2881	helps

B-Plat	0	7	Android
B-Stan	8	13	HTTPS
B-API	14	18	Post
O	19	20	-
O	21	24	Not
O	25	32	working

O	33	37	I've
O	38	42	been
O	43	49	trying
O	50	53	for
O	54	58	ages
O	59	61	to
O	62	65	get
O	66	70	this
O	71	73	to
O	74	78	work
O	79	80	-
O	81	84	but
O	85	87	no
O	88	94	matter
O	95	99	what
O	100	101	I
O	102	104	do
O	104	105	,
O	106	108	my
B-Stan	109	113	HTTP
O	114	115	*
O	116	117	S
O	118	119	*
B-API	120	124	POST
O	125	131	always
O	132	138	yields
B-API	139	148	HttpUtils
I-API	149	150	:
I-API	151	177	javax.net.ssl.SSLException
O	178	179	:
O	180	183	Not
O	184	191	trusted
O	192	198	server
O	199	210	certificate

O	211	220	Basically
O	221	222	I
O	223	231	followed
O	232	236	this
O	237	245	tutorial

O	246	247	I
O	248	260	successfully
O	261	268	grabbed
O	269	272	the
O	273	279	public
O	280	291	certificate
O	292	293	(
O	293	303	mycert.pem
O	303	304	)
O	305	309	from
O	310	319	theserver
O	319	320	.

O	321	322	I
O	323	335	successfully
O	336	343	created
O	344	345	a
B-API	346	354	keystore
O	355	359	from
O	360	363	the
O	364	375	certificate
O	376	381	using
B-Fram	382	388	Bouncy
I-Fram	389	395	Castle
O	396	397	I
O	398	404	failed
O	405	407	at
O	408	420	implementing
O	421	422	a
O	423	429	custom
O	430	436	Apache
B-API	437	447	HttpClient
O	447	448	.

O	449	453	Here
O	454	456	is
O	457	463	mycode
O	464	465	:
O	466	485	@codeSnippetRemoved

O	486	489	And
O	490	492	in
O	493	495	my
B-Stan	496	500	HTTP
B-API	501	508	Request
O	509	514	class
O	515	519	that
O	520	530	constructs
O	531	534	the
B-API	535	539	POST
O	540	541	:
O	542	561	@codeSnippetRemoved

O	562	564	My
B-API	565	569	POST
O	570	575	works
O	576	580	fine
O	581	584	for
O	585	594	non-https
O	595	603	websites
O	603	604	.

O	605	608	Any
O	609	613	help
O	614	619	would
O	620	622	be
O	623	630	greatly
O	631	642	appreciated
O	643	645	it
O	645	646	.

O	647	651	Look
O	652	654	at
O	655	658	the
O	659	664	error
O	665	672	message
O	673	674	:

B-API	675	684	HttpUtils
O	685	686	:
B-API	687	713	javax.net.ssl.SSLException
O	714	715	:
O	716	719	Not
O	720	727	trusted
O	728	734	server
O	735	746	certificate

O	747	751	This
O	752	757	means
O	758	765	exactly
O	766	770	what
O	771	773	it
O	774	778	says
O	779	781	--
O	782	785	the
O	786	792	server
O	793	795	is
O	796	799	not
O	800	805	using
O	806	807	a
O	808	815	trusted
O	816	827	certificate
O	827	828	.

O	829	830	I
O	831	834	bet
O	835	841	you'll
O	842	845	get
O	846	853	similar
O	854	860	errors
O	861	863	if
O	864	867	you
O	868	871	try
O	872	874	to
O	875	881	access
O	882	885	the
O	886	890	same
O	891	897	server
O	898	902	with
B-Fram	903	910	Firefox
O	911	913	or
B-Fram	914	916	IE
O	916	917	.

O	918	921	Use
O	922	926	This
O	927	932	Class
O	933	935	To
O	936	939	get
O	940	944	Your
B-API	945	959	HttpClient.And
O	960	965	Check
O	966	968	if
O	969	971	it
O	972	977	helps
O	977	978	.

O	979	986	package
B-API	987	1018	com.android.MyCellFamily.DAHttp
O	1019	1020	;
O	1021	1040	@codeSnippetRemoved

O	1041	1050	Sometimes
O	1051	1056	https
O	1057	1060	url
O	1061	1066	shows
O	1067	1072	blank
O	1073	1078	white
O	1079	1085	screen
O	1086	1088	in
O	1089	1092	the
B-API	1093	1100	android
I-API	1101	1108	webview
O	1108	1109	.

O	1110	1112	It
O	1113	1114	'
O	1115	1116	s
O	1117	1124	because
O	1125	1128	you
O	1129	1133	have
O	1134	1136	to
O	1137	1142	trust
O	1143	1146	the
B-Stan	1147	1150	ssl
O	1151	1164	certification
O	1165	1167	or
O	1168	1171	you
O	1172	1176	need
O	1177	1179	to
O	1180	1188	override
O	1189	1192	the
O	1193	1196	ssl
O	1197	1202	error
O	1203	1205	in
O	1206	1210	your
B-API	1211	1218	webview
I-API	1219	1225	client
O	1225	1226	.

O	1227	1230	The
O	1231	1240	following
O	1241	1248	webview
O	1249	1255	client
O	1256	1264	provides
O	1265	1268	the
O	1269	1275	needed
O	1276	1285	functions
O	1286	1288	to
O	1289	1295	access
B-Stan	1296	1301	https
O	1302	1310	url.here
B-API	1311	1335	shouldOverrideUrlLoading
O	1336	1338	is
O	1339	1343	used
O	1344	1347	for
O	1348	1350	to
O	1351	1356	allow
O	1357	1360	the
O	1361	1372	redirecting
O	1373	1376	url
O	1377	1383	within
O	1384	1387	the
B-API	1388	1395	webview
O	1395	1396	,
B-API	1397	1415	onReceivedSslError
O	1416	1420	this
O	1421	1431	oneiIgnore
B-Stan	1432	1435	SSL
O	1436	1447	certificate
O	1448	1454	errors
O	1455	1457	to
O	1458	1464	access
O	1465	1468	the
B-Stan	1469	1474	https
O	1475	1478	url
O	1478	1479	.

B-API	1480	1493	Webviewclient
O	1494	1495	:
O	1496	1515	@codeSnippetRemoved

O	0	24	INSTALL_FAILED_OLDER_SDK
O	25	26	-
O	27	32	Error
O	33	40	Message

O	41	42	I
O	43	45	am
O	46	52	trying
O	53	56	out
O	57	60	the
O	61	66	basic
O	67	68	"
O	68	73	hello
O	74	79	world
O	79	80	"
O	81	88	program
O	89	91	on
O	92	94	my
O	95	97	LG
O	98	104	Thrive
O	105	110	phone
O	111	115	that
O	116	120	uses
B-API	121	128	Android
I-API	129	134	2.2.1
O	134	135	.

O	136	137	I
O	138	142	have
O	143	147	used
O	148	150	an
O	151	154	API
O	155	160	level
O	161	163	of
O	164	165	8
O	166	169	for
O	170	173	the
O	174	185	application
O	185	186	,
O	187	190	but
O	191	196	still
O	197	200	get
O	201	204	the
O	205	210	above
O	211	216	error
O	216	217	.

O	218	221	Any
O	222	227	other
O	228	236	possible
O	237	243	reason
O	244	248	that
O	249	253	this
O	254	259	error
O	260	262	is
O	263	270	flagged
O	270	271	?

O	272	276	EDIT
O	277	278	:
O	279	280	I
O	281	289	overcame
O	290	294	this
O	295	302	problem
O	303	307	when
O	308	309	I
O	310	313	ran
O	314	317	the
O	318	329	application
O	330	332	in
O	333	335	my
O	336	343	virtual
O	344	352	emulator
O	353	356	and
O	357	361	then
O	362	364	in
O	365	368	the
O	369	374	phone
O	374	375	.

O	376	379	The
O	380	386	reason
O	387	388	I
O	389	392	did
O	393	397	this
O	398	401	was
O	402	403	-
O	404	405	I
O	406	409	had
O	410	412	to
O	413	420	earlier
O	421	427	change
O	428	430	my
O	431	434	API
O	435	440	level
O	441	445	from
O	446	448	15
O	449	451	to
O	452	453	8
O	453	454	,
O	455	458	and
O	459	461	by
O	462	468	merely
O	469	478	modifying
O	479	482	and
O	483	489	saving
O	490	493	the
O	494	502	manifest
O	503	507	file
O	508	511	and
O	512	515	the
O	516	523	project
O	524	534	properties
O	535	536	-
O	537	540	the
B-Stan	541	544	apk
O	545	549	file
O	550	553	did
O	554	557	not
O	558	561	get
O	562	569	updated
O	569	570	.

O	571	578	However
O	579	581	it
O	582	585	got
O	586	593	updated
O	594	598	once
O	599	600	I
O	601	604	ran
O	605	608	the
O	609	616	program
O	617	619	on
O	620	623	the
O	624	631	virtual
O	632	640	emulator
O	640	641	.

O	642	645	Any
O	646	652	reason
O	653	656	why
O	657	660	the
B-Stan	661	664	apk
O	665	669	file
O	670	673	did
O	674	677	not
O	678	681	get
O	682	689	updated
O	690	697	earlier
O	697	698	?

O	699	701	If
O	702	705	you
O	706	709	are
O	710	720	installing
O	721	724	the
B-Stan	725	728	apk
O	729	731	on
O	732	733	a
O	734	739	phone
O	740	745	using
O	746	749	the
O	750	755	shell
O	755	756	,
O	757	760	and
O	761	764	you
O	765	769	have
O	770	777	already
O	778	785	checked
O	786	792	wheter
O	793	796	you
O	797	805	compiled
O	806	808	it
O	809	811	to
O	812	813	a
O	814	821	correct
O	822	828	target
O	829	830	(
O	830	833	Api
O	834	835	8
O	836	837	o
O	838	844	lesser
O	844	845	)
O	845	846	,
O	847	853	create
O	854	861	another
O	862	870	emulator
O	871	873	to
O	874	877	the
O	878	881	Api
O	882	883	8
O	884	887	and
O	888	891	try
O	892	894	to
O	895	902	compile
O	903	905	it
O	905	906	.

O	907	909	If
O	910	912	it
O	913	918	fails
O	918	919	,
O	920	923	you
O	924	927	are
O	928	931	not
O	932	943	configuring
O	944	946	it
O	947	956	correctly
O	956	957	.

O	0	4	What
O	5	8	way
O	9	11	is
O	12	18	better
O	19	23	when
O	24	33	executing
O	34	41	queries
O	42	46	from
B-PL	47	51	Java

O	52	53	I
O	54	58	have
O	59	62	the
O	63	72	following
O	73	78	doubt
O	78	79	.

O	80	84	When
O	85	88	you
O	89	93	have
O	94	96	to
O	97	102	query
O	103	104	a
O	105	107	DB
O	108	112	from
O	113	114	a
B-PL	115	119	Java
O	120	131	application
O	132	137	there
O	138	141	are
O	142	149	several
O	150	154	ways
O	155	157	to
O	158	160	do
O	161	163	it
O	163	164	.

O	165	166	I
O	167	171	have
O	172	176	came
O	177	179	up
O	180	184	with
O	185	189	some
O	190	200	approaches
O	200	201	,
O	202	205	but
O	206	210	each
O	211	213	of
O	214	218	them
O	219	223	have
O	224	225	a
O	226	229	con
O	229	230	.

O	231	234	The
O	235	240	first
O	241	244	one
O	245	247	is
O	247	248	,
O	249	252	you
O	253	257	have
O	258	259	a
O	260	265	class
O	266	268	eg
O	268	269	.

B-API	270	282	QueryManager
O	283	288	which
O	289	297	provides
O	298	301	you
O	302	306	with
O	307	315	querying
O	316	331	functionalities
O	331	332	,
O	333	337	like
B-API	338	351	executeUpdate
O	352	353	(
O	353	356	...
O	356	357	)
O	358	361	and
B-API	362	374	executeQuery
O	375	376	(
O	376	379	...
O	379	380	)
O	381	386	while
O	387	393	hiding
O	394	401	details
O	402	404	of
O	405	408	the
O	409	419	management
O	420	422	of
O	423	434	connections
O	435	438	etc
O	438	439	.

O	440	441	(
O	441	445	Kind
O	446	448	of
O	449	450	a
B-Stan	451	457	Facade
O	458	465	Pattern
O	465	466	)
O	466	467	.

O	468	472	When
O	473	476	you
O	477	481	need
O	482	484	to
O	485	493	interact
O	494	498	with
O	499	502	the
O	503	505	DB
O	505	506	,
O	507	510	you
O	511	515	will
O	516	520	pass
O	521	524	the
O	525	530	query
O	531	533	as
O	534	535	a
O	536	542	String
O	543	546	and
O	547	553	manage
O	554	557	the
B-API	558	567	ResultSet
O	567	568	.

O	569	572	The
O	573	580	problem
O	581	585	that
O	586	587	I
O	588	591	see
O	592	594	is
O	595	599	that
O	600	602	if
O	603	606	the
O	607	609	DB
O	610	617	changes
O	617	618	,
O	619	626	whether
O	627	630	the
O	631	635	DBMS
O	636	638	or
O	639	642	the
O	643	645	DB
O	646	652	itself
O	652	653	,
O	654	657	you
O	658	662	will
O	663	666	end
O	667	669	up
O	670	675	going
O	676	680	file
O	681	683	by
O	684	688	file
O	689	698	modifying
O	699	702	the
B-PL	703	706	SQL
O	706	707	.

O	708	709	I
O	710	713	see
O	714	718	this
O	719	721	as
O	722	723	a
O	724	728	huge
O	729	739	dependency
O	739	740	.

O	741	745	Also
O	745	746	,
O	747	750	you
O	751	754	are
O	755	763	exposing
O	764	766	to
O	767	775	everyone
O	776	779	the
O	780	788	stucture
O	789	791	of
O	792	796	your
O	797	799	DB
O	800	803	and
O	804	807	you
O	808	811	are
O	812	818	making
O	819	823	each
O	824	829	class
O	830	832	to
O	833	839	handle
O	840	843	the
B-API	844	853	ResultSet
O	853	854	.

O	855	857	On
O	858	861	the
O	862	867	other
O	868	872	hand
O	872	873	,
O	874	877	you
O	878	883	could
O	884	890	achive
O	891	897	higher
O	898	908	modularity
O	909	911	by
O	912	917	using
O	918	922	this
O	923	929	method
O	929	930	,
O	931	936	since
O	937	940	the
O	941	947	models
O	948	949	(
O	949	950	I
O	951	953	am
O	954	955	a
O	956	959	fan
O	960	962	of
B-Stan	963	966	MVC
O	967	974	Pattern
O	974	975	)
O	976	978	of
O	979	983	your
O	984	991	classes
O	992	997	could
O	998	1002	have
O	1003	1010	package
O	1011	1021	visibility
O	1021	1022	.

O	1023	1026	The
O	1027	1033	second
O	1034	1038	idea
O	1039	1043	that
O	1044	1048	came
O	1049	1051	to
O	1052	1054	my
O	1055	1059	mind
O	1060	1063	was
O	1064	1072	creating
O	1073	1074	a
B-API	1075	1087	QueryManager
O	1088	1093	class
O	1094	1098	that
O	1099	1106	instead
O	1107	1109	of
O	1110	1119	providing
O	1120	1123	you
O	1124	1128	with
O	1129	1132	the
O	1133	1140	methods
O	1141	1144	for
O	1145	1153	querying
O	1153	1154	,
O	1155	1157	it
O	1158	1162	will
O	1163	1170	provide
O	1171	1174	you
O	1175	1179	with
O	1180	1183	the
O	1184	1191	methods
O	1192	1195	you
O	1196	1200	need
O	1200	1201	.

O	1202	1204	In
O	1205	1210	other
O	1211	1216	words
O	1216	1217	,
O	1218	1222	each
O	1223	1227	time
O	1228	1231	you
O	1232	1236	need
O	1237	1239	to
O	1240	1243	use
O	1244	1247	the
O	1248	1250	DB
O	1250	1251	,
O	1252	1255	you
O	1256	1260	will
O	1261	1267	create
O	1268	1269	a
O	1270	1276	method
O	1277	1279	in
O	1280	1284	this
O	1285	1290	class
O	1290	1291	,
O	1292	1296	with
O	1297	1300	the
B-PL	1301	1304	SQL
O	1305	1311	inside
O	1311	1312	,
O	1313	1317	that
O	1318	1322	will
O	1323	1329	return
O	1330	1333	the
O	1334	1345	information
O	1346	1349	you
O	1350	1354	need
O	1354	1355	.

O	1356	1359	But
O	1359	1360	,
O	1361	1364	the
O	1365	1372	problem
O	1373	1375	we
O	1376	1379	are
O	1380	1386	facing
O	1387	1391	here
O	1392	1394	is
O	1394	1395	,
O	1396	1399	you
O	1400	1404	have
O	1405	1407	to
O	1408	1414	choose
O	1415	1422	between
O	1423	1432	returning
O	1433	1434	a
B-API	1435	1444	ResultSet
O	1445	1447	or
O	1448	1449	a
O	1450	1455	model
O	1456	1458	of
O	1459	1462	the
O	1463	1467	data
O	1468	1471	you
O	1472	1476	need
O	1476	1477	.

O	1478	1481	The
O	1482	1488	former
O	1488	1489	,
O	1490	1494	will
O	1495	1499	make
O	1500	1504	your
O	1505	1512	classes
O	1513	1522	dependant
O	1523	1525	on
O	1526	1529	the
O	1530	1532	DB
O	1532	1533	,
O	1534	1538	less
O	1539	1543	than
O	1544	1546	in
O	1547	1550	the
O	1551	1559	previous
O	1560	1567	example
O	1567	1568	,
O	1569	1574	since
O	1575	1578	now
O	1579	1584	there
O	1585	1587	is
O	1588	1590	no
O	1591	1597	widely
O	1598	1604	spread
O	1605	1615	dependency
O	1616	1620	with
O	1621	1624	the
O	1625	1629	DBMS
O	1629	1630	,
O	1631	1638	because
O	1639	1642	all
O	1643	1646	the
B-PL	1647	1650	SQL
O	1651	1653	is
O	1654	1663	contained
O	1664	1666	in
O	1667	1670	one
O	1671	1676	class
O	1677	1678	/
O	1679	1683	file
O	1683	1684	.

O	1685	1692	However
O	1693	1695	it
O	1696	1701	still
O	1702	1708	exists
O	1709	1710	a
O	1711	1721	dependency
O	1722	1726	with
O	1727	1730	the
O	1731	1733	DB
O	1734	1743	structure
O	1744	1747	and
O	1748	1751	you
O	1752	1755	are
O	1756	1764	exposing
O	1764	1765	,
O	1766	1768	as
O	1769	1773	well
O	1773	1774	,
O	1775	1779	your
O	1780	1782	DB
O	1783	1792	structure
O	1793	1795	to
O	1796	1804	everyone
O	1804	1805	.

O	1806	1809	The
O	1810	1815	later
O	1816	1823	implies
O	1824	1828	that
O	1829	1835	theese
O	1836	1842	models
O	1843	1845	no
O	1846	1852	longer
O	1853	1858	could
O	1859	1861	be
O	1862	1869	package
O	1870	1880	visibility
O	1880	1881	,
O	1882	1886	they
O	1887	1891	must
O	1892	1894	be
O	1895	1901	public
O	1901	1902	,
O	1903	1911	allowing
O	1912	1915	any
O	1916	1921	class
O	1922	1924	to
O	1925	1931	modify
O	1932	1936	them
O	1936	1937	,
O	1938	1941	and
O	1942	1950	breaking
O	1951	1964	encapsulation
O	1964	1965	.

O	1966	1968	Is
O	1969	1974	there
O	1975	1978	any
O	1979	1984	other
O	1985	1993	approach
O	1994	1998	that
O	1999	2005	solves
O	2006	2009	all
O	2010	2013	the
O	2014	2022	previous
O	2023	2031	problems
O	2031	2032	?

O	2033	2035	If
O	2036	2039	not
O	2039	2040	,
O	2041	2046	which
O	2047	2049	do
O	2050	2053	you
O	2054	2059	think
O	2060	2062	is
O	2063	2064	a
O	2065	2071	better
O	2072	2080	approach
O	2080	2081	?

O	2082	2083	I
O	2084	2086	do
O	2087	2090	not
O	2091	2096	think
O	2097	2102	there
O	2103	2105	is
O	2106	2108	an
O	2109	2117	absolute
O	2118	2125	answear
O	2126	2127	(
O	2127	2132	maybe
O	2133	2138	there
O	2139	2141	is
O	2141	2142	)
O	2142	2143	,
O	2144	2147	but
O	2148	2149	I
O	2150	2154	must
O	2155	2158	say
O	2159	2163	that
O	2164	2166	we
O	2167	2170	are
O	2171	2180	expecting
O	2181	2188	changes
O	2189	2191	in
O	2192	2196	both
O	2197	2200	the
O	2201	2210	structure
O	2211	2213	of
O	2214	2217	the
O	2218	2220	DB
O	2221	2224	and
O	2225	2227	in
O	2228	2231	the
O	2232	2236	DBMS
O	2236	2237	.

O	2238	2242	This
O	2243	2248	might
O	2249	2253	help
O	2254	2256	in
O	2257	2261	your
O	2262	2269	answear
O	2269	2270	.

O	2271	2274	But
O	2275	2278	try
O	2279	2281	to
O	2282	2286	make
O	2287	2289	it
O	2290	2292	as
O	2293	2300	general
O	2301	2303	as
O	2304	2312	possible
O	2312	2313	,
O	2314	2319	since
O	2320	2321	I
O	2322	2327	could
O	2328	2330	be
O	2331	2333	in
O	2334	2339	other
O	2340	2347	project
O	2348	2352	with
O	2353	2356	the
O	2357	2361	same
O	2362	2367	doubt
O	2367	2368	,
O	2369	2372	but
O	2373	2375	no
O	2376	2380	with
O	2381	2384	the
O	2385	2389	same
O	2390	2402	restrictions
O	2402	2403	.

O	2404	2405	I
O	2406	2413	suggest
O	2414	2416	to
O	2417	2423	create
B-Stan	2424	2427	DAO
O	2428	2435	classes
O	2436	2437	(
O	2437	2515	http://java.sun.com/blueprints/corej2eepatterns/Patterns/DataAccessObject.html
O	2515	2516	)
O	2517	2520	for
O	2521	2524	all
O	2525	2533	entities
O	2533	2534	,
O	2535	2539	that
O	2540	2544	will
O	2545	2549	hide
B-PL	2550	2553	SQL
O	2554	2555	/
B-PL	2556	2559	HQL
O	2560	2561	/
O	2562	2570	whatever
O	2571	2577	inside
O	2577	2578	.

O	2579	2583	They
O	2584	2588	will
O	2589	2595	return
O	2596	2602	object
O	2603	2608	model
O	2608	2609	,
O	2610	2612	so
O	2613	2627	business-logic
O	2628	2635	classes
O	2636	2640	will
O	2641	2644	not
O	2645	2649	care
O	2650	2655	about
O	2656	2663	queries
O	2664	2665	/
O	2666	2674	fetching
O	2675	2679	from
O	2680	2688	database
O	2689	2690	/
O	2691	2694	etc
O	2694	2695	.

O	2696	2697	I
O	2698	2703	don't
O	2704	2708	like
O	2709	2715	either
O	2716	2718	of
O	2719	2723	your
O	2724	2734	approaches
O	2734	2735	.

O	2736	2739	You
O	2740	2743	can
O	2744	2749	write
O	2750	2751	a
O	2752	2758	single
O	2759	2768	interface
O	2769	2773	that
O	2774	2781	handles
O	2782	2785	all
O	2786	2788	of
O	2789	2791	it
O	2792	2793	:
O	2794	2797	the
O	2798	2805	generic
B-Stan	2806	2809	DAO
O	2809	2810	.

O	2811	2815	Here
O	2816	2817	'
O	2818	2819	s
O	2820	2821	a
O	2822	2828	simple
O	2829	2836	example
O	2837	2841	that
O	2842	2844	is
O	2845	2848	not
O	2849	2857	intended
O	2858	2860	to
O	2861	2863	be
O	2864	2867	the
O	2868	2876	complete
O	2877	2883	answer
O	2883	2884	,
O	2885	2892	because
O	2893	2895	it
O	2896	2900	does
O	2901	2904	not
O	2905	2910	allow
O	2911	2913	ad
O	2914	2917	hoc
O	2918	2925	queries
O	2926	2928	or
O	2929	2936	mapping
O	2937	2939	to
O	2940	2949	arbitrary
O	2950	2957	objects
O	2957	2958	,
O	2959	2962	but
O	2963	2965	it
O	2966	2967	'
O	2968	2969	s
O	2970	2971	a
O	2972	2977	start
O	2978	2979	:
O	2980	2999	@codeSnippetRemoved

O	3000	3003	You
O	3004	3010	should
O	3011	3015	have
O	3016	3017	a
O	3018	3023	clear
O	3024	3033	interface
O	3034	3041	between
O	3042	3053	persistence
O	3054	3057	and
O	3058	3063	model
O	3064	3071	classes
O	3072	3073	;
O	3074	3077	the
O	3078	3084	latter
O	3085	3089	need
O	3090	3093	not
O	3094	3098	know
O	3099	3104	about
O	3105	3108	the
O	3109	3115	former
O	3115	3116	.

O	3117	3120	You
O	3121	3127	should
O	3128	3131	not
O	3132	3137	allow
B-API	3138	3147	ResultSet
O	3148	3150	or
O	3151	3160	Statement
O	3161	3165	leak
O	3166	3169	out
O	3170	3172	of
O	3173	3176	the
O	3177	3188	persistence
O	3189	3194	layer
O	3194	3195	.

O	3196	3199	You
O	3200	3206	should
O	3207	3211	have
O	3212	3213	a
O	3214	3221	service
O	3222	3227	layer
O	3228	3232	that
O	3233	3240	obtains
O	3241	3252	connections
O	3253	3256	and
O	3257	3264	manages
O	3265	3277	transactions
O	3277	3278	.

O	3279	3282	You
O	3283	3289	should
O	3290	3295	write
B-PL	3296	3299	SQL
O	3300	3302	in
O	3303	3307	such
O	3308	3309	a
O	3310	3313	way
O	3314	3318	that
O	3319	3328	switching
O	3329	3338	databases
O	3339	3340	-
O	3341	3346	which
O	3347	3353	should
O	3354	3360	happen
O	3361	3367	rarely
O	3368	3370	if
O	3371	3373	at
O	3374	3377	all
O	3378	3379	-
O	3380	3382	is
O	3383	3385	as
O	3386	3392	simple
O	3393	3395	as
O	3396	3404	changing
O	3405	3408	the
B-Fram	3409	3413	JDBC
I-Fram	3414	3420	driver
B-Stan	3421	3424	JAR
O	3425	3428	and
O	3429	3439	connection
O	3440	3450	parameters
O	3450	3451	.

O	3452	3453	I
O	3454	3459	think
O	3460	3464	what
O	3465	3471	you're
O	3472	3477	after
O	3478	3480	is
O	3481	3484	the
B-Stan	3485	3489	data
I-Stan	3490	3496	access
I-Stan	3497	3503	object
O	3504	3505	(
B-Stan	3505	3508	DAO
O	3508	3509	)
O	3510	3517	pattern
O	3517	3518	.

O	3519	3521	If
O	3522	3525	you
O	3526	3529	use
O	3530	3531	a
O	3532	3541	framework
O	3542	3545	for
O	3546	3563	object-relational
O	3564	3571	mapping
O	3572	3576	like
B-Fram	3577	3586	Hibernate
O	3586	3587	,
O	3588	3592	your
B-Stan	3593	3597	DAOs
O	3598	3601	can
O	3602	3610	actually
O	3611	3618	specify
O	3619	3622	the
O	3623	3631	database
O	3632	3638	schema
O	3639	3647	directly
O	3648	3649	(
O	3649	3654	which
O	3655	3656	I
O	3657	3662	think
O	3663	3665	is
O	3666	3672	pretty
O	3673	3677	neat
O	3677	3678	)
O	3678	3679	.

O	3680	3689	Otherwise
O	3689	3690	,
O	3691	3693	it
O	3694	3695	'
O	3696	3697	s
O	3698	3705	typical
O	3706	3708	to
O	3709	3716	provide
O	3717	3718	a
O	3719	3722	set
O	3723	3725	of
O	3726	3737	hand-rolled
B-Stan	3738	3741	DAO
O	3742	3749	classes
O	3750	3755	which
O	3756	3764	abstract
O	3765	3769	away
O	3770	3773	all
O	3774	3777	the
O	3778	3788	underlying
O	3789	3797	database
O	3798	3806	concerns
O	3807	3808	(
O	3808	3812	e.g.
O	3813	3816	the
B-Stan	3817	3820	DAO
O	3821	3828	classes
O	3829	3835	should
O	3836	3839	not
O	3840	3846	return
B-API	3847	3856	ResultSet
O	3856	3857	)
O	3857	3858	.

O	3859	3862	The
O	3863	3869	second
O	3870	3873	one
O	3874	3876	is
O	3877	3880	the
O	3881	3885	good
O	3886	3889	one
O	3890	3891	:
O	3892	3895	you
O	3896	3902	should
O	3903	3910	extract
O	3911	3915	your
B-API	3916	3920	data
I-API	3921	3927	access
I-API	3928	3935	methods
O	3936	3938	in
B-Stan	3939	3943	Data
I-Stan	3944	3950	Access
I-Stan	3951	3958	Objects
O	3959	3960	(
B-Stan	3960	3964	DAOs
O	3964	3965	)
O	3965	3966	,
O	3967	3972	which
O	3973	3980	isolate
O	3981	3984	the
O	3985	3989	rest
O	3990	3992	of
O	3993	3996	the
O	3997	4008	application
O	4009	4013	from
O	4014	4033	persistence-related
O	4034	4042	problems
O	4042	4043	.

O	4044	4047	And
B-Stan	4048	4052	DAOs
O	4053	4059	should
O	4060	4070	definitely
O	4071	4077	return
O	4078	4085	objects
O	4085	4086	,
O	4087	4090	and
O	4091	4094	not
B-API	4095	4101	result
I-API	4102	4106	sets
O	4106	4107	.

O	4108	4112	This
O	4113	4121	provides
O	4122	4125	the
O	4126	4135	following
O	4136	4146	advantages
O	4147	4148	:

O	4149	4159	decoupling
O	4160	4162	of
O	4163	4171	concerns
O	4172	4175	and
O	4176	4192	responsibilities
O	4193	4199	easier
O	4200	4209	evolution
O	4210	4212	of
O	4213	4216	the
O	4217	4221	rest
O	4222	4224	of
O	4225	4228	the
O	4229	4240	application
O	4241	4245	when
O	4246	4249	the
O	4250	4256	schema
O	4257	4264	changes
O	4265	4271	easier
O	4272	4281	evolution
O	4282	4284	of
O	4285	4288	the
O	4289	4293	rest
O	4294	4296	of
O	4297	4300	the
O	4301	4312	application
O	4313	4317	when
O	4318	4321	you
O	4322	4328	choose
O	4329	4331	to
O	4332	4335	use
O	4336	4338	an
B-Stan	4339	4342	ORM
O	4343	4350	instead
O	4351	4353	of
B-Stan	4354	4358	JDBC
O	4359	4361	to
O	4362	4368	access
O	4369	4372	the
O	4373	4381	database
O	4382	4388	easier
O	4389	4401	unit-testing
O	4402	4404	of
O	4405	4408	the
O	4409	4416	queries
O	4417	4418	(
O	4418	4421	and
O	4422	4424	of
O	4425	4428	the
O	4429	4440	persistence
O	4441	4446	layer
O	4447	4449	in
O	4450	4457	general
O	4457	4458	)
O	4458	4459	,
O	4460	4465	since
O	4466	4469	the
O	4470	4481	persistence
O	4482	4486	code
O	4487	4489	is
O	4490	4493	not
O	4494	4499	mixed
O	4500	4504	with
O	4505	4515	functional
O	4516	4520	code
O	4521	4527	easier
O	4528	4540	unit-testing
O	4541	4543	of
O	4544	4547	the
O	4548	4556	business
O	4557	4558	(
O	4558	4565	service
O	4565	4566	)
O	4567	4572	layer
O	4572	4573	,
O	4574	4581	because
O	4582	4584	it
O	4585	4591	allows
O	4592	4601	injecting
O	4602	4606	mock
B-Stan	4607	4611	DAOs
O	4612	4614	to
O	4615	4622	provide
O	4623	4626	the
O	4627	4631	data
O	4631	4632	,
O	4633	4639	rather
O	4640	4644	than
O	4645	4652	needing
O	4653	4657	real
O	4658	4662	data
O	4663	4665	in
O	4666	4669	the
O	4670	4678	database
O	4679	4681	to
O	4682	4686	test
O	4687	4689	it
O	4689	4690	.

O	4691	4692	I
O	4693	4698	think
O	4699	4701	we
O	4702	4706	have
O	4707	4709	to
O	4710	4716	lookup
O	4717	4721	with
O	4722	4725	two
O	4726	4736	approaches
O	4737	4738	:
O	4739	4748	updatable
O	4749	4757	database
O	4758	4761	and
O	4762	4771	read-only
O	4772	4780	database
O	4780	4781	.

O	4782	4784	If
O	4785	4788	you
O	4789	4793	want
O	4794	4796	to
O	4797	4803	insert
O	4804	4805	/
O	4806	4812	update
O	4813	4814	/
O	4815	4821	delete
O	4822	4831	something
O	4832	4834	in
O	4835	4839	your
O	4840	4848	database
O	4848	4849	,
O	4850	4851	I
O	4852	4857	think
O	4858	4863	there
O	4864	4869	isn't
O	4870	4873	any
O	4874	4877	way
O	4878	4880	to
O	4881	4888	achieve
O	4889	4893	this
O	4894	4901	without
O	4902	4905	the
O	4906	4915	knowledge
O	4916	4921	about
O	4922	4925	how
O	4926	4928	is
O	4929	4933	your
O	4934	4942	database
O	4943	4944	:
O	4945	4950	names
O	4950	4951	,
O	4952	4956	data
O	4957	4962	types
O	4963	4966	...

O	4967	4970	But
O	4970	4971	,
O	4972	4974	at
O	4975	4978	the
O	4979	4984	other
O	4985	4989	hand
O	4989	4990	,
O	4991	4993	if
O	4994	4997	you
O	4998	5002	just
O	5003	5007	want
O	5008	5010	to
O	5011	5016	seach
O	5017	5019	in
O	5020	5024	your
O	5025	5033	database
O	5033	5034	,
O	5035	5040	there
O	5041	5042	'
O	5043	5044	s
O	5045	5046	a
O	5047	5051	good
O	5052	5055	way
O	5056	5058	to
O	5059	5066	achieve
O	5067	5071	this
O	5072	5073	:
O	5074	5079	using
O	5080	5088	database
O	5089	5094	views
O	5094	5095	.

O	5096	5099	You
O	5100	5103	can
O	5104	5108	have
O	5109	5110	a
O	5111	5114	lot
O	5115	5117	of
O	5118	5123	views
O	5123	5124	,
O	5125	5128	and
O	5129	5133	each
O	5134	5136	of
O	5137	5141	this
O	5142	5146	view
O	5147	5151	with
O	5152	5155	all
O	5156	5159	the
O	5160	5164	data
O	5165	5168	you
O	5169	5173	need
O	5173	5174	,
O	5175	5178	but
O	5179	5181	no
O	5182	5185	one
O	5186	5192	should
O	5193	5197	need
O	5198	5200	to
O	5201	5205	know
O	5206	5213	exactly
O	5214	5219	which
O	5220	5224	data
O	5225	5227	do
O	5228	5231	you
O	5232	5236	have
O	5237	5243	behind
O	5244	5247	the
O	5248	5253	views
O	5253	5254	.

O	5255	5258	You
O	5259	5262	can
O	5263	5271	restrict
O	5272	5276	some
O	5277	5282	users
O	5283	5285	to
O	5286	5290	only
O	5291	5294	see
O	5295	5298	the
O	5299	5304	views
O	5304	5305	,
O	5306	5309	and
O	5310	5313	not
O	5314	5317	the
O	5318	5326	original
O	5327	5333	tables
O	5333	5334	,
O	5335	5337	so
O	5338	5341	you
O	5342	5345	can
O	5346	5347	"
O	5347	5351	hide
O	5351	5352	"
O	5353	5357	your
O	5358	5362	real
O	5363	5371	database
O	5372	5381	structure
O	5381	5382	.

O	5383	5384	I
O	5385	5390	think
O	5391	5395	this
O	5396	5398	is
O	5399	5403	more
O	5404	5408	than
B-PL	5409	5413	Java
O	5414	5422	approach
O	5423	5424	:
O	5425	5427	it
O	5428	5429	'
O	5430	5431	s
O	5432	5433	a
O	5434	5442	Database
O	5443	5444	+
B-PL	5445	5449	java
O	5450	5458	Approach
O	5458	5459	.

B-API	0	9	focuslost
O	10	15	event
O	16	18	of
B-API	19	29	JTextfield
O	30	33	not
O	34	38	work
O	39	47	properly

O	48	49	I
O	50	52	am
O	53	59	making
O	60	62	an
O	63	74	application
O	75	77	in
O	78	83	which
O	84	85	I
O	86	88	am
O	89	94	using
O	95	98	the
B-API	99	109	jTextfield
I-API	110	119	Focuslost
O	120	125	event
O	126	129	.It
O	130	135	works
O	136	144	properly
O	144	145	.

O	146	149	Now
O	150	152	my
O	153	160	problem
O	161	163	is
O	164	168	that
O	169	173	when
O	174	175	I
O	176	181	click
O	182	189	outside
O	190	193	the
O	194	198	form
O	198	199	,

O	200	203	the
B-API	204	214	jTextfield
I-API	215	224	Focuslost
O	225	230	event
O	231	236	takes
O	237	242	place
O	243	246	and
O	247	249	it
O	250	256	should
O	257	259	do
O	260	263	the
O	264	272	whatever
O	273	274	I
O	275	280	write
O	281	283	in

B-API	284	293	Focuslost
O	294	299	event
O	300	307	code.so
O	308	314	please
O	315	319	help
O	320	322	me
O	322	323	.

O	0	4	What
O	5	7	is
O	8	20	synchronized
O	21	30	statement
O	31	35	used
O	36	39	for
O	39	40	?

O	41	45	What
O	46	48	is
O	49	52	the
O	53	58	usage
O	59	61	of
O	62	74	synchronized
O	75	85	statements
O	85	86	?

O	87	91	Only
O	92	93	1
O	94	100	thread
O	101	103	at
O	104	105	a
O	106	110	time
O	111	114	can
O	115	121	access
O	122	123	a
O	124	136	synchronized
O	137	142	block
O	142	143	.

O	144	148	This
O	149	151	is
O	152	153	a
O	154	159	basic
O	160	168	language
O	169	178	construct
O	178	179	.

O	180	182	If
O	183	189	you're
O	190	193	not
O	194	196	at
O	197	200	all
O	201	209	familiar
O	210	214	with
O	215	217	it
O	218	224	you'll
O	225	229	need
O	230	232	to
O	233	239	review
O	239	240	.

O	241	243	It
O	244	246	is
O	247	248	a
B-PL	249	253	java
O	254	259	built
O	260	262	in
O	263	267	form
O	268	270	of
O	271	277	mutual
O	278	287	exclusion
O	287	288	.

O	289	293	This
O	294	296	is
O	297	301	used
O	302	305	for
O	306	319	multithreaded
O	320	332	applications
O	332	333	.

O	334	337	Sun
O	338	349	concurrency
O	350	358	tutorial

O	359	363	This
O	364	367	has
O	368	369	a
O	370	377	section
O	378	383	about
O	384	396	synchronized
O	396	397	,
O	398	401	but
O	402	405	you
O	406	412	should
O	413	417	read
O	418	421	the
O	422	427	whole
O	428	433	thing
O	434	436	if
O	437	440	you
O	441	444	are
O	445	451	trying
O	452	454	to
O	455	458	use
O	459	472	multithreaded
O	473	485	applications
O	485	486	.

O	487	491	Wiki
O	492	497	mutex

O	498	503	These
O	504	507	are
O	508	512	used
O	513	516	for
O	517	521	when
O	522	525	you
O	526	529	are
O	530	538	building
O	539	540	a
O	541	548	program
O	549	553	with
O	554	558	many
O	559	560	"
O	560	567	threads
O	567	568	"
O	568	569	.

O	570	574	When
O	575	579	main
O	580	586	starts
O	586	587	,
O	588	590	it
O	591	597	starts
O	598	602	with
O	603	606	one
O	607	613	thread
O	613	614	,
O	615	620	which
O	621	629	executes
O	630	633	the
O	634	639	steps
O	640	642	in
O	643	644	a
O	645	653	sequence
O	653	654	.

O	655	658	You
O	659	662	can
O	663	668	start
O	669	673	many
O	674	678	more
O	679	686	threads
O	686	687	,
O	688	693	which
O	694	697	can
O	698	702	then
O	703	710	execute
O	711	715	code
O	716	718	at
O	719	722	the
O	723	727	same
O	728	732	time
O	732	733	.

O	734	736	If
O	737	743	you're
O	744	753	executing
O	754	757	the
O	758	762	same
O	763	767	code
O	768	770	at
O	771	774	the
O	775	779	same
O	780	784	time
O	784	785	,
O	786	792	things
O	793	798	might
O	799	802	get
O	803	809	messed
O	810	812	up
O	813	814	:
O	815	834	@codeSnippetRemoved

O	835	839	What
O	840	843	you
O	844	848	want
O	849	851	to
O	852	854	do
O	855	857	is
O	858	861	put
O	862	863	a
O	864	865	'
O	866	870	lock
O	871	872	'
O	873	877	over
O	878	882	this
O	883	888	block
O	889	891	of
O	892	896	code
O	896	897	,
O	898	900	to
O	901	905	make
O	906	910	sure
O	911	915	that
O	916	918	no
O	919	920	(
O	920	925	other
O	925	926	)
O	927	928	'
O	929	935	thread
O	936	937	'
O	938	941	can
O	942	947	start
O	948	957	executing
O	958	960	it
O	961	967	unless
O	968	970	it
O	971	973	is
O	974	975	"
O	975	987	synchronized
O	988	990	on
O	990	991	"
O	992	995	the
O	996	1004	variable
O	1005	1006	y
O	1006	1007	.

O	1008	1027	@codeSnippetRemoved

O	1028	1031	Now
O	1031	1032	,
O	1033	1036	all
O	1037	1042	other
O	1043	1050	threads
O	1051	1055	have
O	1056	1058	to
O	1059	1063	wait
O	1064	1067	for
O	1068	1077	whichever
O	1078	1084	thread
O	1085	1088	got
O	1089	1094	there
O	1095	1100	first
O	1101	1103	to
O	1104	1110	finish
O	1110	1111	,
O	1112	1114	at
O	1115	1120	which
O	1121	1126	point
O	1127	1134	another
O	1135	1141	thread
O	1142	1147	grabs
O	1148	1151	the
O	1152	1156	lock
O	1156	1157	,
O	1158	1164	enters
O	1165	1168	the
O	1169	1174	block
O	1175	1177	of
O	1178	1182	code
O	1182	1183	,
O	1184	1192	executes
O	1193	1195	it
O	1195	1196	,
O	1197	1200	and
O	1201	1209	releases
O	1210	1213	the
O	1214	1218	lock
O	1218	1219	.

O	1220	1222	By
O	1223	1226	the
O	1227	1230	way
O	1230	1231	,
O	1232	1233	a
O	1234	1237	has
O	1238	1240	to
O	1241	1243	be
O	1244	1246	an
O	1247	1253	object
O	1254	1255	(
B-API	1255	1262	Integer
O	1262	1263	)
O	1263	1264	,
O	1265	1268	not
O	1269	1270	a
O	1271	1280	primitive
O	1281	1285	type
O	1285	1286	.

O	1287	1290	You
O	1291	1294	can
O	1295	1299	also
O	1300	1303	add
O	1304	1305	'
O	1306	1318	synchronized
O	1319	1320	'
O	1321	1323	to
O	1324	1331	methods
O	1332	1333	(
O	1333	1338	which
O	1339	1351	synchronizes
O	1352	1354	on
O	1355	1356	'
O	1357	1361	this
O	1362	1363	'
O	1363	1364	,
O	1365	1369	that
O	1370	1372	is
O	1373	1376	the
O	1377	1383	object
O	1383	1384	)
O	1384	1385	,
O	1386	1388	or
O	1389	1391	to
O	1392	1399	classes
O	1400	1401	(
O	1401	1406	which
O	1407	1419	synchronizes
O	1420	1423	all
O	1424	1431	methods
O	1432	1434	of
O	1435	1439	that
O	1440	1445	class
O	1445	1446	)
O	1446	1447	.

O	1448	1455	Writing
O	1456	1470	multi-threaded
O	1471	1475	code
O	1476	1478	is
O	1479	1483	hard
O	1483	1484	,
O	1485	1492	because
O	1493	1495	of
O	1496	1504	problems
O	1505	1509	like
O	1510	1514	this
O	1514	1515	.

O	1516	1531	Synchronization
O	1532	1534	is
O	1535	1538	one
O	1539	1543	tool
O	1543	1544	,
O	1545	1551	though
O	1552	1554	it
O	1555	1558	has
O	1559	1562	one
O	1563	1568	major
O	1569	1576	problem
O	1577	1578	-
O	1579	1588	deadlocks
O	1588	1589	.

O	1590	1593	You
O	1594	1600	should
O	1601	1605	look
O	1606	1610	this
O	1611	1613	up
O	1613	1614	.

O	1615	1617	It
O	1618	1625	creates
O	1626	1627	a
O	1628	1635	section
O	1636	1638	of
O	1639	1643	code
O	1644	1649	which
O	1649	1650	,
O	1651	1655	with
O	1656	1663	respect
O	1664	1666	to
O	1667	1670	two
O	1671	1673	or
O	1674	1678	more
O	1679	1686	threads
O	1686	1687	,
O	1688	1691	can
O	1692	1693	(
O	1693	1694	a
O	1694	1695	)
O	1696	1700	only
O	1701	1703	be
O	1704	1712	executed
O	1713	1715	by
O	1716	1719	one
O	1720	1726	thread
O	1727	1729	at
O	1730	1731	a
O	1732	1736	time
O	1736	1737	,
O	1738	1741	and
O	1742	1743	(
O	1743	1744	b
O	1744	1745	)
O	1746	1751	forms
O	1752	1753	a
O	1754	1760	memory
O	1761	1768	barrier
O	1768	1769	.

O	1770	1775	While
O	1776	1789	understanding
O	1790	1793	the
O	1794	1801	concept
O	1802	1804	of
O	1805	1821	mutual-exclusion
O	1822	1832	preventing
O	1833	1843	concurrent
O	1844	1853	execution
O	1854	1856	of
O	1857	1860	the
O	1861	1865	code
O	1866	1868	is
O	1869	1874	quite
O	1875	1879	easy
O	1879	1880	,
O	1881	1888	equally
O	1889	1898	important
O	1899	1901	is
O	1902	1905	the
O	1906	1912	memory
O	1913	1920	barrier
O	1920	1921	.

O	1922	1923	A
O	1924	1930	memory
O	1931	1938	barrier
O	1939	1944	forms
O	1945	1946	a
O	1947	1948	"
O	1948	1955	happens
O	1956	1962	before
O	1962	1963	"
O	1964	1976	relationship
O	1977	1984	between
O	1985	1988	two
O	1989	1996	threads
O	1996	1997	.

O	1998	2001	Any
O	2002	2009	changes
O	2010	2012	to
O	2013	2019	memory
O	2020	2024	made
O	2025	2027	by
O	2028	2029	a
O	2030	2036	thread
O	2037	2043	before
O	2044	2053	acquiring
O	2054	2055	a
O	2056	2060	lock
O	2061	2063	is
O	2064	2074	guaranteed
O	2075	2077	to
O	2078	2080	be
O	2081	2089	observed
O	2090	2092	by
O	2093	2100	another
O	2101	2107	thread
O	2108	2113	after
O	2114	2116	it
O	2117	2125	acquires
O	2126	2129	the
O	2130	2134	same
O	2135	2139	lock
O	2139	2140	.

O	2141	2144	Due
O	2145	2147	to
O	2148	2151	the
O	2152	2159	effects
O	2160	2162	of
O	2163	2166	CPU
O	2167	2173	caches
O	2174	2177	and
O	2178	2183	their
O	2184	2195	interaction
O	2196	2200	with
O	2201	2205	main
O	2206	2212	memory
O	2212	2213	,
O	2214	2218	this
O	2219	2221	is
O	2222	2230	critical
O	2231	2233	to
O	2234	2244	preventing
O	2245	2256	observation
O	2257	2260	and
O	2261	2267	update
O	2268	2270	of
O	2271	2276	stale
O	2277	2283	cached
O	2284	2290	memory
O	2291	2294	and
O	2295	2305	preventing
O	2306	2310	race
O	2311	2321	conditions
O	2322	2329	between
O	2330	2337	threads
O	2337	2338	.

O	0	3	How
O	4	7	can
O	8	9	I
O	10	18	generate
O	19	20	a
O	21	27	random
O	28	34	number
O	35	42	without
O	43	46	use
O	47	49	of
B-API	50	61	Math.Random
O	61	62	?

O	63	65	My
O	66	73	project
O	74	81	entails
O	82	86	that
O	87	88	I
O	89	95	create
O	96	97	a
O	98	103	basic
O	104	110	number
O	111	119	guessing
O	120	124	game
O	125	129	that
O	130	134	uses
O	135	138	the
B-API	139	150	JOptionPane
O	151	154	and
O	155	159	does
O	160	163	not
O	164	167	use
B-API	168	179	Math.Random
O	180	182	to
O	183	189	create
O	190	193	the
O	194	200	random
O	201	206	value
O	206	207	.

O	208	211	How
O	212	217	would
O	218	221	you
O	222	224	go
O	225	230	about
O	231	236	doing
O	237	241	this
O	241	242	?

O	243	247	I've
O	248	257	completed
O	258	268	everything
O	269	275	except
O	276	279	the
O	280	286	random
O	287	293	number
O	294	303	generator
O	303	304	.

O	305	311	Thanks
O	311	312	!

O	313	315	If
O	316	319	you
O	320	325	don't
O	326	330	like
O	331	334	the
B-API	335	346	Math.Random
O	347	350	you
O	351	354	can
O	355	359	make
O	360	364	your
O	365	368	own
B-API	369	375	Random
O	376	382	object
O	382	383	.

O	384	390	import
O	391	392	:
O	393	412	@codeSnippetRemoved

O	413	417	code
O	418	419	:
O	420	439	@codeSnippetRemoved

O	440	442	If
O	443	446	you
O	447	451	need
O	452	457	other
O	458	463	types
O	464	471	instead
O	472	474	of
O	475	478	int
O	478	479	,
B-API	480	486	Random
O	487	491	will
O	492	499	provide
O	500	507	methods
O	508	511	for
O	512	519	boolean
O	519	520	,
O	521	527	double
O	527	528	,
O	529	534	float
O	534	535	,
O	536	540	long
O	540	541	,
O	542	546	byte
O	546	547	.

O	548	551	You
O	552	557	could
O	558	561	use
B-API	562	588	java.security.SecureRandom
O	588	589	.

O	590	592	It
O	593	596	has
O	597	603	better
O	604	611	entropy
O	611	612	.

O	613	617	Also
O	617	618	,
O	619	623	here
O	624	626	is
O	627	631	code
O	632	636	from
O	637	640	the
O	641	645	book
O	646	650	Data
O	651	661	Structures
O	662	665	and
O	666	675	Algorithm
O	676	684	Analysis
O	685	687	in
B-PL	688	692	Java
O	692	693	.

O	694	696	It
O	697	701	uses
O	702	705	the
O	706	710	same
O	711	720	algorithm
O	721	723	as
B-API	724	740	java.util.Random
O	740	741	.

O	742	743	I
O	744	748	know
O	749	753	that
O	754	757	for
O	758	763	poker
O	764	767	web
O	768	773	sites
O	774	778	they
O	779	782	use
O	783	789	things
O	790	794	like
O	795	806	temperature
O	807	809	of
O	810	813	the
O	814	823	processor
O	823	824	,
O	825	830	don't
O	831	835	know
O	836	838	on
O	839	842	the
O	843	846	top
O	847	849	of
O	850	852	my
O	853	857	head
O	858	862	what
O	863	865	to
O	866	869	use
O	870	872	to
O	873	876	get
O	877	881	this
O	882	888	though

O	889	893	Here
O	894	897	the
O	898	902	code
O	903	906	for
O	907	908	a
O	909	915	Simple
O	916	922	random
O	923	932	generator
O	933	934	:
O	935	954	@codeSnippetRemoved

B-Fram	0	6	Google
I-Fram	7	12	Guava
I-Fram	13	25	TreeMultimap
O	26	28	--
O	29	37	retrieve
O	38	44	values
O	45	50	based
O	51	53	on
O	54	60	sorted
O	61	69	ordering
O	69	70	?

O	71	73	So
O	74	77	I'm
O	78	84	trying
O	85	87	to
O	88	97	implement
O	98	107	something
O	108	112	that
O	113	121	requires
O	122	129	sorting
O	130	132	of
O	133	139	values
O	140	142	of
O	143	144	a
O	145	153	Quantity
O	154	155	>
O	156	159	map
O	159	160	,
O	161	165	such
O	166	168	as
O	169	170	:
O	171	190	@codeSnippetRemoved

O	191	194	The
O	195	201	values
O	202	205	are
O	206	209	not
O	210	221	necessarily
O	222	230	distinct
O	230	231	.

O	232	233	I
O	234	238	want
O	239	241	to
O	242	244	be
O	245	249	able
O	250	252	to
O	253	261	retrieve
O	262	265	the
O	266	267	k
O	268	269	/
O	270	271	v
O	272	276	pair
O	277	281	with
O	282	285	the
O	286	293	largest
O	294	297	and
O	298	306	smallest
O	307	312	value
O	312	313	,
O	314	321	similar
O	322	324	to
O	325	329	what
O	330	331	a
B-API	332	339	TreeMap
O	340	342	is
O	343	347	able
O	348	350	to
O	351	353	do
O	354	358	with
O	359	363	keys
O	363	364	.

O	365	366	I
O	367	372	found
B-Fram	373	379	Google
I-Fram	380	385	Guava
I-Fram	386	387	'
I-Fram	388	389	s
I-Fram	390	402	TreeMultimap
O	402	403	,
O	404	409	which
O	410	412	is
O	413	415	an
O	416	430	implementation
O	431	433	of
B-Fram	434	442	Multimap
O	443	448	whose
O	449	453	keys
O	454	457	and
O	458	464	values
O	465	468	are
O	469	476	ordered
O	477	479	by
O	480	485	their
O	486	493	natural
O	494	502	ordering
O	503	505	or
O	506	508	by
O	509	517	supplied
O	518	529	comparators
O	529	530	.

O	531	534	The
O	535	540	thing
O	541	543	is
O	543	544	,
B-API	545	557	TreeMultiMap
O	558	565	doesn't
O	566	570	seem
O	571	573	to
O	574	578	have
O	579	582	any
O	583	590	methods
O	591	595	that
O	596	599	let
O	600	602	me
O	603	611	retrieve
O	612	613	k
O	614	615	/
O	616	617	v
O	618	623	pairs
O	624	629	based
O	630	632	on
O	633	636	the
O	637	645	ordering
O	646	648	of
O	649	652	the
O	653	657	keys
O	658	660	or
O	661	667	values
O	667	668	,
O	669	670	(
O	670	674	like
O	675	679	what
B-API	680	696	pollFirstEntry()
O	696	697	,
O	698	701	for
O	702	710	instance
O	710	711	,
O	712	716	does
O	717	719	in
B-API	720	727	TreeMap
O	727	728	)
O	728	729	.

O	730	732	To
O	733	737	this
O	738	744	extent
O	744	745	,
O	746	749	I'm
O	750	751	a
O	752	758	little
O	759	767	confused
O	768	770	on
O	771	774	how
O	775	777	to
O	778	782	make
O	783	784	a
B-API	785	797	TreeMultimap
O	798	804	object
O	805	811	obtain
O	812	816	this
O	817	830	functionality
O	830	831	.

O	832	833	I
O	834	838	feel
O	839	843	like
O	844	846	it
O	847	853	should
O	854	858	work
O	858	859	,
O	860	865	maybe
O	866	868	it
O	869	870	'
O	871	872	s
O	873	877	just
O	878	879	a
O	880	886	matter
O	887	889	of
O	890	893	how
O	894	895	I
O	896	907	instantiate
O	908	911	the
O	912	918	object
O	918	919	?

O	920	926	Thanks
O	926	927	,
O	928	931	any
O	932	936	help
O	937	942	would
O	943	945	be
O	946	957	appreciated
O	957	958	.

B-API	959	971	TreeMultimap
O	972	977	isn't
O	978	983	going
O	984	986	to
O	987	994	support
O	995	999	this
O	1000	1002	in
O	1003	1008	quite
O	1009	1012	the
O	1013	1016	way
O	1017	1023	you're
O	1024	1031	looking
O	1032	1035	for
O	1035	1036	,
O	1037	1040	I'm
O	1041	1047	fairly
O	1048	1055	certain
O	1055	1056	.

O	1057	1061	What
O	1062	1065	you
O	1066	1071	could
O	1072	1074	do
O	1075	1077	is
O	1078	1079	a
B-API	1080	1092	TreeMultimap
O	1093	1100	Integer
O	1100	1101	,
O	1102	1108	String
O	1109	1111	--
O	1112	1120	swapping
O	1121	1124	the
O	1125	1129	role
O	1130	1132	of
O	1133	1136	the
O	1137	1141	keys
O	1142	1145	and
O	1146	1149	the
O	1150	1156	values
O	1157	1159	--
O	1160	1163	and
O	1164	1168	then
B-API	1169	1189	TreeMultimap.asMap()
I-API	1190	1202	.lastEntry()
O	1203	1208	would
O	1209	1212	get
O	1213	1216	you
O	1217	1218	a
B-API	1219	1228	Map.Entry
O	1229	1236	Integer
O	1236	1237	,
B-API	1238	1248	Collection
I-API	1249	1255	String
O	1255	1256	,
O	1257	1270	corresponding
O	1271	1273	to
O	1274	1277	the
O	1278	1286	greatest
O	1287	1294	Integer
O	1295	1298	and
O	1299	1302	all
O	1303	1306	the
O	1307	1313	String
O	1314	1315	s
O	1316	1326	associated
O	1327	1331	with
O	1332	1334	it
O	1334	1335	.

O	1336	1339	The
O	1340	1343	one
O	1344	1349	thing
O	1350	1360	definitely
O	1361	1364	not
O	1365	1374	supported
O	1375	1377	by
B-API	1378	1390	TreeMultimap
O	1391	1393	is
O	1394	1401	looking
O	1402	1404	at
O	1405	1408	the
O	1409	1417	combined
O	1418	1424	values
O	1425	1428	for
O	1429	1432	all
O	1433	1437	keys
O	1438	1440	as
O	1441	1442	a
O	1443	1449	single
O	1450	1456	sorted
O	1457	1467	collection
O	1467	1468	.

O	1469	1470	(
O	1470	1473	You
O	1474	1477	can
O	1478	1482	look
O	1483	1485	at
O	1486	1490	them
O	1491	1493	as
O	1494	1496	an
O	1497	1505	unsorted
O	1506	1516	collection
O	1517	1521	with
O	1522	1530	values()
O	1530	1531	,
O	1532	1534	of
O	1535	1541	course
O	1541	1542	.
O	1542	1543	)

O	1544	1546	It
O	1547	1548	'
O	1549	1550	s
O	1551	1555	true
O	1556	1560	that
B-API	1561	1573	TreeMultimap
O	1574	1578	does
O	1579	1584	order
O	1585	1591	values
O	1592	1601	according
O	1602	1604	to
O	1605	1606	a
O	1607	1612	value
O	1613	1623	comparator
O	1623	1624	,
O	1625	1628	but
O	1629	1633	that
O	1634	1642	ordering
O	1643	1645	is
O	1646	1650	only
O	1651	1659	relevant
O	1660	1662	in
O	1663	1671	relation
O	1672	1674	to
O	1675	1680	other
O	1681	1687	values
O	1688	1694	mapped
O	1695	1697	to
O	1698	1701	the
O	1702	1706	same
O	1707	1710	key
O	1710	1711	.

O	1712	1714	So
O	1714	1715	,
O	1716	1719	for
O	1720	1727	example
O	1727	1728	,
O	1729	1731	if
O	1732	1735	you
O	1736	1739	had
O	1740	1759	@codeSnippetRemoved

O	1760	1763	And
O	1764	1767	you
O	1768	1776	iterated
O	1777	1784	through
O	1785	1788	the
O	1789	1798	entries()
O	1798	1799	,
O	1800	1803	you
O	1804	1810	should
O	1811	1814	get
O	1815	1816	[
O	1817	1818	(
O	1818	1819	a
O	1819	1820	,
O	1821	1822	1
O	1822	1823	)
O	1823	1824	,
O	1825	1826	(
O	1826	1827	a
O	1827	1828	,
O	1829	1830	3
O	1830	1831	)
O	1831	1832	,
O	1833	1834	(
O	1834	1835	b
O	1835	1836	,
O	1837	1838	2
O	1838	1839	)
O	1839	1840	,
O	1841	1842	(
O	1842	1843	b
O	1843	1844	,
O	1845	1846	4
O	1846	1847	)
O	1848	1849	]
O	1849	1850	.

O	1851	1860	Similarly
O	1861	1863	if
O	1864	1867	you
O	1868	1876	iterated
O	1877	1884	through
O	1885	1888	the
O	1889	1897	values()
O	1897	1898	,
O	1899	1902	you
O	1903	1909	should
O	1910	1913	get
O	1914	1915	[
O	1916	1917	1
O	1917	1918	,
O	1919	1920	3
O	1920	1921	,
O	1922	1923	2
O	1923	1924	,
O	1925	1926	4
O	1927	1928	]
O	1929	1931	as
O	1932	1934	it
O	1935	1942	returns
O	1943	1946	the
O	1947	1953	values
O	1954	1956	of
O	1957	1958	a
O	1959	1961	in
O	1962	1967	order
O	1967	1968	,
O	1969	1973	then
O	1974	1977	the
O	1978	1984	values
O	1985	1987	of
O	1988	1989	b
O	1990	1992	in
O	1993	1998	order
O	1998	1999	.

O	2000	2007	Getting
O	2008	2011	the
O	2012	2017	first
O	2018	2020	or
O	2021	2025	last
O	2026	2029	key
O	2030	2032	is
O	2033	2039	simple
O	2040	2046	though
O	2046	2047	,
O	2048	2050	as
B-API	2051	2059	keySet()
O	2060	2067	returns
O	2068	2069	a
B-API	2070	2082	NavigableSet
O	2082	2083	,
O	2084	2091	meaning
O	2092	2095	you
O	2096	2099	can
O	2100	2104	call
O	2105	2112	first()
O	2113	2116	and
O	2117	2123	last()
O	2124	2126	on
O	2127	2129	it
O	2129	2130	.

O	0	3	How
O	4	6	to
O	7	14	convert
B-Stan	15	18	xml
O	19	21	to
B-Stan	22	27	.json
O	28	32	file
O	33	35	in
B-PL	36	40	java

O	41	47	public
O	48	53	class
O	54	70	ConvertXMLtoJSON
O	71	72	{

O	73	79	public
O	80	86	static
O	87	91	void
O	92	96	main
O	97	98	(
O	98	104	String
O	105	107	[]
O	108	112	args
O	112	113	)
O	114	120	throws
B-API	121	130	Exception
O	131	132	{
B-API	133	144	InputStream
O	145	147	in
O	148	149	=
O	150	192	ConvertXMLtoJSON.class.getResourceAsStream
O	193	194	(
O	194	195	"
O	195	197	D:
O	198	200	\\
O	201	211	sample.xml
O	212	214	")
O	215	216	;
B-API	217	223	String
O	224	227	xml
O	228	229	=
B-API	230	246	IOUtils.toString
O	247	248	(
O	248	250	in
O	251	253	);
B-API	254	267	XMLSerializer
O	268	281	xmlSerializer
O	282	283	=
O	284	287	new
B-API	288	303	XMLSerializer()
O	304	305	;
B-API	306	310	JSON
O	311	315	json
O	316	317	=
B-API	318	336	xmlSerializer.read
O	337	338	(
O	338	341	xml
O	342	344	);
B-API	345	363	System.out.println
O	364	365	(
B-API	365	378	json.toString
O	379	380	(
O	380	381	2
O	382	385	));
O	386	387	}
O	388	389	}

O	390	393	but
O	394	395	i
O	396	398	am
O	399	406	getting
O	407	412	error
O	413	432	@codeSnippetRemoved

O	433	436	can
O	437	438	u
O	439	445	please
O	446	450	help
O	451	453	me
O	454	456	to
O	457	464	resolve
O	465	471	itThis
O	472	474	is
O	475	477	my
B-Stan	478	481	xml
O	482	488	format
O	489	492	ac3
O	493	496	AC3
O	497	502	Phone
O	503	507	ACME
O	508	513	phone
O	514	519	200.0
O	520	523	1.0
O	524	528	true

O	529	530	i
O	531	535	have
O	536	545	generated
O	546	550	this
B-Stan	551	554	xml
O	555	559	from
O	560	562	my
B-Fram	563	568	excel
O	569	573	file
O	574	577	and
O	578	579	i
O	580	584	have
O	585	592	convert
O	593	597	this
B-Stan	598	601	xml
O	602	606	file
O	607	609	to
B-Stan	610	614	json
O	615	619	file

O	620	623	You
O	624	627	are
O	628	634	trying
O	635	637	to
O	638	642	read
O	643	651	physical
O	652	656	File
O	657	659	as
O	660	661	a
O	662	671	classpath
O	672	680	Resource
O	680	681	,
O	682	687	which
O	688	690	is
O	691	696	wrong
O	697	716	@codeSnippetRemoved

O	717	723	Change
O	724	726	it
O	727	729	to
O	730	749	@codeSnippetRemoved

B-API	750	756	String
O	757	760	xml
O	761	762	=
B-API	763	779	IOUtils.toString
O	780	781	(
O	781	783	in
O	784	786	);

O	787	791	Here
B-API	792	803	InputStream
O	804	806	in
O	807	809	is
O	810	814	null
O	815	817	so
O	818	820	it
O	821	826	raise
B-API	827	847	NullPointerException
O	847	848	.

O	849	854	Class
O	855	875	#getResourceAsStream
O	876	877	(
B-API	877	883	String
O	884	888	name
O	888	889	)
O	890	892	it
O	893	896	use
O	897	899	to
O	900	904	load
O	905	913	resource
O	914	918	from
O	919	928	classpath
O	929	932	and
O	933	941	normally
O	942	945	use
O	946	948	in
O	949	958	web-based
O	959	966	project
O	966	967	,
O	968	971	and
O	972	974	an
O	975	983	absolute
O	984	992	resource
O	993	997	name
O	998	1000	is
O	1001	1012	constructed
O	1013	1017	from
O	1018	1021	the
O	1022	1027	given
O	1028	1036	resource
O	1037	1041	name
O	1042	1047	using
O	1048	1052	this
O	1053	1062	algorithm
O	1063	1064	:

O	1065	1067	If
O	1068	1071	the
O	1072	1076	name
O	1077	1083	begins
O	1084	1088	with
O	1089	1090	a
O	1091	1092	'
O	1093	1094	/
O	1095	1096	'
O	1097	1098	(
O	1098	1099	'
O	1100	1106	\u002f
O	1107	1109	')
O	1109	1110	,
O	1111	1115	then
O	1116	1119	the
O	1120	1128	absolute
O	1129	1133	name
O	1134	1139	ofthe
O	1140	1148	resource
O	1149	1151	is
O	1152	1155	the
O	1156	1163	portion
O	1164	1166	of
O	1167	1170	the
O	1171	1175	name
O	1176	1185	following
O	1186	1189	the
O	1190	1191	'
O	1192	1193	/
O	1194	1195	'
O	1195	1196	.

O	1197	1206	Otherwise
O	1206	1207	,
O	1208	1211	the
O	1212	1220	absolute
O	1221	1225	name
O	1226	1228	is
O	1229	1231	of
O	1232	1235	the
O	1236	1245	following
O	1246	1250	form
O	1251	1252	:
O	1253	1274	modified_package_name
O	1275	1276	/
O	1277	1281	name

O	1282	1284	As
O	1285	1298	Documentation

O	1299	1301	As
O	1302	1306	your
O	1307	1311	file
O	1312	1318	exists
O	1319	1321	in
O	1322	1327	local
O	1328	1338	hard-drive
O	1339	1340	(
O	1340	1342	D:
O	1343	1345	\\
O	1346	1356	sample.xml
O	1356	1357	)
O	1358	1364	better
O	1365	1368	use
B-API	1369	1384	FileInputStream
O	1385	1387	to
O	1388	1392	load
O	1393	1396	the
O	1397	1404	resouce
O	1404	1405	.

O	1406	1425	@codeSnippetRemoved

O	1426	1430	Find
O	1431	1432	a
O	1433	1437	good
O	1438	1445	related
O	1446	1454	question
O	1455	1456	-

B-API	1457	1478	getResourceAsStream()
O	1479	1481	vs
B-API	1482	1497	FileInputStream

O	1498	1500	Hi
O	1501	1505	Anil
O	1506	1510	This
O	1511	1513	is
O	1514	1517	the
O	1518	1522	code
O	1523	1528	which
O	1529	1531	is
O	1532	1536	used
O	1537	1539	to
O	1540	1547	convert
B-Stan	1548	1551	xml
O	1552	1554	to
B-Stan	1555	1559	json
O	1560	1579	@codeSnippetRemoved

O	1580	1581	}

B-API	0	8	ListView
O	9	11	is
O	12	21	populated
O	22	25	but
O	26	34	displays
O	35	37	no
O	38	46	elements

O	47	48	I
O	49	53	have
O	54	61	googled
O	62	65	and
O	66	74	searched
O	75	79	this
O	80	84	site
O	85	88	for
O	89	95	answer
O	96	99	but
O	100	103	get
O	104	111	nothing
O	112	114	;/

O	115	117	So
O	117	118	,
O	119	123	here
O	124	126	is
O	127	129	my
O	130	137	problem
O	138	139	i
O	140	144	have
B-API	145	153	listview
O	154	159	which
O	160	161	i
O	162	165	try
O	166	168	to
O	169	177	populate
O	178	182	with
O	183	187	data
O	188	192	from
O	193	201	database
O	202	205	but
O	206	209	the
O	210	214	list
O	215	223	displays
O	224	231	nothing
O	231	232	.

O	233	234	I
O	235	240	realy
O	241	246	stuck
O	247	249	on
O	250	254	this
O	255	258	one
O	258	259	,
O	260	264	here
O	265	267	is
O	268	270	my
O	271	275	code
O	276	277	:

O	278	305	DatabaseViewerActivity.java
O	306	307	:

O	308	312	Here
O	313	315	is
O	316	318	my
O	319	338	single_row_item.xml
O	339	340	:

O	341	344	And
O	345	364	database_layout.xml
O	365	366	:

O	367	368	I
O	369	374	don't
O	375	379	know
O	380	385	where
O	386	389	the
O	390	397	problem
O	398	400	is
O	400	401	,
O	402	403	I
O	404	408	have
O	409	416	checked
O	417	429	c.getCount()
O	430	433	and
B-API	434	452	adapter.getCount()
O	453	458	don't
O	459	465	return
O	466	467	0
O	467	468	,

O	469	471	my
B-API	472	478	LogCat
O	479	480	:

O	481	490	Exception
O	491	496	which
O	497	498	i
O	499	502	got
O	503	507	when
O	508	509	i
O	510	517	removed
O	518	519	"
O	519	521	AS
O	522	525	_id
O	525	526	"
O	527	531	from
O	532	540	statemet

O	541	546	Since
O	547	550	you
O	551	554	are
O	555	560	using
B-API	561	582	startManagingCursor()
O	582	583	,
O	584	587	you
O	588	591	can
O	592	598	remove
O	599	602	the
O	603	607	code

O	608	617	c.close()
O	618	619	;

O	620	636	database.close()
O	637	638	;

O	639	641	as
B-Plat	642	649	android
O	650	659	framework
O	660	664	will
O	665	669	take
O	670	674	care
O	675	677	of
O	678	685	closing
O	686	689	the
O	690	696	cursor
O	697	700	and
O	701	703	db
O	704	708	when
O	709	712	the
O	713	721	activity
O	722	724	is
O	725	731	closed
O	731	732	.

O	733	737	Also
O	738	741	the
O	742	747	lines

O	748	754	create
O	755	762	trouble
O	763	765	in
O	766	769	you
O	770	774	code
O	775	777	is
O	778	781	you
O	782	785	are
O	786	794	creating
O	795	797	an
O	798	805	adapter
O	806	812	object
O	813	817	from
O	818	822	this
O	823	829	cursor
O	830	835	which
O	836	839	you
O	840	843	are
O	844	854	eventually
O	855	860	force
O	861	868	closing
O	868	869	,
O	870	872	so
O	873	876	the
O	877	881	data
O	882	885	set
O	886	892	backed
O	893	895	by
O	896	899	the
O	900	907	adapter
O	908	912	gets
O	913	924	invalidated
O	925	928	and
O	929	934	hence
O	935	938	you
O	939	942	see
O	943	945	no
O	946	953	results
O	953	954	.

O	955	959	Here
O	960	962	is
O	963	966	the
O	967	973	sample
O	974	979	which
O	980	984	will
O	985	989	work
O	990	994	hope
O	995	997	it
O	998	1003	helps
O	1003	1004	.

O	0	3	How
O	4	6	to
O	7	13	access
O	14	24	downloaded
O	25	29	jars
O	30	32	of
B-Fram	33	37	Java
I-Fram	38	47	Web-Start
O	48	59	application

O	60	62	Is
O	63	68	there
O	69	72	any
O	73	76	way
O	77	79	to
O	80	85	refer
O	86	92	client
O	93	97	side
O	98	108	downloaded
O	109	113	jars
O	114	116	of
O	117	118	a
B-Fram	119	126	JavaWeb
I-Fram	127	132	Start
O	133	144	application
O	145	147	in
O	148	151	the
O	152	159	runtime
O	159	160	?

B-Stan	161	165	JNLP
O	166	170	file
O	171	173	is
O	174	181	defined
O	182	184	as

O	185	186	I
O	187	192	would
O	193	197	like
O	198	200	to
O	201	206	start
O	207	208	a
B-PL	209	213	java
O	214	221	process
O	222	224	to
O	225	232	execute
O	233	234	a
B-PL	235	239	java
O	240	247	command
O	248	253	which
O	254	259	takes
O	260	263	the
O	264	270	devkit
B-Stan	271	274	jar
O	275	278	ref
O	279	281	in
O	282	285	the
O	286	291	class
O	292	296	path
O	296	297	.

B-PL	298	302	JAVA
O	303	310	Program
O	311	312	(
O	312	321	Main.java
O	321	322	)

O	323	324	I
O	325	328	was
O	329	336	looking
O	337	340	for
O	341	345	some
O	346	355	solutions
O	356	359	but
O	360	368	couldn't
O	369	373	find
O	374	377	any
O	378	384	proper
O	385	393	solution
O	394	397	yet
O	397	398	.

O	399	405	Please
O	406	410	help
O	410	411	.

O	0	2	if
O	3	4	(
O	4	6	up
O	7	9	-1
O	9	10	)
O	11	17	return
O	18	23	count
O	24	25	;
O	26	30	else
O	31	53	count+=calculateFloors
O	54	55	(
O	55	62	count++
O	63	65	);
O	66	67	}
O	68	73	catch
O	74	75	(
B-API	75	84	Exception
O	85	86	e
O	86	87	)
O	88	89	{
B-API	90	108	System.out.println
O	109	110	(
O	110	111	e
O	112	114	);
O	115	116	}
O	117	123	return
O	124	129	count
O	130	131	;
O	132	133	}

O	134	137	Try
O	138	142	that
O	142	143	.

O	144	148	Just
O	149	151	do
O	152	153	a
O	154	172	Depth-First-Search
O	173	177	over
O	178	181	the
O	182	187	rooms
O	188	189	(
O	189	192	you
O	193	195	do
O	196	199	not
O	200	204	need
O	205	206	a
O	207	216	recursive
O	217	225	function
O	225	226	)
O	226	227	.

O	228	231	You
O	232	237	might
O	238	240	go
O	241	243	up
O	244	247	and
O	248	252	down
O	253	255	to
O	256	261	reach
O	262	265	the
O	266	269	top
O	269	270	.

O	271	290	@codeSnippetRemoved

O	0	3	Use
O	4	13	variables
O	14	18	from
O	19	24	other
O	25	30	class
O	31	35	from
O	36	41	other
O	42	46	file
O	47	49	to
O	50	57	another
O	58	60	in
B-PL	61	65	java

O	66	71	There
O	72	75	are
O	76	79	two
O	80	87	players
O	88	91	who
O	92	96	will
O	97	102	input
O	103	108	their
O	109	113	name
O	114	116	in
O	117	120	the
B-API	121	132	JTextFields
O	132	133	.

O	134	138	What
O	139	140	I
O	141	145	want
O	146	148	to
O	149	151	do
O	152	154	is
O	155	159	that
O	160	163	the
O	164	168	data
O	169	170	I
O	171	178	entered
O	179	183	from
O	184	187	the
O	188	195	Welcome
O	196	201	frame
O	202	204	in
O	205	215	Enter.java
O	216	220	will
O	221	223	be
O	224	235	transferred
O	236	238	to
O	239	242	the
B-API	243	250	JLabels
O	251	253	in
O	254	269	ActualGame.java
O	269	270	.

O	271	290	@codeSnippetRemoved

O	291	295	Main
O	296	298	is
O	299	302	the
O	303	307	main
O	308	313	class
O	314	318	that
O	319	324	holds
O	325	328	the
B-API	329	335	JFrame
O	336	338	of
O	339	351	ActualGame()
O	352	355	and
O	356	360	also
O	361	364	the
O	365	369	main
O	370	375	class
O	376	378	of
O	379	386	Enter()
O	386	387	.

O	388	407	@codeSnippetRemoved

O	408	411	the
O	412	422	ActualGame
O	423	424	:
O	425	444	@codeSnippetRemoved

O	445	449	What
O	450	456	should
O	457	458	I
O	459	461	do
O	462	464	to
O	465	467	be
O	468	472	able
O	473	475	to
O	476	479	use
O	480	483	the
O	484	490	String
O	491	499	variable
O	500	503	one
O	504	507	and
O	508	511	two
O	512	516	from
O	517	527	Enter.java
O	528	530	to
O	531	550	ActualGame.java?I'm
O	551	554	new
O	555	558	and
O	559	563	noob
O	564	566	in
O	567	578	programming
O	579	589	especially
B-Fram	590	594	java
I-Fram	595	600	swing
O	600	601	.

O	602	606	Open
O	607	609	to
O	610	620	criticisms
O	621	624	and
O	625	636	suggestions
O	636	637	.

O	638	643	Thank
O	644	647	you
O	647	648	.

O	649	660	Suggestions
O	661	662	:

O	663	670	Passing
O	671	682	information
O	683	687	from
O	688	691	one
O	692	698	object
O	699	701	to
O	702	709	another
O	710	712	is
O	713	715	no
O	716	725	different
O	726	730	with
B-Fram	731	736	Swing
O	737	739	as
O	740	744	with
O	745	750	other
B-PL	751	755	Java
O	756	764	programs
O	764	765	.

O	766	769	You
O	770	773	can
O	774	778	call
O	779	786	methods
O	787	789	or
O	790	802	constructors
O	803	806	and
O	807	811	pass
O	812	823	information
O	824	826	in
O	827	830	via
O	831	841	parameters
O	841	842	.

O	843	844	A
O	845	848	key
O	849	859	difference
O	860	866	though
O	867	869	is
O	870	874	when
O	875	877	to
O	878	882	pass
O	883	894	information
O	894	895	.

O	896	900	With
O	901	906	event
O	907	913	driven
O	914	922	programs
O	922	923	,
O	924	928	this
O	929	931	is
O	932	937	often
O	938	947	triggered
O	948	950	by
O	951	953	an
O	954	959	event
O	959	960	,
O	961	962	a
O	963	971	listener
O	971	972	,
O	973	976	and
O	977	979	so
O	980	983	use
O	984	986	of
O	987	990	the
O	991	999	observer
O	1000	1006	design
O	1007	1014	pattern
O	1015	1017	is
O	1018	1025	comment
O	1025	1026	.

O	1027	1030	For
O	1031	1035	your
O	1036	1044	purposes
O	1044	1045	,
O	1046	1049	the
O	1050	1055	first
O	1056	1062	window
O	1063	1068	could
O	1069	1071	be
O	1072	1073	a
O	1074	1079	modal
O	1080	1086	dialog
O	1087	1091	such
O	1092	1094	as
O	1095	1096	a
B-API	1097	1108	JOptionPane
O	1109	1111	or
O	1112	1113	a
O	1114	1119	modal
B-API	1120	1127	JDialog
O	1128	1133	which
O	1134	1138	will
O	1139	1143	make
O	1144	1146	it
O	1147	1153	easier
O	1154	1156	to
O	1157	1163	figure
O	1164	1167	out
O	1168	1172	when
O	1173	1175	to
O	1176	1180	pass
O	1181	1192	information
O	1192	1193	.

O	1194	1198	When
O	1199	1204	using
O	1205	1206	a
O	1207	1212	modal
O	1213	1219	dialog
O	1219	1220	,
O	1221	1224	all
O	1225	1229	code
O	1230	1234	flow
O	1235	1237	in
O	1238	1241	the
O	1242	1249	calling
O	1250	1257	program
O	1258	1260	is
O	1261	1267	paused
O	1268	1273	while
O	1274	1277	the
O	1278	1284	dialog
O	1285	1287	is
O	1288	1295	visible
O	1295	1296	,
O	1297	1300	and
O	1301	1305	then
O	1306	1313	resumes
O	1314	1318	once
O	1319	1322	the
O	1323	1329	dialog
O	1330	1332	is
O	1333	1335	no
O	1336	1342	longer
O	1343	1350	visible
O	1350	1351	.

O	1352	1354	It
O	1355	1356	'
O	1357	1358	s
O	1359	1363	easy
O	1364	1368	then
O	1369	1371	to
O	1372	1376	have
O	1377	1380	the
O	1381	1388	calling
O	1389	1396	program
O	1397	1402	query
O	1403	1406	the
O	1407	1413	dialog
O	1414	1418	once
O	1419	1423	this
O	1424	1430	occurs
O	1430	1431	,
O	1432	1439	because
O	1440	1446	you'll
O	1447	1451	know
O	1452	1461	precisely
O	1462	1467	where
O	1468	1470	in
O	1471	1475	your
O	1476	1480	code
O	1481	1485	this
O	1486	1490	will
O	1491	1496	occur
O	1496	1497	.

O	1498	1504	You'll
O	1505	1509	want
O	1510	1512	to
O	1513	1518	avoid
O	1519	1528	excessive
O	1529	1536	showing
O	1537	1539	of
O	1540	1549	different
O	1550	1557	windows
O	1558	1560	in
O	1561	1565	your
O	1566	1577	application
O	1578	1580	as
O	1581	1583	it
O	1584	1587	can
O	1588	1595	quickly
O	1596	1599	get
O	1600	1608	annoying
O	1609	1611	to
O	1612	1615	the
O	1616	1620	user
O	1620	1621	.

O	1622	1623	A
O	1624	1627	few
O	1628	1635	dialogs
O	1636	1640	here
O	1641	1644	and
O	1645	1650	there
O	1651	1654	are
O	1655	1657	OK
O	1657	1658	,
O	1659	1669	especially
O	1670	1672	if
O	1673	1676	you
O	1677	1681	need
O	1682	1685	the
O	1686	1697	information
O	1698	1700	to
O	1701	1703	be
O	1704	1709	given
O	1710	1712	in
O	1713	1714	a
O	1715	1720	modal
O	1721	1728	fashion
O	1728	1729	,
O	1730	1733	but
O	1734	1736	in
O	1737	1744	general
O	1745	1747	it
O	1748	1749	'
O	1750	1751	s
O	1752	1758	better
O	1759	1761	to
O	1762	1766	swap
O	1767	1770	GUI
O	1771	1772	"
O	1772	1777	views
O	1777	1778	"
O	1779	1783	when
O	1784	1790	needed
O	1790	1791	,
O	1792	1795	and
O	1796	1797	a
B-API	1798	1808	CardLayout
O	1809	1811	is
O	1812	1816	good
O	1817	1820	for
O	1821	1825	this
O	1825	1826	.

O	1827	1830	But
O	1831	1837	having
O	1838	1842	said
O	1843	1847	this
O	1847	1848	,
O	1849	1857	separate
O	1858	1863	views
O	1864	1867	are
O	1868	1873	often
O	1874	1881	created
O	1882	1884	by
O	1885	1893	separate
O	1894	1901	classes
O	1901	1902	,
O	1903	1905	so
O	1906	1909	the
O	1910	1917	problem
O	1918	1920	of
O	1921	1928	passing
O	1929	1940	information
O	1941	1945	back
O	1946	1949	and
O	1950	1955	forth
O	1956	1963	remains
O	1964	1965	a
O	1966	1973	problem
O	1974	1978	with
O	1979	1986	similar
O	1987	1996	solutions
O	1997	1999	as
O	2000	2009	described
O	2010	2015	above
O	2015	2016	.

O	2017	2029	Specifically
O	2029	2030	,
O	2031	2035	give
O	2036	2040	your
O	2041	2046	Enter
O	2047	2052	class
O	2053	2054	a
O	2055	2062	getText
O	2063	2069	method
O	2070	2074	that
O	2075	2079	will
O	2080	2085	allow
O	2086	2091	other
O	2092	2099	objects
O	2100	2102	to
O	2103	2108	query
O	2109	2111	it
O	2112	2115	for
O	2116	2119	the
O	2120	2125	state
O	2126	2128	of
O	2129	2132	its
B-API	2133	2143	JTextField
O	2144	2145	:
O	2146	2165	@codeSnippetRemoved

O	2166	2170	Also
O	2170	2171	,
O	2172	2178	change
O	2179	2183	your
O	2184	2194	ActualGame
O	2195	2200	class
O	2201	2203	so
O	2204	2208	that
O	2209	2211	it
O	2212	2215	can
O	2216	2222	accept
O	2223	2229	String
O	2230	2241	information
O	2242	2246	when
O	2247	2253	needed
O	2254	2255	:
O	2256	2275	@codeSnippetRemoved

O	2276	2280	e.g.
O	2280	2281	,
O	2282	2301	@codeSnippetRemoved

O	2302	2305	Try
O	2306	2308	to
O	2309	2313	make
O	2314	2323	ActualGam
O	2324	2326	as
O	2327	2328	a
O	2329	2339	underclass
O	2340	2342	of
O	2343	2348	Enter
O	2349	2368	@codeSnippetRemoved

O	0	9	Accessing
O	10	15	views
O	16	20	from
O	21	31	superclass

O	32	33	I
O	34	36	am
O	37	43	trying
O	44	46	to
O	47	57	centralize
O	58	60	my
O	61	65	code
O	66	69	for
O	70	78	handling
O	79	89	navigation
O	90	97	drawers
O	98	102	into
O	103	104	a
O	105	115	superclass
O	116	120	that
O	121	124	all
O	125	135	activities
O	136	142	extend
O	142	143	.

O	144	147	The
O	148	153	super
O	154	159	class
O	160	166	itself
O	167	174	extends
O	175	183	Activity
O	184	187	but
O	188	189	I
O	190	195	can't
O	196	200	seem
O	201	203	to
O	204	210	figure
O	211	214	out
O	215	218	how
O	219	221	to
O	222	228	access
O	229	232	the
O	233	241	subclass
O	242	243	'
O	244	245	s
O	246	250	view
O	251	252	(
O	252	264	findviewbyid
O	265	272	returns
O	273	277	null
O	277	278	)
O	278	279	.

O	280	283	How
O	284	287	can
O	288	289	I
O	290	296	access
O	297	300	the
O	301	306	views
O	307	315	inflated
O	316	318	in
O	319	334	CheckinActivity
O	335	339	from
O	340	350	CommonCode
O	350	351	?

O	352	362	Superclass
O	363	371	oncreate
O	372	373	:
O	374	393	@codeSnippetRemoved

O	394	402	SubClass
O	403	422	@codeSnippetRemoved

O	423	427	What
O	428	429	I
O	430	432	do
O	433	435	is
O	436	440	have
O	441	449	seperate
B-Stan	450	454	XMLs
O	455	458	for
O	459	463	each
O	464	467	sub
O	468	476	activity
O	476	477	,
O	478	481	but
O	482	486	have
O	487	490	all
O	491	494	the
B-Stan	495	498	xml
O	499	502	ids
O	503	505	of
O	506	510	your
O	511	521	navigation
O	522	529	drawers
O	530	532	be
O	533	536	the
O	537	541	same
O	541	542	.

O	543	547	Next
O	547	548	,
O	549	553	when
O	554	557	you
O	558	563	start
O	564	567	any
O	568	576	subclass
O	577	579	of
O	580	584	your
O	585	593	extended
O	594	602	activity
O	602	603	,
O	604	608	pass
O	609	610	a
O	611	617	bundle
O	618	622	with
O	623	626	the
O	627	638	contextView
O	639	641	id
O	642	643	-
O	644	668	R.layout.MY_SUB_ACTIVITY
O	669	670	-
O	671	673	in
O	674	675	a
O	676	682	bundle
O	682	683	,
O	684	687	and
O	688	696	actually
O	697	700	set
O	701	704	the
O	705	712	content
O	713	717	view
O	718	721	for
O	722	726	each
O	727	730	sub
O	731	739	activity
O	740	744	from
O	745	751	within
O	752	756	your
O	757	762	super
O	763	768	class
O	768	769	.

O	770	780	Afterwards
O	780	781	,
O	782	785	you
O	786	789	can
O	790	793	use
B-API	794	806	findViewByID
O	807	809	to
O	810	814	find
O	815	819	your
O	820	827	drawers
O	827	828	,
O	829	832	set
O	833	837	them
O	838	840	up
O	841	843	in
O	844	847	the
O	848	853	super
O	854	859	class
O	859	860	,
O	861	864	and
O	865	869	then
O	870	874	just
O	875	881	handle
O	882	886	your
O	887	895	subclass
O	896	897	'
O	898	899	s
O	900	905	views
O	906	910	from
O	911	917	within
O	918	920	it
O	921	922	'
O	923	924	s
O	925	928	own
O	929	934	class
O	934	935	.

O	936	940	Your
O	941	946	views
O	947	950	are
O	951	957	likely
O	958	967	returning
O	968	972	null
O	972	973	,
O	974	981	because
O	982	986	your
O	987	994	running
O	995	999	your
O	1000	1005	super
O	1006	1011	class
O	1012	1013	'
O	1014	1015	s
B-API	1016	1024	onCreate
O	1025	1031	before
O	1032	1036	your
O	1037	1045	subclass
O	1046	1047	'
O	1048	1049	s
O	1050	1051	-
O	1052	1061	therefore
B-API	1062	1076	setContentView
O	1077	1083	hasn't
O	1084	1088	been
O	1089	1095	called
O	1096	1099	yet
O	1100	1101	(
O	1101	1103	so
B-API	1104	1116	findViewByID
O	1117	1122	won't
O	1123	1127	work
O	1127	1128	)

O	1129	1133	EDIT
O	1134	1135	:

O	1136	1140	Also
O	1140	1141	,
O	1142	1145	you
O	1146	1151	don't
O	1152	1156	HAVE
O	1157	1159	to
O	1160	1164	name
O	1165	1168	all
O	1169	1172	the
O	1173	1183	navigation
O	1184	1190	drawer
O	1191	1194	IDs
O	1195	1198	the
O	1199	1203	same
O	1204	1206	--
O	1207	1208	I
O	1209	1213	just
O	1214	1219	think
O	1220	1222	it
O	1223	1224	'
O	1225	1226	s
O	1227	1233	easier
O	1234	1236	to
O	1237	1240	use
O	1241	1243	an
O	1244	1251	include
O	1252	1255	tag
O	1255	1256	,
O	1257	1259	to
O	1260	1268	minimize
O	1269	1279	redundancy
O	1280	1282	in
O	1283	1287	your
B-Stan	1288	1291	xml
O	1292	1297	files
O	1297	1298	.

O	1299	1302	For
O	1303	1310	Example
O	1311	1312	:

O	1313	1321	Subclass
O	1322	1323	-
O	1324	1343	@codeSnippetRemoved

O	1344	1354	SuperClass
O	1355	1356	:
O	1357	1376	@codeSnippetRemoved

O	0	7	Finding
O	8	13	Angle
O	14	18	from
O	19	28	transform
O	29	35	matrix

O	36	37	I
O	38	42	have
O	43	44	a
O	45	54	transform
O	55	61	matrix
O	62	66	with
O	67	73	values
O	74	78	like
O	79	83	this
O	83	84	.

O	85	94	Transform
O	95	96	:
O	97	99	xx
O	99	100	,
O	101	103	xy
O	103	104	,
O	105	107	yx
O	107	108	,
O	109	111	yy
O	111	112	,
O	113	115	tx
O	115	116	,
O	117	120	and
O	121	123	ty
O	124	136	respectively
O	136	137	.

O	138	141	How
O	142	145	can
O	146	147	I
O	148	152	find
O	153	156	the
O	157	162	angle
O	163	167	from
O	168	171	the
O	172	177	above
O	178	181	set
O	182	184	of
O	185	190	gives
O	191	197	values
O	197	198	.

O	199	208	Referring
O	209	211	to
O	212	215	the
O	216	225	Wikipedia
O	226	230	page
O	231	233	on
O	234	248	transformation
O	249	257	matrices
O	258	259	:
O	260	333	http://en.wikipedia.org/wiki/Transformation_matrix#Affine_transformations
O	333	334	.

O	335	337	tx
O	338	341	and
O	342	344	ty
O	345	348	are
O	349	361	translations
O	361	362	.

O	363	366	The
O	367	376	remaining
O	377	385	elements
O	386	390	make
O	391	393	up
O	394	395	a
O	396	404	rotation
O	405	411	matrix
O	412	413	:

O	414	418	Note
O	419	423	that
O	424	428	this
O	429	431	is
O	432	442	equivalent
O	443	445	to

O	446	451	where
O	451	452	?

O	453	455	is
O	456	459	the
O	460	469	clockwise
O	470	478	rotation
O	479	484	angle
O	484	485	.

O	486	490	From
O	491	495	this
O	496	499	you
O	500	503	get
O	504	508	that
O	509	511	xx
O	512	513	=
O	514	516	yy
O	517	518	=
O	519	522	cos
O	523	524	(
O	524	525	?
O	525	526	)
O	527	530	and
O	531	533	xy
O	534	535	=
O	536	539	-yx
O	540	541	=
O	542	545	sin
O	546	547	(
O	547	548	?
O	548	549	)
O	549	550	.

O	551	554	The
O	555	560	angle
O	561	564	can
O	565	567	be
O	568	578	calculated
O	579	581	as
B-API	582	592	Math.atan2
O	593	594	(
O	594	596	xy
O	596	597	,
O	598	600	xx
O	600	601	)
O	601	602	.

O	603	607	This
O	608	612	will
O	613	617	give
O	618	621	you
O	622	623	a
O	624	630	result
O	631	635	that
O	636	638	is
O	639	646	between
O	647	648	-
O	648	649	?
O	650	653	and
O	653	654	?

O	655	656	.
B-API	657	666	Math.acos
O	667	668	(
O	668	670	xx
O	670	671	)
O	671	672	,
B-API	673	682	Math.acos
O	683	684	(
O	684	686	yy
O	686	687	)
O	687	688	,
B-API	689	698	Math.asin
O	699	700	(
O	700	702	xy
O	702	703	)
O	703	704	,
B-API	705	714	Math.asin
O	715	716	(
O	716	719	-yx
O	719	720	)
O	721	724	and
O	725	726	-
B-API	727	736	Math.asin
O	737	738	(
O	738	740	yx
O	740	741	)
O	742	745	all
O	746	750	work
O	751	754	for
O	755	761	angles
O	762	769	between
O	770	774	zero
O	775	779	than
O	779	780	?

O	781	782	/
O	783	784	2
O	784	785	.

O	786	791	Those
O	792	793	6
O	794	801	numbers
O	802	810	describe
O	811	813	an
O	814	820	affine
O	821	835	transformation
O	835	836	,
O	837	842	which
O	843	845	in
O	846	853	general
O	854	862	consists
O	863	865	of
O	866	867	(
O	867	878	non-uniform
O	878	879	)
O	880	887	scaling
O	887	888	,
O	889	897	rotation
O	898	901	and
O	902	913	translation
O	913	914	.

O	915	918	The
O	919	930	translation
O	931	933	is
O	934	945	represented
O	946	948	by
O	949	950	(
O	950	952	tx
O	952	953	,
O	954	956	ty
O	956	957	)
O	957	958	.

O	959	963	This
O	964	970	leaves
O	971	974	the
O	975	984	remaining
O	985	986	4
O	987	994	numbers
O	994	995	,
O	996	1001	which
O	1002	1006	must
O	1007	1009	be
O	1010	1020	decomposed
O	1021	1025	into
O	1026	1033	scaling
O	1034	1037	and
O	1038	1046	rotation
O	1046	1047	.

O	1048	1051	The
O	1052	1059	easiest
O	1060	1063	way
O	1064	1066	to
O	1067	1069	do
O	1070	1074	this
O	1075	1080	would
O	1081	1083	be
O	1084	1085	a
O	1086	1094	Singular
O	1095	1100	value
O	1101	1114	decomposition
O	1115	1116	:
O	1117	1121	Here
O	1122	1125	you
O	1126	1135	decompose
O	1136	1139	the
O	1140	1146	matrix
O	1147	1149	as
O	1150	1155	M=UDV
O	1155	1156	,
O	1157	1162	where
O	1163	1164	M
O	1165	1167	is
O	1168	1172	your
O	1173	1181	original
O	1182	1188	matrix

O	1189	1190	U
O	1191	1194	and
O	1195	1196	V
O	1197	1200	are
O	1201	1211	orthogonal
O	1212	1220	rotation
O	1221	1229	matrices
O	1229	1230	,
O	1231	1234	and
O	1235	1236	D
O	1237	1239	is
O	1240	1241	a
O	1242	1250	diagonal
O	1251	1257	matrix
O	1257	1258	.

O	1259	1263	This
O	1264	1274	represents
O	1275	1279	your
O	1280	1286	affine
O	1287	1301	transformation
O	1302	1304	as
O	1305	1310	three
O	1311	1316	steps
O	1316	1317	,
O	1318	1321	the
O	1322	1330	rotation
O	1331	1332	V
O	1332	1333	,
O	1334	1342	followed
O	1343	1345	by
O	1346	1353	scaling
O	1354	1355	D
O	1355	1356	,
O	1357	1360	and
O	1361	1369	rotation
O	1370	1371	U
O	1371	1372	.

O	1373	1376	The
O	1377	1380	two
O	1381	1388	entries
O	1389	1391	of
O	1392	1393	D
O	1394	1397	are
O	1398	1401	the
O	1402	1405	two
O	1406	1413	scaling
O	1414	1426	coefficients
O	1427	1430	for
O	1431	1432	x
O	1433	1436	and
O	1437	1438	y
O	1438	1439	.

O	1440	1444	From
O	1445	1446	U
O	1447	1450	and
O	1451	1452	V
O	1453	1456	you
O	1457	1460	can
O	1461	1467	obtain
O	1468	1471	the
O	1472	1480	rotation
O	1481	1487	angles
O	1487	1488	,
O	1489	1491	as
O	1492	1501	described
O	1502	1504	by
O	1505	1508	Mad
O	1509	1518	Physicist
O	1518	1519	.

O	1520	1523	The
O	1524	1529	total
O	1530	1538	rotation
O	1539	1541	is
O	1542	1545	the
O	1546	1549	sum
O	1550	1552	of
O	1553	1557	both
O	1557	1558	.

O	1559	1561	If
O	1562	1564	it
O	1565	1566	'
O	1567	1568	s
O	1569	1573	only
O	1574	1579	about
O	1580	1583	the
O	1584	1592	rotation
O	1592	1593	,
O	1594	1597	one
O	1598	1601	can
O	1602	1611	transform
O	1612	1615	the
O	1616	1622	vector
O	1623	1624	(
O	1624	1625	1
O	1625	1626	,
O	1627	1628	0
O	1628	1629	)
O	1630	1635	using
O	1636	1639	the
O	1640	1645	given
O	1646	1652	matrix
O	1652	1653	,
O	1654	1657	and
O	1658	1665	compute
O	1666	1669	the
O	1670	1675	angle
O	1676	1683	between
O	1684	1687	the
O	1688	1697	resulting
O	1698	1704	vector
O	1705	1708	and
O	1709	1712	the
O	1713	1719	x-axis
O	1719	1720	,
O	1721	1723	as
O	1724	1731	already
O	1732	1741	mentioned
O	1742	1744	in
O	1745	1748	the
O	1749	1756	comment
O	1757	1759	to
O	1760	1763	the
O	1764	1772	original
O	1773	1781	question

O	0	3	How
O	4	7	can
O	8	9	I
O	10	14	make
O	15	19	this
O	20	34	transformation
O	35	37	of
O	38	40	an
O	41	46	image
O	47	49	in
B-Plat	50	57	Android
O	58	63	using
B-PL	64	68	Java

O	69	71	Is
O	72	77	there
O	78	79	a
O	80	83	way
O	84	86	to
O	87	94	process
O	95	97	an
O	98	103	image
O	104	105	/
O	106	114	drawable
O	115	117	in
B-Plat	118	125	Android
O	126	127	(
B-PL	127	131	Java
O	131	132	)
O	133	135	to
O	136	140	make
O	141	144	the
O	145	149	last
O	150	151	X
O	152	158	pixels
O	159	161	of
O	162	165	the
O	166	171	image
O	172	179	stretch
O	180	182	or
O	183	189	repeat
O	190	192	to
O	193	196	the
O	197	203	bottom
O	204	206	of
O	207	210	the
O	211	217	screen
O	217	218	.

O	219	220	I
O	221	226	would
O	227	231	like
O	232	234	to
O	235	239	know
O	240	242	if
O	243	247	this
O	248	250	is
O	251	259	possible
O	260	262	to
O	263	270	achieve
O	271	274	and
O	275	277	if
O	278	283	there
O	284	286	is
O	287	288	a
O	289	293	name
O	294	297	for
O	298	302	this
O	303	309	effect
O	310	312	or
O	313	321	existing
O	322	331	algorithm
O	331	332	.

O	333	338	Thank
O	339	342	you
O	343	345	in
O	346	353	advance
O	353	354	.

O	355	359	Just
O	360	366	please
O	367	371	note
O	372	376	that
O	377	378	I
O	379	381	am
O	382	387	aware
O	388	390	of
B-Stan	391	397	9patch
O	398	404	images
O	405	408	and
O	409	411	it
O	412	414	is
O	415	418	not
O	419	422	the
O	423	426	way
O	427	428	I
O	429	433	want
O	434	436	to
O	437	439	go
O	440	444	with
O	444	445	,
O	446	447	I
O	448	458	explicitly
O	459	463	need
O	464	466	to
O	467	472	apply
O	473	477	this
O	478	480	in
O	481	485	code
O	485	486	.

O	487	492	Thank
O	493	496	you
O	497	499	in
O	500	507	advance
O	507	508	,
O	509	515	bellow
O	516	518	is
O	519	521	an
O	522	527	image

O	528	531	You
O	532	535	can
O	536	540	take
O	541	542	a
O	543	548	strip
O	549	553	from
O	554	557	the
O	558	563	image
O	564	567	and
O	568	571	use
O	572	578	repeat
O	579	583	like
O	584	588	this

O	589	593	EDIT
O	594	595	:
O	596	598	If
O	599	602	you
O	603	609	wanted
O	610	626	programmatically

O	627	629	1-
O	630	634	crop
O	635	639	from
O	640	643	the
O	644	649	image
O	650	655	using
O	656	660	this
O	661	665	code
O	666	670	from
O	671	674	cut
O	675	678	the
O	679	686	portion
O	687	689	of
B-Stan	690	696	bitmap
O	697	698	:

O	699	701	2-
O	702	705	The
O	706	714	returned
B-Stan	715	721	bitmap
O	721	722	,
O	723	730	convert
O	731	733	it
O	734	736	to
B-API	737	751	bitmapdrawable
O	752	753	:

O	754	757	The
O	758	762	best
O	763	769	option
O	770	772	to
O	773	780	achieve
O	781	785	that
O	786	788	is
O	789	794	using
O	795	796	a
O	797	801	Draw
B-Stan	802	809	9-patch
O	810	815	image

O	816	825	Tutorials
O	826	827	:

B-Plat	828	835	Android
B-Stan	836	837	9
I-Stan	838	843	Patch
O	844	849	Image
O	850	858	Tutorial

B-Fram	859	869	Draw9patch
O	870	878	Tutorial
O	879	880	[
O	881	883	HD
O	884	885	]

O	886	894	Possible
O	895	904	algorithm
O	905	906	:

O	907	908	1
O	908	909	)
O	910	913	get
B-Stan	914	920	Bitmap
O	921	927	object
O	928	930	of
O	931	935	your
O	936	941	image

O	942	943	2
O	943	944	)
O	945	949	read
O	950	955	image
O	956	962	pixels
O	963	964	(
B-API	964	980	bitmap.getPixels
O	981	982	(
O	982	985	...
O	985	986	)
O	987	993	method
O	993	994	)
O	995	999	into
O	1000	1002	an
O	1003	1006	int
O	1007	1009	[]
O	1010	1015	array

O	1016	1017	3
O	1017	1018	)
O	1019	1025	create
O	1026	1027	a
O	1028	1033	blank
B-Stan	1034	1040	bitmap
O	1041	1043	of
O	1044	1051	desired
O	1052	1058	height

O	1059	1060	4
O	1060	1061	)
O	1062	1065	use
B-API	1066	1077	setPixels()
O	1078	1084	method
O	1085	1087	to
O	1088	1092	copy
O	1093	1100	initial
B-Stan	1101	1107	bitmap
O	1108	1112	data
O	1113	1115	to
O	1116	1117	a
O	1118	1121	new
O	1122	1125	one

O	1126	1127	5
O	1127	1128	)
O	1129	1132	use
O	1133	1137	same
O	1138	1144	method
O	1145	1147	to
O	1148	1152	copy
O	1153	1157	last
O	1158	1162	line
O	1163	1165	to
O	1166	1169	new
B-Stan	1170	1176	bitmap
O	1177	1179	as
O	1180	1184	many
O	1185	1190	times
O	1191	1193	as
O	1194	1197	you
O	1198	1202	want
O	1203	1204	(
O	1204	1207	use
O	1208	1214	offset
O	1215	1224	parameter
O	1225	1231	wisely
O	1231	1232	)

O	1233	1237	This
O	1238	1244	sounds
O	1245	1248	too
O	1249	1260	complicated
O	1261	1264	for
O	1265	1269	such
O	1270	1271	a
O	1272	1277	small
O	1278	1282	task
O	1282	1283	,
O	1284	1287	but
O	1288	1291	you
O	1292	1297	asked
O	1298	1301	for
O	1302	1303	a
O	1304	1307	way
O	1308	1310	of
O	1311	1320	acheiving
O	1321	1323	it
O	1324	1340	programmatically
O	1340	1341	,
O	1342	1344	so
O	1345	1349	here
O	1350	1353	you
O	1354	1356	go

O	1357	1361	EDIT
O	1362	1368	Easier
O	1369	1372	way
O	1373	1376	for
O	1377	1381	your
O	1382	1391	situation
O	1392	1393	:

O	1394	1398	Make
O	1399	1402	use
O	1403	1405	of
B-API	1406	1427	Shader.TileMode.CLAMP

O	1428	1429	1
O	1429	1430	)
O	1431	1437	Create
B-API	1438	1452	BitmapDrawable
O	1453	1457	from
O	1458	1462	your
B-Stan	1463	1469	bitmap
O	1470	1472	or
O	1473	1477	from
O	1478	1487	resources

O	1488	1489	2
O	1489	1490	)
O	1491	1494	Use
B-API	1495	1507	setTileModeY
O	1508	1509	(
B-API	1509	1522	TilMode.CLAMP
O	1523	1525	);

O	0	8	Decimals
O	9	13	such
O	14	16	as
O	17	20	0.1
O	21	24	and
O	25	28	0.2
O	29	34	equal
O	35	54	0.30000000000000004

O	55	56	I
O	57	61	have
O	62	63	a
O	64	70	button
O	71	75	that
O	75	76	,
O	77	81	when
O	82	83	I
O	84	89	press
O	90	92	it
O	93	94	I
O	95	99	want
O	100	102	it
O	103	105	to
O	106	112	update
O	113	114	a
O	115	120	label
O	121	122	(
O	122	127	which
O	128	134	starts
O	135	137	at
O	138	141	0.0
O	141	142	)
O	143	145	to
O	146	147	+
O	148	151	0.1

O	152	153	I
O	154	157	get
O	158	161	the
O	162	171	following
O	172	173	:

O	174	177	The
O	178	182	code
O	183	184	I
O	185	189	have
O	190	192	is
O	193	194	:

O	195	196	I
O	197	207	understand
O	208	212	that
O	213	216	the
O	217	220	way
O	221	230	computers
O	231	235	work
O	236	240	with
O	241	248	numbers
O	249	252	are
O	253	256	not
O	257	264	exactly
O	265	268	0.3
O	269	272	but
O	273	277	more
O	278	282	like
O	283	292	0.2999999
O	293	296	...

O	297	298	I
O	299	303	just
O	304	310	wanted
O	311	312	a
O	313	316	way
O	317	319	to
O	320	325	round
O	326	329	the
O	330	336	number
O	337	339	so
O	340	341	I
O	342	345	can
O	346	352	easily
O	353	356	add
O	357	360	0.1
O	361	362	(
O	362	364	to
O	364	365	)
O	366	369	0.9
O	370	378	together
O	379	386	without
O	387	388	a
O	389	393	mass
O	394	396	of
O	397	404	decimal
O	405	411	places
O	411	412	.

O	413	414	I
O	415	419	have
O	420	425	tried
O	426	432	adding

O	433	441	although
O	442	444	it
O	445	451	rounds
O	452	454	it
O	455	464	downwards
O	465	467	to
O	468	469	0
O	470	472	so
O	473	476	the
O	477	482	label
O	483	490	doesn't
O	491	497	update
O	497	498	.

O	499	503	Some
O	504	512	decimals
O	513	519	simply
O	520	525	can't
O	526	528	be
O	529	540	represented
O	541	543	by
O	544	545	a
O	546	551	float
O	552	554	or
O	555	561	double
O	562	564	in
O	565	569	such
O	570	573	way
O	574	577	the
O	578	581	the
O	582	592	difference
O	593	595	is
O	596	601	small
O	602	608	enough
O	608	609	.

O	610	616	Simply
O	617	624	because
O	625	626	a
O	627	635	computer
O	636	640	uses
O	641	644	the
O	645	651	binary
O	652	658	number
O	659	665	system
O	665	666	.

O	667	670	For
O	671	679	instance
O	680	681	a
O	682	690	computer
O	691	695	will
O	696	702	always
O	703	707	fail
O	708	710	to
O	711	720	represent
O	721	722	1
O	723	724	/
O	725	728	3rd
O	728	729	.

O	730	733	You
O	734	737	can
O	738	741	use
O	742	743	a
O	744	750	format
O	750	751	,
O	752	754	to
O	755	760	round
O	761	764	the
O	765	771	number
O	772	774	to
O	775	778	one
O	779	786	decimal
O	787	792	using
O	793	796	the
O	797	806	following
O	807	811	code
O	812	813	:

O	814	816	If
O	817	820	you
O	821	825	want
O	826	831	exact
O	832	839	decimal
O	840	848	addition
O	848	849	,
O	850	853	you
O	854	858	need
O	859	861	to
O	862	865	use
B-API	866	876	BigDecimal
O	877	879	in
O	880	885	place
O	886	888	of
O	889	895	double
O	895	896	.

O	0	8	Changing
O	9	15	Object
O	16	27	initializer
O	28	29	/
O	30	41	constructor
O	42	51	depending
O	52	54	on
O	55	61	method
O	62	67	input

O	68	70	So
O	71	72	I
O	73	75	am
O	76	82	trying
O	83	85	to
O	86	91	avoid
O	92	97	using
O	98	107	duplicate
O	108	112	code
O	112	113	.

O	114	116	At
O	117	120	the
O	121	127	moment
O	128	129	I
O	130	134	have
O	135	142	several
O	143	148	lists
O	149	154	which
O	155	162	contain
O	163	170	Strings
O	171	172	;
O	173	176	one
O	177	181	list
O	182	184	is
O	185	191	called
O	192	193	"
O	193	199	images
O	199	200	"
O	201	204	and
O	205	208	the
O	209	214	other
O	215	216	"
O	216	222	videos
O	222	223	"
O	224	227	etc
O	227	228	.

O	229	234	These
O	235	240	lists
O	241	248	contain
O	249	252	the
O	253	263	properties
O	264	266	of
O	267	270	the
O	271	278	content
O	279	282	and
O	283	287	they
O	288	291	are
O	292	294	in
O	295	296	a
O	297	303	linked
O	304	308	list
O	309	316	because
O	317	321	that
O	322	333	information
O	334	337	was
O	338	342	read
O	343	347	from
O	348	349	a
O	350	354	text
O	355	359	file
O	359	360	.

O	361	362	I
O	363	365	am
O	366	372	trying
O	373	375	to
O	376	378	go
O	379	386	through
O	387	392	these
O	393	398	lists
O	399	402	and
O	403	409	create
O	410	415	image
O	416	417	/
O	418	423	video
O	424	431	objects
O	432	434	to
O	435	440	place
O	441	443	in
O	444	451	another
O	452	458	object
O	459	460	(
O	460	465	later
O	466	468	on
O	468	469	)
O	469	470	.

O	471	473	At
O	474	477	the
O	478	484	moment
O	485	486	I
O	487	491	have
O	492	493	a
O	494	500	method
O	501	520	@codeSnippetRemoved

O	521	527	inside
O	528	530	of
O	531	533	it
O	534	537	how
O	538	540	do
O	541	542	I
O	543	549	change
O	550	553	the
O	554	560	object
O	561	573	declarations
O	574	577	etc
O	578	587	depending
O	588	590	on
O	591	594	the
O	595	599	name
O	600	602	of
O	603	606	the
O	607	611	list
O	612	616	that
O	617	620	was
O	621	627	passed
O	628	635	through
O	635	636	.

O	637	640	For
O	641	648	example
O	649	650	:
O	651	653	If
O	654	655	I
O	656	660	call
O	661	664	the
O	665	671	method
O	672	676	with
O	677	680	the
O	681	686	image
O	687	691	list
O	692	693	:
O	694	713	@codeSnippetRemoved

O	714	715	I
O	716	720	want
O	721	724	the
O	725	733	function
O	734	736	to
O	737	743	create
O	744	749	image
O	750	757	objects
O	758	759	:
O	760	779	@codeSnippetRemoved

O	780	783	And
O	784	786	if
O	787	788	I
O	789	795	passed
O	796	802	Videos
O	803	807	list
O	808	809	:
O	810	829	@codeSnippetRemoved

O	830	831	I
O	832	836	want
O	837	840	the
O	841	849	function
O	850	852	to
O	853	859	create
O	860	865	video
O	866	873	objects
O	874	875	:
O	876	895	@codeSnippetRemoved

O	896	901	Sorry
O	902	904	if
O	905	909	this
O	910	912	is
O	913	919	worded
O	920	925	badly
O	925	926	,
O	927	928	I
O	929	933	find
O	934	936	it
O	937	941	hard
O	942	944	to
O	945	955	articulate
O	956	960	this
O	961	969	question
O	969	970	.

O	971	972	I
O	973	977	also
O	978	988	understand
O	989	992	the
O	993	996	the
O	997	1004	concept
O	1005	1007	of
O	1008	1020	polymorphism
O	1021	1022	;
O	1023	1024	I
O	1025	1029	just
O	1030	1035	don't
O	1036	1039	see
O	1040	1042	it
O	1043	1049	viable
O	1050	1053	for
O	1054	1057	the
O	1058	1065	content
O	1066	1072	object
O	1073	1075	to
O	1076	1078	do
O	1079	1083	this
O	1084	1087	job
O	1088	1089	(
O	1089	1091	of
O	1092	1099	reading
O	1100	1103	the
O	1104	1110	string
O	1111	1114	etc
O	1114	1115	)
O	1116	1118	as
O	1119	1122	the
O	1123	1129	object
O	1130	1132	is
O	1133	1140	created
O	1141	1150	depending
O	1151	1154	the
O	1155	1163	contents
O	1164	1166	of
O	1167	1170	the
O	1171	1175	list
O	1175	1176	.

O	1177	1184	private
O	1185	1189	void
O	1190	1201	loadContent
O	1202	1203	(
O	1203	1207	List
O	1208	1214	String
O	1215	1222	content
O	1222	1223	,
O	1224	1227	int
O	1228	1239	contentType
O	1239	1240	)

O	1241	1244	You
O	1245	1250	could
O	1251	1255	pass
O	1256	1258	in
O	1259	1261	an
O	1262	1269	integer
O	1270	1272	as
O	1273	1275	an
O	1276	1278	id
O	1279	1282	for
O	1283	1286	the
O	1287	1291	type
O	1292	1294	of
O	1295	1300	media
O	1301	1304	you
O	1305	1308	are
O	1309	1315	giving
O	1316	1318	it
O	1318	1319	.

O	1320	1323	You
O	1324	1329	could
O	1330	1334	then
O	1335	1338	use
O	1339	1341	an
O	1342	1344	if
O	1345	1346	/
O	1347	1351	else
O	1352	1361	statement
O	1362	1364	do
O	1365	1369	only
O	1370	1372	do
O	1373	1380	certain
O	1381	1387	things
O	1388	1391	for
O	1392	1399	certain
O	1400	1407	content
O	1408	1413	types
O	1413	1414	.

O	1415	1418	You
O	1419	1426	brought
O	1427	1429	up
O	1430	1433	the
O	1434	1441	subject
O	1442	1444	of
O	1445	1457	Polymorphism
O	1457	1458	.

O	1459	1463	This
O	1464	1472	scenario
O	1473	1478	would
O	1479	1481	be
O	1482	1483	a
O	1484	1488	good
O	1489	1498	candidate
O	1499	1501	to
O	1502	1513	demonstrate
O	1514	1518	your
O	1519	1532	understanding
O	1533	1535	of
O	1536	1539	how
O	1540	1542	it
O	1543	1548	works
O	1548	1549	.

O	1550	1553	You
O	1554	1559	could
O	1560	1566	create
O	1567	1569	an
O	1570	1578	abstract
O	1579	1584	class
O	1585	1590	named
O	1591	1596	Media
O	1597	1600	and
O	1601	1605	have
O	1606	1609	one
O	1610	1616	method
O	1617	1624	defined
O	1625	1630	named
O	1631	1639	Render()
O	1639	1640	.

O	1641	1645	Then
O	1646	1652	extend
O	1653	1656	the
O	1657	1662	Media
O	1663	1668	class
O	1669	1671	to
O	1672	1675	two
O	1676	1686	subclasses
O	1686	1687	,
O	1688	1698	ImageMedia
O	1699	1702	and
O	1703	1713	VideoMedia
O	1713	1714	.

O	1715	1720	Where
O	1721	1725	each
O	1726	1734	subclass
O	1735	1742	extends
O	1743	1748	class
O	1749	1754	Media
O	1754	1755	,
O	1756	1760	they
O	1761	1767	should
O	1768	1776	override
O	1777	1780	the
O	1781	1787	method
O	1788	1796	Render()
O	1797	1801	with
O	1802	1807	their
O	1808	1811	own
O	1812	1826	implementation
O	1827	1829	of
O	1830	1833	how
O	1834	1836	to
O	1837	1843	render
O	1844	1847	the
O	1848	1855	content
O	1855	1856	.

O	1857	1859	In
O	1860	1863	the
O	1864	1867	end
O	1868	1871	you
O	1872	1875	can
O	1876	1880	just
O	1881	1885	have
O	1886	1887	a
O	1888	1892	List
O	1893	1895	of
O	1896	1900	type
O	1901	1906	Media
O	1907	1911	like
O	1912	1916	this
O	1917	1918	:
O	1919	1923	List
O	1924	1929	Media
O	1930	1933	and
O	1934	1941	iterate
O	1942	1946	over
O	1947	1949	it
O	1950	1955	while
O	1956	1963	calling
O	1964	1967	the
O	1968	1976	Render()
O	1977	1983	method
O	1984	1986	on
O	1987	1991	each
O	1991	1992	.

O	1993	1995	In
O	1996	2000	this
O	2001	2004	way
O	2005	2008	you
O	2009	2015	impose
O	2016	2027	polymorphic
O	2028	2037	behaviour
O	2038	2041	and
O	2042	2049	greatly
O	2050	2058	simplify
O	2059	2063	your
O	2064	2068	code
O	2068	2069	.

O	0	5	using
O	6	7	a
O	8	14	button
O	15	17	to
O	18	22	load
O	23	24	a
O	25	32	picture
O	33	37	into
O	38	40	my
O	41	52	application
O	53	56	and
O	57	59	to
O	60	61	a
O	62	68	server
O	69	70	(
B-PL	70	73	php
O	73	74	)
O	75	78	and
O	79	83	save
O	84	87	the
O	88	92	link
O	93	95	in
O	96	104	database

O	105	106	I
O	107	109	am
O	110	120	developing
O	121	123	an
B-PL	124	128	java
B-Fram	129	138	net-beans
O	139	150	application
O	150	151	,
O	152	153	I
O	154	158	wish
O	159	161	to
O	162	165	use
O	166	167	a
O	168	174	button
O	175	177	to
O	178	182	load
O	183	184	a
O	185	192	picture
O	193	195	to
O	196	198	my
O	199	210	application
O	211	214	and
O	215	217	to
O	218	219	a
O	220	226	server
O	227	228	(
B-PL	228	231	php
O	231	232	)
O	233	236	and
O	237	241	save
O	242	245	the
O	246	250	link
O	251	253	to
O	254	256	my
O	257	265	database
O	265	266	.

O	267	271	Wish
O	272	275	any
O	276	279	one
O	280	285	could
O	286	290	help
O	290	291	.

B-Stan	0	4	REST
O	5	19	Authentication
O	20	24	With
B-Fram	25	31	Spring
O	32	35	And
B-Fram	36	42	Spring
O	43	51	Security

O	52	53	I
O	54	58	want
O	59	66	develop
O	67	68	a
O	69	77	RESTfull
O	78	81	web
O	82	89	service
O	90	94	with
O	95	109	authentication
O	110	115	using
B-Fram	116	122	Spring
O	123	126	and
B-Fram	127	133	Spring
O	134	142	Security
O	142	143	.

O	144	147	All
O	148	150	my
O	151	156	users
O	157	161	will
O	162	164	be
O	165	171	stored
O	172	174	in
O	175	178	the
O	179	181	DB
O	182	186	with
O	187	189	an
O	190	199	encrypted
O	200	208	password
O	209	212	and
O	213	217	role
O	217	218	.

O	219	222	The
O	223	230	session
O	231	237	should
O	238	240	be
O	241	247	stored
O	248	250	in
O	251	254	the
O	255	262	context
O	263	268	until
O	269	272	the
O	273	280	session
O	281	283	is
O	284	292	timedout
O	293	295	or
O	296	302	logged
O	303	306	out
O	307	309	to
O	310	315	allow
O	316	327	consumption
O	328	330	of
O	331	336	other
O	337	348	webservices
O	348	349	.

O	350	352	If
O	353	360	someone
O	361	364	can
O	365	369	help
O	370	372	me
O	373	378	would
O	379	381	be
O	382	387	great
O	387	388	.

O	389	395	Thanks

O	396	399	You
O	400	404	need
O	405	407	to
O	408	414	create
O	415	416	a
B-Fram	417	423	spring
O	424	432	security
O	433	440	context
O	441	444	and
O	445	452	include
O	453	455	in
O	456	460	your
O	461	464	web
O	465	476	application
O	476	477	.

O	478	481	and
O	482	485	you
O	486	489	can
O	490	494	have
O	495	503	decision
O	504	510	voters
O	511	520	depending
O	521	523	on
O	524	528	your
O	529	532	URL
O	533	535	or
O	536	541	other
O	541	542	.

O	543	546	You
O	547	550	can
O	551	555	have
O	556	560	your
O	561	564	own
O	565	571	custom
O	572	586	authentication
O	587	592	entry
O	593	598	point
O	599	602	and
O	603	606	add
O	607	611	your
O	612	616	code
O	616	617	.

O	618	622	More
O	623	630	details
O	631	636	could
O	637	639	be
O	640	645	found
O	646	650	here
O	650	651	.

O	652	656	Have
O	657	658	a
O	659	663	look
O	664	666	at
O	667	673	Jersey
O	674	678	with
B-Fram	679	685	Spring
O	686	689	and
O	690	693	its
B-API	694	715	ContextSecurityFilter
O	715	716	,
O	717	718	I
O	719	721	do
O	722	725	not
O	726	733	suggest
O	734	736	to
O	737	740	use
B-Fram	741	747	spring
O	748	756	security
O	756	757	.

O	758	760	If
O	761	764	you
O	765	769	make
O	770	771	a
O	772	776	good
O	777	790	Authorization
O	791	794	try
O	795	797	to
O	798	801	use
O	802	815	@RolesAllowed
O	816	822	method
O	822	823	.

B-Fram	0	4	JAXB
O	5	15	Marshaling
O	16	23	Doubled
B-Stan	24	27	XML
O	28	32	data

O	33	37	When
O	38	41	I'm
O	42	48	saving
O	49	50	2
O	51	58	objects
O	59	60	4
O	61	64	are
O	65	73	actually
O	74	79	saved
O	80	81	(
O	81	88	doubled
O	88	89	)
O	89	90	.

O	91	94	Got
O	95	101	object
O	102	103	A
O	104	107	and
O	108	109	B
O	110	113	and
O	114	121	instead
O	122	124	of
O	125	131	output
B-Stan	132	135	XML
O	136	140	file
O	141	146	where
O	147	150	are
O	151	156	saved
O	157	159	AB
O	160	161	I
O	162	165	got
B-Stan	166	169	XML
O	170	175	where
O	176	178	is
O	179	183	ABAB
O	183	184	.

O	185	187	My
O	188	195	Classes
O	196	197	:
O	198	217	@codeSnippetRemoved

O	218	222	This
O	223	225	is
O	226	229	the
O	230	237	wrapper
O	238	239	:
O	240	259	@codeSnippetRemoved

O	260	263	and
O	264	268	this
O	269	271	is
O	272	278	method
O	279	283	used
O	284	286	in
O	287	295	main-app
O	296	297	:
O	298	317	@codeSnippetRemoved

O	318	320	My
O	321	327	output
O	328	330	is
O	331	332	:
O	333	352	@codeSnippetRemoved

O	353	356	But
O	357	363	should
O	364	366	be
O	367	368	:
O	369	388	@codeSnippetRemoved

O	389	392	Can
O	393	396	you
O	397	401	help
O	402	404	me
O	405	411	figure
O	412	416	this
O	417	420	out
O	420	421	?

O	422	423	I
O	424	431	believe
O	432	435	the
O	436	447	annotations
O	448	450	on
B-Fram	451	458	Wrapper
O	459	462	are
O	463	466	the
O	467	474	problem
O	474	475	.
O	476	483	because
O	484	487	you
O	488	491	are
O	492	502	explicitly
O	503	513	annotating
O	514	517	the
O	518	525	private
O	526	532	member
O	533	537	with
B-API	538	548	XmlElement
O	548	549	,
O	550	553	you
O	554	557	are
O	558	566	actually
O	567	574	getting
O	575	581	output
O	582	586	from
O	587	591	both
O	592	595	the
O	596	603	private
O	604	610	member
O	611	614	and
O	615	618	the
O	619	625	public
O	626	632	getter
O	633	634	/
O	635	641	setter
O	642	649	methods
O	649	650	.

O	651	653	if
O	654	657	you
O	658	662	want
O	663	665	to
O	666	669	use
O	670	675	field
O	676	681	level
O	682	688	access
O	688	689	,
O	690	698	annotate
O	699	702	the
B-API	703	710	Wrapper
I-API	711	716	class
O	717	721	with
O	722	738	@XmlAccessorType
O	739	740	(
B-API	740	759	XmlAccessType.FIELD
O	759	760	)
O	760	761	.
O	762	771	otherwise
O	771	772	,
O	773	777	move
O	778	782	your
B-API	783	793	XmlElement
O	794	804	annotation
O	805	807	to
O	808	811	the
O	812	818	getter
O	819	825	method
O	825	826	.

O	0	3	How
O	4	6	to
O	7	8	"
O	8	14	append
O	14	15	"
O	16	19	new
O	20	25	field
O	26	27	/
O	28	32	data
O	33	37	into
O	38	40	an
O	41	47	object
O	48	55	without
O	56	64	creating
O	65	66	a
O	67	70	new
O	71	76	class
O	77	80	nor
O	81	90	modifying
O	91	94	the
O	95	100	class
O	100	101	?

O	102	103	I
O	104	108	have
O	109	110	a
O	111	117	method
O	118	123	which
O	124	134	calculates
O	135	137	an
O	138	145	integer
O	146	149	for
O	150	155	every
O	156	159	row
O	160	162	in
O	163	164	a
O	165	169	bean
O	170	178	MyPeriod
O	178	179	.

O	180	181	I
O	182	187	don't
O	188	192	want
O	193	195	to
O	196	202	change
O	203	206	the
O	207	212	class
O	213	221	MyPeriod
O	221	222	,
O	223	225	to
O	226	232	create
O	233	234	a
O	235	238	new
O	239	244	class
O	245	247	or
O	248	250	to
O	251	255	have
O	256	259	two
O	260	265	lists
O	266	269	but
O	270	271	I
O	272	276	need
O	277	279	to
O	280	286	return
O	287	291	some
O	292	296	list
O	297	302	which
O	303	311	contains
O	312	315	the
O	316	320	list
O	321	323	of
O	324	332	MyPeriod
O	333	337	with
O	338	339	a
O	340	343	new
O	344	350	column
O	350	351	.

O	352	356	What
O	357	359	is
O	360	363	the
O	364	368	ways
O	369	371	to
O	372	376	deal
O	377	381	with
O	382	386	this
O	387	392	issue
O	392	393	?

O	394	413	@codeSnippetRemoved

O	414	417	You
O	418	422	have
O	423	429	listed
O	430	433	the
O	434	438	good
O	439	451	alternatives
O	452	453	-
O	454	462	creating
O	463	464	a
O	465	468	new
O	469	474	class
O	475	478	and
O	479	487	changing
O	488	496	MyPeriod
O	496	497	.

O	498	500	If
O	501	504	you
O	505	509	want
O	510	511	a
O	512	515	bad
O	516	519	one
O	519	520	,
O	521	524	you
O	525	530	could
O	531	537	return
O	538	540	an
O	541	546	array
O	546	547	,
O	548	551	and
O	552	555	let
O	556	560	your
O	561	568	callers
O	569	575	assume
O	576	580	that
O	581	583	it
O	584	587	has
O	588	591	two
O	592	597	items
O	598	599	:
O	600	619	@codeSnippetRemoved

O	620	622	If
O	623	626	you
O	627	631	know
O	632	636	that
O	637	640	all
O	641	648	periods
O	649	651	in
O	652	656	List
O	657	665	MyPeriod
O	666	669	are
O	670	679	different
O	679	680	,
O	681	684	and
O	685	689	also
O	690	694	that
O	695	703	MyPeriod
O	704	714	implements
O	715	721	robust
B-API	722	732	hashCode()
O	733	736	and
B-API	737	745	equals()
O	745	746	,
O	747	750	you
O	751	756	could
O	757	760	use
B-API	761	774	LinkedHashMap
O	775	783	MyPeriod
O	783	784	,
O	785	792	Integer
O	793	795	to
O	796	805	establish
O	806	810	your
O	811	819	mappings
O	820	821	:
O	822	841	@codeSnippetRemoved

O	842	844	If
O	845	848	you
O	849	852	are
O	853	858	using
B-Fram	859	863	JDK7
O	864	866	or
O	867	872	later
O	872	873	,
O	874	877	you
O	878	881	can
O	882	885	use
B-API	886	902	javafx.util.Pair
O	903	904	:
O	905	924	@codeSnippetRemoved

O	925	931	public
B-API	932	935	Map
O	936	944	MyPeriod
O	944	945	,
B-API	946	953	Integer
O	954	967	bindNewColumn
O	968	969	(
B-API	969	973	List
O	974	982	MyPeriod
O	983	990	periods
O	990	991	)
O	992	993	{
B-API	994	997	Map
O	998	1006	MyPeriod
O	1006	1007	,
B-API	1008	1015	Integer
O	1016	1019	map
O	1020	1021	=
O	1022	1025	new
B-API	1026	1033	HashMap
O	1034	1042	MyPeriod
O	1042	1043	,
O	1044	1051	Integer
O	1052	1053	(
O	1053	1055	);
O	1056	1059	for
O	1060	1061	(
O	1061	1069	MyPeriod
O	1070	1076	period
O	1077	1078	:
O	1079	1086	periods
O	1086	1087	)
O	1088	1089	{
B-API	1090	1097	map.put
O	1098	1099	(
O	1099	1105	period
O	1105	1106	,
O	1107	1118	calculation
O	1119	1120	(
O	1120	1126	period
O	1127	1130	));
O	1131	1132	}
O	1133	1139	return
O	1140	1143	map
O	1144	1145	;
O	1146	1147	}

O	1148	1152	With
O	1153	1154	a
O	1155	1159	Pair
O	1159	1160	.

O	1161	1180	@codeSnippetRemoved

B-Stan	0	4	data
I-Stan	5	11	access
I-Stan	12	18	object
O	19	26	pattern
O	27	31	with
B-Stan	32	40	abstract
I-Stan	41	50	factories
O	50	51	,
O	52	60	creation
O	61	65	over
O	66	73	generic
O	74	79	types

O	80	83	I'm
O	84	94	developing
O	95	96	a
O	97	105	database
O	106	117	application
O	118	121	for
B-Plat	122	129	android
O	130	143	devices.First
O	144	149	thing
O	150	151	I
O	152	156	need
O	157	159	to
O	160	162	do
O	163	165	is
O	166	174	creating
O	175	178	the
O	179	183	data
O	184	190	access
O	191	200	layer.For
O	201	205	this
O	206	207	I
O	208	212	want
O	213	215	to
O	216	219	use
B-Stan	220	231	DAO-Pattern
O	232	236	with
B-Stan	237	245	abstract
I-Stan	246	255	factories
O	255	256	.

O	257	260	For
O	261	264	all
B-Stan	265	269	DAOs
O	270	271	i
O	272	276	have
O	277	280	one
O	281	290	Interface
O	291	296	witch
O	297	305	contains
O	306	309	the
O	310	321	declaration
O	322	326	that
O	327	330	all
O	331	335	data
O	336	342	object
O	343	348	needs
O	349	351	to
O	352	361	implement
O	361	362	.

O	363	364	(
O	364	366	in
O	367	369	my
O	370	374	case
O	375	376	:
O	377	388	IDataObject
O	388	389	)
O	390	393	The
O	394	402	specific
B-Stan	403	407	DAOs
O	408	411	are
O	412	415	all
O	416	427	represented
O	428	430	by
O	431	434	its
O	435	438	own
O	439	448	interface
O	448	449	,
O	450	459	extending
O	460	463	the
O	464	468	base
O	469	478	interface
O	479	481	of
O	482	485	all
B-Stan	486	490	DAOs
O	490	491	.

O	492	496	base
O	497	506	interface
O	507	508	:
O	509	528	@codeSnippetRemoved

O	529	530	a
O	531	541	extensions
O	542	543	:
O	544	563	@codeSnippetRemoved

O	564	566	To
O	567	573	create
O	574	576	an
O	577	581	data
O	582	588	object
O	589	590	I
O	591	595	want
O	596	599	use
O	600	608	abstract
O	609	611	to
O	612	615	use
B-Stan	616	624	abstract
I-Stan	625	634	factories
O	634	635	,
O	636	645	something
O	646	650	like
O	651	652	:
O	653	672	@codeSnippetRemoved

O	673	676	and
O	677	680	the
O	681	695	implementation
O	696	697	:
O	698	717	@codeSnippetRemoved

O	718	719	I
O	720	725	don't
O	726	729	get
O	730	733	any
O	734	739	error
O	740	742	so
O	743	746	far
O	746	747	,
O	748	751	but
O	752	755	now
O	756	757	I
O	758	762	want
O	763	765	to
O	766	775	implement
O	776	778	an
B-Stan	779	786	factory
O	787	794	builder
O	795	796	:
O	797	816	@codeSnippetRemoved

O	817	818	I
O	819	822	get
O	823	832	following
O	833	839	errors
O	840	841	(
O	841	845	line
O	846	848	8)
O	849	850	:
O	851	870	@codeSnippetRemoved

O	871	874	and
O	875	876	(
O	876	880	line
O	881	882	9
O	882	883	)
O	884	903	@codeSnippetRemoved

O	904	909	Don't
O	910	914	know
O	915	918	how
O	919	921	to
O	922	925	fix
O	926	930	this
O	930	931	,
O	932	935	any
O	936	947	suggestions
O	947	948	?

O	949	950	I
O	951	956	would
O	957	965	refactor
O	966	970	Your
O	971	972	'
O	973	974	s
O	975	993	DataFactoryBuilder
O	994	996	to
O	997	1006	something
O	1007	1011	like
O	1012	1016	that
O	1017	1018	:
O	1019	1038	@codeSnippetRemoved

O	1039	1040	I
O	1041	1044	got
O	1045	1054	following
O	1055	1063	solution
O	1064	1065	:
O	1066	1085	@codeSnippetRemoved

O	1086	1089	but
O	1090	1091	i
O	1092	1095	get
O	1096	1098	an
O	1099	1106	warning
O	1107	1109	on
O	1110	1111	:
O	1112	1118	return
O	1119	1120	(
O	1120	1132	IDataFactory
O	1132	1133	)
O	1134	1137	fac
O	1138	1139	;
O	1140	1159	@codeSnippetRemoved

O	1160	1161	I
O	1162	1167	think
O	1168	1172	that
O	1173	1175	is
O	1176	1179	not
O	1180	1181	a
O	1182	1189	problem
O	1189	1190	,
O	1191	1192	I
O	1193	1197	just
O	1198	1202	have
O	1203	1205	to
O	1206	1213	supress
O	1214	1216	it

B-PL	0	4	java
O	5	13	compiler
O	14	19	error
O	20	23	for
O	24	26	hw

O	27	30	can
O	31	38	someone
O	39	43	help
O	44	46	me
O	47	50	and
O	51	54	see
O	55	57	if
O	58	61	how
O	62	64	to
O	65	68	fix
O	69	73	this
O	73	74	?

O	75	79	this
O	80	82	is
O	83	86	the
O	87	92	error
O	93	94	I
O	95	98	got
O	99	102	can
O	103	110	someone
O	111	115	tell
O	116	118	me
O	119	123	what
O	124	125	i
O	126	129	did
O	130	135	wrong

O	136	149	Waypoint.java
O	150	151	:
O	152	154	58
O	155	156	:
O	157	162	error
O	163	164	:
O	165	168	')'
O	169	177	expected
O	178	184	return
O	185	193	distance
O	194	195	(
O	195	205	Travelable
O	206	221	otherTravelable
O	221	222	)
O	223	224	/
O	225	230	speed
O	231	232	;
O	233	234	^
O	235	248	Waypoint.java
O	249	250	:
O	251	253	58
O	254	255	:
O	256	261	error
O	262	263	:
O	264	271	illegal
O	272	277	start
O	278	280	of
O	281	291	expression
O	292	298	return
O	299	307	distance
O	308	309	(
O	309	319	Travelable
O	320	335	otherTravelable
O	335	336	)
O	337	338	/
O	339	344	speed
O	345	346	;
O	347	348	^
O	349	362	Waypoint.java
O	363	364	:
O	365	367	58
O	368	369	:
O	370	375	error
O	376	377	:
O	378	381	not
O	382	383	a
O	384	393	statement
O	394	400	return
O	401	409	distance
O	410	411	(
O	411	421	Travelable
O	422	437	otherTravelable
O	437	438	)
O	439	440	/
O	441	446	speed
O	447	448	;
O	449	451	^3
O	452	458	errors
O	459	478	@codeSnippetRemoved

O	479	483	When
O	484	487	you
O	488	492	call
O	493	494	a
O	495	501	method
O	502	505	you
O	506	511	don't
O	512	519	specify
O	520	523	the
O	524	529	types
O	530	532	of
O	533	536	the
O	537	546	arguments
O	546	547	.

O	548	554	Change
O	555	574	@codeSnippetRemoved

O	575	577	to
O	578	597	@codeSnippetRemoved

O	598	604	Change
O	605	609	this
O	610	614	line
O	615	617	by
O	618	626	removing
O	627	631	type
O	632	634	of
O	635	644	parameter
O	645	649	when
O	650	657	calling
O	658	661	the
O	662	668	method
O	669	670	:
O	671	690	@codeSnippetRemoved

O	691	693	To
O	694	713	@codeSnippetRemoved

O	714	717	You
O	718	722	have
O	723	726	put

O	727	737	Travelable
O	738	753	otherTravelable
O	754	756	in
O	757	760	the
O	761	767	return
O	768	772	line
O	773	775	of
O	776	787	toTime.just
O	788	794	return
O	795	814	@codeSnippetRemoved

B-Stan	0	3	JPA
O	4	12	navigate
O	13	27	unidirectional
O	28	40	relationship

O	41	42	I
O	43	47	have
O	48	50	an
O	51	65	unidirectional
O	66	78	relationship
O	78	79	.

O	80	84	Here
O	85	86	i
O	87	91	have
O	92	100	Employee
O	101	104	and
O	105	112	Andress
O	113	121	entities
O	121	122	.

O	123	125	In
O	126	134	Employee
O	135	141	entity
O	142	143	i
O	144	148	have
O	149	152	the
O	153	162	following
O	163	167	code
O	168	169	:
O	170	189	@codeSnippetRemoved

O	190	194	What
O	195	197	is
O	198	201	the
O	202	209	correct
O	210	213	way
O	214	216	to
O	217	221	find
O	222	225	the
O	226	234	Employee
O	235	241	entity
O	242	246	when
O	247	248	i
O	249	253	have
O	254	258	only
O	259	262	the
O	263	269	Adress
O	270	276	entity
O	276	277	.

O	278	281	Can
O	282	283	I
O	284	288	only
O	289	291	do
O	292	296	that
O	297	300	via
B-PL	301	305	jpql
O	305	306	?

O	307	310	You
O	311	316	could
O	317	319	do
O	320	322	it
O	323	327	like
O	328	332	this
O	333	335	if
O	336	339	you
O	340	344	have
O	344	345	,
O	346	349	for
O	350	357	example
O	357	358	,
O	359	362	the
O	363	365	id
O	366	368	of
O	369	372	the
O	373	380	address
O	381	400	@codeSnippetRemoved

O	401	406	Using
B-API	407	416	Hibernate
I-API	417	425	criteria
O	426	429	API
O	429	430	,
O	431	433	it
O	434	439	would
O	440	444	look
O	445	449	like
O	450	454	this
O	455	474	@codeSnippetRemoved

O	0	13	Recalculation
O	14	16	of
O	17	25	datetime
O	26	28	in
B-PL	29	33	Java
O	34	40	Thread

O	41	45	What
O	46	47	'
O	48	49	s
O	50	53	the
O	54	58	best
O	59	62	way
O	63	74	determining
O	75	78	the
O	79	87	datetime
O	88	94	inside
O	95	96	a
B-PL	97	101	Java
O	102	108	Thread
O	109	110	(
O	110	112	in
B-Plat	113	120	Android
O	120	121	)
O	121	122	?

O	123	124	I
O	125	129	have
O	130	133	the
O	134	143	following
O	144	151	snippet
O	152	153	:
O	154	173	@codeSnippetRemoved

O	174	178	Time
O	179	180	1
O	181	191	repeatedly
O	192	198	prints
O	199	202	the
O	203	207	same
O	208	212	time
O	212	213	,
O	214	217	but
O	218	222	Time
O	223	224	2
O	225	232	updates
O	233	235	on
O	236	241	every
O	242	251	iteration
O	251	252	.

O	253	255	Do
O	256	257	I
O	258	264	really
O	265	269	have
O	270	272	to
O	273	276	get
O	277	278	a
O	279	282	new
O	283	291	instance
O	292	294	of
B-API	295	312	GregorianCalendar
O	313	318	every
O	319	323	time
O	324	325	I
O	326	330	want
O	331	333	to
O	334	339	check
O	340	344	what
O	345	348	the
O	349	353	time
O	354	356	is
O	356	357	?

O	0	3	How
O	4	6	to
O	7	11	play
O	12	17	video
O	18	20	in
B-Fram	21	25	Java
I-Fram	26	31	Swing
O	31	32	?

O	33	36	How
O	37	39	to
O	40	44	play
O	45	46	a
O	47	52	video
O	53	55	in
B-Fram	56	60	Java
I-Fram	61	66	Swing
O	66	67	?

O	68	70	Is
O	71	76	there
O	77	80	any
B-Fram	81	86	Swing
O	87	97	components
O	98	101	for
O	102	106	this
O	106	107	?

O	108	112	What
O	113	116	you
O	117	120	are
O	121	128	looking
O	129	132	for
O	133	135	is
B-Fram	136	139	JMF
O	140	141	(
B-Fram	141	145	Java
I-Fram	146	151	Media
I-Fram	152	161	Framework
O	161	162	)
O	162	163	.

O	164	167	You
O	168	171	can
O	172	176	find
O	177	181	some
O	182	191	tutorials
O	192	194	on
O	195	198	how
O	199	201	to
O	202	205	use
O	206	208	it
O	209	211	in
O	212	215	the
O	216	218	SO
O	219	227	question
O	228	233	below
O	233	234	.

O	235	240	where
O	241	244	can
O	245	246	i
O	247	251	find
B-Fram	252	256	Java
I-Fram	257	260	JMF
O	261	269	tutorial

O	270	274	Have
O	275	276	a
O	277	281	look
O	282	284	at
B-Fram	285	288	FMJ
O	289	290	-
O	291	308	http://fmj-sf.net

O	309	310	I
O	311	318	suppose
O	319	323	this
O	324	328	will
O	329	334	solve
O	335	339	your
O	340	347	problem
O	348	349	:
O	350	353	How
O	354	356	to
O	357	360	use
B-Fram	361	365	JVLC
O	366	367	(
B-PL	367	371	Java
O	372	380	bindings
O	381	384	for
B-Fram	385	388	VLC
O	388	389	)
O	389	390	?

O	0	4	HELP
O	5	9	HELP
O	10	13	---
B-PL	14	18	java
O	19	25	update
O	26	30	help
O	31	33	in
B-API	34	38	java
I-API	39	43	bean
B-Stan	44	47	jsp
O	48	52	page

O	53	58	there
O	59	61	is
O	62	64	no
O	65	68	one
O	69	72	who
O	73	78	knows
O	79	82	how
O	83	86	can
O	87	88	i
O	89	91	do
O	92	96	this
O	97	99	..
O	100	103	plz
O	104	108	some
O	109	113	help
O	114	119	would
O	120	122	be
O	123	129	really
O	130	141	appreciated
O	142	144	..

O	145	148	new
O	149	151	to
O	152	156	this
O	157	162	thing
O	163	167	need
O	168	170	to
O	171	175	know
O	176	179	how
O	180	184	code
O	185	190	works
O	191	193	..

O	194	195	I
O	196	200	have
O	201	205	this
O	206	210	code
O	211	215	that
O	216	222	checks
O	223	232	duplicate
O	233	237	name
O	238	240	id

O	241	244	and
O	245	246	i
O	247	251	have
O	252	258	switch
O	259	263	case
O	264	269	where
O	270	272	it
O	273	278	saves
O	279	283	data
O	284	288	from
O	289	292	the
B-Stan	293	296	jsp
O	297	301	page
O	302	306	form

O	307	309	my
O	310	318	question
O	319	321	is
O	322	325	how
O	326	329	can
O	330	331	i
O	332	337	check
O	338	341	for
O	342	348	gender
O	349	354	value
O	355	359	when
O	360	370	particular
O	371	377	nameid
O	378	380	is
O	381	389	selected
O	390	392	..
O	393	396	and
O	397	399	if
O	400	404	user
O	405	412	changes
O	413	419	gender
O	420	425	value
O	426	430	from
O	431	432	M
O	433	435	to
O	436	437	F
O	438	440	..

O	441	442	i
O	443	448	wanna
O	449	453	give
O	454	455	a
O	456	463	warning
O	464	466	on
B-Stan	467	470	jsp
O	471	475	page
O	476	482	saying
O	483	489	gender
O	490	497	already
O	498	503	exist
O	504	506	do
O	507	510	you
O	511	515	want
O	516	518	to
O	519	525	modify
O	526	528	it
O	529	531	??

O	532	538	Please
O	539	542	any
O	543	547	help
O	548	553	would
O	554	556	be
O	557	561	good
O	562	564	..
O	565	570	thank
O	571	574	you

O	575	579	here
O	580	582	is
O	583	585	my
B-Stan	586	589	jsp
O	590	594	page

O	595	598	You
O	599	604	could
O	605	608	add
O	609	610	a
O	611	616	piece
O	617	619	of
B-PL	620	630	JavaScript
O	631	635	that
O	636	641	print
O	642	645	the
O	646	653	warning
O	653	654	,
O	655	657	if
O	658	659	a
O	660	664	user
O	665	672	changed
O	673	676	the
O	677	683	gender
O	683	684	.

O	685	688	The
O	689	693	only
O	694	699	thing
O	700	703	you
O	704	708	have
O	709	711	to
O	712	714	do
O	715	719	then
O	719	720	,
O	721	723	is
O	724	726	to
O	727	733	enable
O	734	738	this
B-PL	739	743	java
I-PL	744	750	script
O	751	753	if
O	754	757	the
O	758	764	nameid
O	765	767	is
O	768	775	already
O	776	779	set
O	780	781	(
O	781	785	then
O	786	789	the
O	790	794	name
O	795	802	already
O	803	809	exists
O	809	810	,
O	811	814	and
O	815	820	every
O	821	827	change
O	828	834	should
O	835	840	print
O	841	844	the
O	845	852	warning
O	852	853	.
O	853	854	)
O	855	857	If
O	858	861	the
O	862	868	nameid
O	869	871	is
O	872	876	null
O	876	877	,
O	878	882	then
O	883	885	it
O	886	888	is
O	889	890	a
O	891	894	new
O	895	899	name
O	900	903	and
O	904	907	you
O	908	912	must
O	913	916	not
O	917	923	enable
O	924	927	the
B-PL	928	932	java
I-PL	933	939	script
O	940	947	warning
O	948	961	functionality
O	961	962	.

O	0	4	What
O	5	13	pointcut
O	14	20	method
O	21	28	pattern
O	29	31	to
O	32	35	use
O	36	39	for
O	40	49	interface
O	50	54	with
O	55	61	method
O	62	66	that
O	67	74	returns
B-API	75	85	Collection

O	86	87	A
O	88	92	have
O	93	94	a
O	95	101	simple
O	102	111	interface
O	112	113	:

O	114	115	I
O	116	120	want
O	121	123	to
O	124	130	create
O	131	133	an
O	134	140	advice
O	141	144	for
O	145	149	this
O	150	156	method
O	157	161	when
O	162	168	around
O	169	170	:

O	171	172	I
O	173	177	Keep
O	178	185	getting

O	186	192	advice
O	193	200	defined
O	201	203	in

B-API	204	233	org.example.aspect.TestAspect
O	234	237	has
O	238	241	not

O	242	246	been
O	247	254	applied
O	255	256	[
O	257	262	Xlint
O	263	264	:
O	265	282	adviceDidNotMatch
O	283	284	]

O	285	289	What
O	290	292	am
O	293	294	I
O	295	300	doing
O	301	306	wrong
O	306	307	?

O	308	313	After
O	314	315	a
O	316	319	few
O	320	324	days
O	325	326	i
O	327	330	can
O	331	337	answer
O	338	340	my
O	341	344	own
O	345	353	question
O	354	355	:

O	356	359	The
O	360	367	WARNING
O	368	369	"
O	369	375	advice
O	376	383	defined
O	384	386	in
B-API	387	416	org.example.aspect.TestAspect
O	417	420	has
O	421	424	not
O	425	429	been
O	430	437	applied
O	438	439	[
O	440	445	Xlint
O	446	447	:
O	448	465	adviceDidNotMatch
O	466	467	]
O	467	468	"
O	469	471	is
O	472	477	given
O	478	482	when
O	483	488	there
O	489	491	is
O	492	494	no
O	495	499	call
O	500	502	to
O	503	506	the
O	507	513	mothod
B-API	514	523	findAll()
O	523	524	.

O	525	527	if
O	528	531	you
O	532	538	create
O	539	540	a
O	541	546	class
O	547	551	that
O	552	562	implements
O	563	566	the
O	567	576	interface
O	577	581	test
O	582	585	and
O	586	589	has
O	590	591	a
O	592	596	main
O	597	603	method
O	604	608	that
O	609	614	calls
B-API	615	624	findAll()
O	624	625	,
O	626	629	the
O	630	637	warning
O	638	642	will
O	643	649	vanish
O	649	650	.

O	0	3	How
O	4	7	can
O	8	9	I
O	10	14	read
O	15	16	a
O	17	21	file
O	22	24	to
O	25	27	an
B-API	28	39	InputStream
O	40	44	then
O	45	50	write
O	51	53	it
O	54	58	into
O	59	61	an
B-API	62	74	OutputStream
O	75	77	in
B-PL	78	83	Scala
O	83	84	?

O	85	88	I'm
O	89	95	trying
O	96	98	to
O	99	102	use
O	103	108	basic
B-PL	109	113	Java
O	114	118	code
O	119	121	in
B-PL	122	127	Scala
O	128	130	to
O	131	135	read
O	136	140	from
O	141	142	a
O	143	147	file
O	148	151	and
O	152	157	write
O	158	160	to
O	161	163	an
B-API	164	176	OutputStream
O	176	177	,
O	178	181	but
O	182	186	when
O	187	188	I
O	189	192	use
O	193	196	the
O	197	202	usual
O	203	208	while
O	209	210	(
O	210	211	!
O	212	213	=
O	214	216	-1
O	216	217	)
O	218	220	in
B-PL	221	226	Scala
O	227	232	gives
O	233	235	me
O	236	237	a
O	238	245	warning
O	246	247	"
O	247	256	comparing
O	257	262	types
O	263	265	of
O	266	270	Unit
O	271	274	and
O	275	278	Int
O	279	283	with
O	283	284	!

O	285	286	=
O	287	291	will
O	292	298	always
O	299	304	yield
O	305	309	true
O	310	311	"
O	311	312	.

O	313	316	The
O	317	321	code
O	322	324	is
O	325	327	as
O	328	335	follows
O	336	337	:
O	338	357	@codeSnippetRemoved

O	358	361	How
O	362	364	am
O	365	366	I
O	367	375	supposed
O	376	378	to
O	379	384	write
O	385	389	from
O	390	392	an
O	393	398	input
O	399	405	stream
O	406	408	to
O	409	411	an
O	412	418	output
O	419	425	stream
O	426	428	in
B-PL	429	434	Scala
O	434	435	?

O	436	439	I'm
O	440	446	mostly
O	447	457	interested
O	458	460	in
O	461	462	a
O	463	473	Scala-like
O	474	482	solution
O	482	483	.

O	484	494	Assignment
O	495	505	statements
O	506	512	always
O	513	519	return
O	520	524	Unit
O	525	527	in
B-PL	528	533	Scala
O	533	534	,
O	535	537	so
O	538	542	read
O	543	544	=
O	545	555	input.read
O	556	563	returns
O	564	568	Unit
O	568	569	,
O	570	575	which
O	576	581	never
O	582	588	equals
O	589	591	-1
O	591	592	.

O	593	596	You
O	597	600	can
O	601	603	do
O	604	606	it
O	607	611	like
O	612	616	this
O	617	618	:
O	619	638	@codeSnippetRemoved

O	639	642	You
O	643	648	could
O	649	651	do
O	652	656	this
O	657	658	:
O	659	678	@codeSnippetRemoved

O	679	682	def
O	683	689	stream
O	690	691	(
O	691	702	inputStream
O	703	704	:
B-API	705	716	InputStream
O	716	717	,
O	718	730	outputStream
O	731	732	:
B-API	733	745	OutputStream
O	745	746	)
O	747	749	={
O	750	753	val
O	754	760	buffer
O	761	762	=
O	763	766	new
O	767	777	Array[Byte
O	778	779	]
O	780	781	(
O	781	786	16384
O	786	787	)

O	0	3	why
O	4	8	from
O	9	18	unbounded
O	19	27	wildcard
O	28	30	to
O	31	35	does
O	36	39	not
O	40	48	generate
O	49	51	an
O	52	61	unchecked
O	62	72	conversion
O	73	80	warning
O	80	81	?

O	82	87	Think
O	88	89	i
O	90	93	ask
O	94	98	this
O	99	107	question
O	108	114	before
O	115	118	but
O	119	124	still
O	125	130	don't
O	131	141	understand
O	142	144	to
O	145	146	a
O	147	154	certain
O	155	161	degree
O	161	162	.

O	163	167	From
O	168	171	raw
O	172	174	to
O	174	175	?

O	176	177	>
O	178	179	-
O	180	182	no
O	183	192	unchecked
O	193	203	conversion
O	204	211	warning
O	211	212	.

O	213	223	Understood
O	224	229	since
O	230	234	both
O	235	238	are
O	239	248	reifiable
O	249	253	type
O	253	254	.

O	255	259	From
O	260	263	raw
O	264	266	to
O	266	267	?

O	268	275	extends
O	276	282	Object
O	283	284	>
O	285	286	-
O	287	296	unchecked
O	297	307	conversion
O	308	315	warning
O	315	316	.

O	317	327	Understood
O	328	333	since
O	333	334	?

O	335	342	extends
O	343	349	Object
O	350	351	>
O	352	354	is
O	355	356	a
O	357	360	non
O	361	370	reifiable
O	371	375	type
O	375	376	.

O	377	381	From
O	381	382	?

O	383	384	>
O	385	387	to
O	387	388	?

O	389	396	extends
O	397	403	Object
O	404	405	>
O	406	407	-
O	408	410	no
O	411	420	unchecked
O	421	431	conversion
O	432	439	warning
O	439	440	.

O	441	444	Why
O	444	445	?

O	446	451	Since
O	452	455	the
O	456	462	former
O	463	465	is
O	466	467	a
O	468	477	reifiable
O	478	482	type
O	483	486	and
O	487	490	the
O	491	497	latter
O	498	500	is
O	501	504	not
O	504	505	.

O	506	507	I
O	508	511	see
O	512	516	this
O	517	519	as
O	520	528	similiar
O	529	531	to
O	532	538	clause
O	539	540	2
O	540	541	.

O	542	543	?
O	544	549	means
O	550	552	it
O	553	556	can
O	557	559	be
O	560	563	any
O	564	571	subtype
O	571	572	.

O	573	578	Every
O	579	586	subtype
O	587	589	of
O	590	594	that
O	595	599	will
O	600	606	always
O	607	613	extend
O	614	620	Object
O	620	621	.

O	622	623	I
O	624	631	believe
O	632	635	you
O	636	644	wouldn't
O	645	649	have
O	650	651	a
O	652	659	problem
O	660	662	if
O	663	666	you
O	667	671	went
O	672	676	from
O	676	677	?

O	678	685	extends
O	686	692	Number
O	693	695	to
O	695	696	?

O	697	704	extends
O	705	711	Object
O	712	718	either
O	718	719	.

O	720	721	?
O	722	725	and
O	725	726	?

O	727	734	extends
O	735	741	Object
O	742	745	are
O	746	754	actually
O	755	758	the
O	759	763	same
O	764	769	thing
O	769	770	,
O	771	774	and
O	775	781	should
O	782	784	be
O	785	800	interchangeable
O	800	801	.

O	802	810	Actually
O	810	811	,
O	812	817	since
O	818	822	List
O	822	823	?

O	824	831	extends
O	832	838	Object
O	839	841	is
O	842	843	a
O	844	849	super
O	850	854	type
O	855	857	of
O	858	862	List
O	862	863	?

O	864	865	(
O	865	869	vice
O	870	875	versa
O	875	876	)
O	876	877	,
O	878	880	if
O	881	883	it
O	884	885	'
O	886	887	s
O	888	892	safe
O	893	895	to
O	896	903	convert
O	904	908	List
O	909	911	to
O	912	916	List
O	916	917	?

O	918	919	,
O	920	922	it
O	923	929	should
O	930	934	also
O	935	937	be
O	938	942	safe
O	943	945	to
O	946	953	convert
O	954	958	List
O	959	961	to
O	962	966	List
O	966	967	?

O	968	975	extends
O	976	982	Object
O	982	983	.

O	984	987	The
O	988	992	spec
O	993	1001	requires
O	1002	1011	unbounded
O	1012	1020	wildcard
O	1020	1021	?
O	1022	1024	in
O	1025	1029	some
O	1030	1036	places
O	1036	1037	,
O	1038	1043	while
O	1044	1047	the
O	1048	1052	twin
O	1053	1060	brother
O	1060	1061	?

O	1062	1069	extends
O	1070	1076	Object
O	1077	1079	is
O	1080	1083	not
O	1084	1093	mentioned
O	1094	1095	(
O	1095	1104	therefore
O	1105	1114	forbidden
O	1114	1115	)
O	1115	1116	.

O	1117	1122	There
O	1123	1124	'
O	1125	1126	s
O	1127	1129	no
O	1130	1141	theoretical
O	1142	1148	reason
O	1149	1152	for
O	1153	1157	that
O	1158	1159	;
O	1160	1163	the
O	1164	1172	language
O	1173	1182	designers
O	1183	1191	probably
O	1192	1200	reasoned
O	1201	1205	that
O	1205	1206	?

O	1207	1209	is
O	1210	1216	enough
O	1217	1220	for
O	1221	1230	practical
O	1231	1234	use
O	1235	1240	cases
O	1240	1241	.

O	1242	1245	For
O	1246	1253	example
O	1253	1254	,
O	1255	1257	in
O	1258	1263	5.1.9
O	1264	1273	Unchecked
O	1274	1284	Conversion
O	1284	1285	,
O	1286	1296	converting
O	1297	1300	raw
O	1301	1302	G
O	1303	1305	to
O	1306	1307	G
O	1308	1310	T1
O	1311	1313	..

O	1314	1316	Tn
O	1317	1326	generates
O	1327	1328	a
O	1329	1338	mandatory
O	1339	1351	compile-time
O	1352	1359	warning
O	1360	1366	unless
O	1367	1370	all
O	1371	1374	Ti=
O	1374	1375	?

O	1376	1377	.
O	1378	1382	This
O	1383	1385	is
O	1386	1387	a
O	1388	1394	little
O	1395	1398	too
O	1399	1404	harsh
O	1405	1406	;
O	1407	1408	a
O	1409	1416	counter
O	1417	1424	example
O	1425	1426	:

O	1427	1430	the
O	1431	1441	conversion
O	1442	1446	from
O	1447	1448	x
O	1449	1451	to
O	1452	1453	y
O	1454	1456	is
O	1457	1461	safe
O	1461	1462	,
O	1463	1466	and
O	1467	1470	the
O	1471	1478	warning
O	1479	1481	is
O	1482	1488	really
O	1489	1500	unnecessary
O	1500	1501	.

O	1502	1504	It
O	1505	1507	is
O	1508	1516	possible
O	1517	1519	to
O	1520	1525	relax
O	1526	1529	the
O	1530	1534	rule
O	1535	1537	to
O	1538	1544	exempt
O	1545	1548	all
O	1549	1553	safe
O	1554	1565	conversions
O	1565	1566	.

O	1567	1569	We
O	1570	1574	know
O	1575	1577	it
O	1578	1580	is
O	1581	1585	safe
O	1586	1588	to
O	1589	1596	convert
O	1597	1600	raw
O	1601	1602	G
O	1603	1605	to
O	1606	1607	G
O	1608	1612	?..?

O	1613	1614	;
O	1615	1626	furthermore
O	1626	1627	,
O	1628	1630	if
O	1631	1632	G
O	1633	1635	T1
O	1636	1638	..

O	1639	1641	Tn
O	1642	1644	is
O	1645	1646	a
O	1647	1652	super
O	1653	1657	type
O	1658	1660	of
O	1661	1662	G
O	1663	1667	?..?

O	1668	1669	,
O	1670	1680	converting
O	1681	1682	G
O	1683	1685	to
O	1686	1687	G
O	1688	1690	T1
O	1691	1693	..

O	1694	1696	Tn
O	1697	1699	is
O	1700	1704	also
O	1705	1709	safe
O	1709	1710	,
O	1711	1714	and
O	1715	1721	should
O	1722	1724	be
O	1725	1732	allowed
O	1733	1740	without
O	1741	1748	warning
O	1748	1749	.

O	1750	1754	This
O	1755	1764	certainly
O	1765	1770	makes
O	1771	1776	sense
O	1776	1777	.

O	1778	1785	However
O	1785	1786	,
O	1787	1795	checking
O	1796	1800	that
O	1801	1802	G
O	1803	1807	?..?

O	1808	1810	is
O	1811	1812	a
O	1813	1820	subtype
O	1821	1823	of
O	1824	1825	G
O	1826	1828	T1
O	1829	1831	..

O	1832	1834	Tn
O	1835	1837	is
O	1838	1841	not
O	1842	1843	a
O	1844	1851	trivial
O	1852	1856	task
O	1857	1858	;
O	1859	1862	the
O	1863	1871	language
O	1872	1880	designer
O	1881	1889	probably
O	1890	1894	said
O	1894	1895	,
O	1896	1898	to
O	1899	1903	hell
O	1904	1908	with
O	1909	1911	it
O	1911	1912	,
O	1913	1915	it
O	1916	1917	'
O	1918	1919	s
O	1920	1923	not
O	1924	1929	worth
O	1930	1933	the
O	1934	1941	trouble
O	1942	1944	to
O	1945	1947	do
O	1948	1952	this
O	1953	1956	for
O	1957	1966	unchecked
O	1967	1977	conversion
O	1977	1978	,
O	1979	1984	which
O	1985	1987	is
O	1988	1991	not
O	1992	1994	an
O	1995	2004	important
O	2005	2009	part
O	2010	2012	of
O	2013	2016	the
O	2017	2021	type
O	2022	2028	system
O	2029	2035	anyway
O	2035	2036	.

O	0	3	How
O	4	6	to
O	7	17	manipulate
O	18	19	a
B-Stan	20	24	BLOB
O	25	27	in
B-PL	28	32	Java
O	32	33	?

O	34	35	I
O	36	40	have
O	41	42	a
O	43	45	DB
O	46	55	procedure
O	56	61	which
O	62	69	returns
O	70	71	a
B-Stan	72	76	BLOB
O	76	77	.

O	78	81	Can
O	82	88	anyone
O	89	93	tell
O	94	96	me
O	97	100	how
O	101	103	to
O	104	114	manipulate
O	115	118	the
B-Stan	119	123	BLOB
O	123	124	?

O	125	127	Is
O	128	133	there
O	134	137	any
O	138	146	specific
O	147	150	API
O	151	154	for
O	155	159	this
O	159	160	?

O	161	163	Is
O	164	169	there
O	170	173	any
O	174	182	specific
O	183	186	API
O	187	190	for
O	191	195	this
O	195	196	?

O	197	201	Sure
O	201	202	,
O	203	206	the
B-Stan	207	211	JDBC
O	212	215	API
O	215	216	.

O	217	222	Trail
O	223	224	:
B-Stan	225	229	JDBC
O	230	238	Database
O	239	245	Access

O	246	249	You
O	250	253	get
O	254	258	hold
O	259	261	of
O	262	265	the
B-Stan	266	270	Blob
O	271	279	instance
O	280	284	just
O	285	287	as
O	288	291	you
O	292	295	get
O	296	300	hold
O	301	303	of
O	304	307	any
O	308	313	value
O	314	318	from
O	319	320	a
O	321	327	result
O	328	331	set
O	331	332	.

O	0	4	Read
O	5	13	pictures
O	14	18	from
O	19	25	webcam
O	26	28	in
B-PL	29	33	Java
O	34	36	on
B-Plat	37	43	Ubuntu
O	43	44	?

O	45	50	There
O	51	54	are
O	55	59	many
O	60	69	questions
O	70	72	on
O	73	75	SO
O	76	78	on
O	79	82	how
O	83	85	to
O	86	90	read
O	91	97	images
O	98	102	from
O	103	110	webcams
O	111	113	in
B-PL	114	118	Java
O	118	119	,
O	120	123	but
O	124	131	judging
O	132	134	by
O	135	138	the
O	139	146	answers
O	147	152	there
O	153	157	does
O	158	161	not
O	162	166	seem
O	167	169	to
O	170	172	be
O	173	174	a
O	175	182	library
O	183	188	which
O	189	191	is
O	192	200	actively
O	201	210	developed
O	211	214	and
O	215	225	maintained
O	225	226	.

O	227	229	My
O	230	238	question
O	239	241	is
O	242	244	if
O	245	247	it
O	248	253	would
O	254	258	make
O	259	262	any
O	263	273	difference
O	274	276	if
O	277	278	I
O	279	286	limited
O	287	290	the
O	291	293	OS
O	294	296	to
B-Plat	297	302	Linux
O	303	307	only
O	307	308	?

O	309	310	I
O	311	315	know
O	316	321	there
O	322	323	'
O	324	325	s
O	326	327	a
O	328	334	device
O	335	347	representing
O	348	353	video
O	353	354	,
O	355	356	/
O	357	360	dev
O	361	362	/
O	363	369	video0
O	369	370	,
O	371	374	can
O	375	379	that
O	380	382	be
O	383	387	used
O	388	391	for
O	392	399	reading
O	400	405	image
O	406	410	data
O	411	415	from
O	416	417	a
O	418	424	webcam
O	425	430	using
B-API	431	438	java.io
O	439	446	somehow
O	446	447	?

O	448	454	Thanks
O	455	457	in
O	458	465	advance
O	465	466	!

O	467	470	You
O	471	476	could
O	477	480	run
O	481	482	a
O	483	490	command
O	491	492	(
O	492	500	external
O	501	508	program
O	508	509	,
O	510	517	started
O	518	522	from
O	523	527	your
B-PL	528	532	Java
O	533	537	code
O	537	538	)
O	539	544	which
O	545	547	is
O	548	556	handling
O	557	560	the
O	561	566	video
O	567	574	reading
O	575	577	of
O	578	581	the
O	582	588	webcam
O	588	589	.

O	590	593	But
O	594	598	what
O	599	601	do
O	602	605	you
O	606	610	want
O	611	613	to
O	614	616	do
O	617	621	with
O	622	625	the
O	626	631	video
O	632	638	stream
O	638	639	?

O	640	644	EDIT
O	645	646	:
O	647	649	If
O	650	653	you
O	654	658	want
O	659	661	to
O	662	664	do
O	665	674	something
O	675	679	with
O	680	683	the
O	684	689	image
O	689	690	,
O	691	694	get
B-Fram	695	701	opencv
O	702	705	and
O	706	709	its
O	710	718	bindings
O	718	719	,
O	720	760	http://ubaa.net/shared/processing/opencv

O	761	764	The
O	765	769	page
O	770	774	also
O	775	778	has
O	779	780	a
O	781	785	link
O	786	789	for
B-PL	790	794	Java
O	795	802	example
O	803	811	programs
O	811	812	.

O	813	823	OLD_ANSWER
O	824	825	:

O	826	829	You
O	830	833	can
O	834	837	use
B-Fram	838	841	vlc
O	841	842	,
O	843	845	it
O	846	849	has
O	850	856	webcam
O	857	864	support
O	864	865	.

O	866	868	As
O	869	872	far
O	873	874	a
B-PL	875	879	Java
O	880	882	is
O	883	892	concerned
O	892	893	,
O	894	898	take
O	899	900	a
O	901	905	look
O	906	909	the
B-Fram	910	914	VLCJ
O	915	922	project
O	923	926	for
O	927	930	the
O	931	939	bindings
O	939	940	.
O	941	970	http://code.google.com/p/vlcj

O	971	974	For
O	975	978	the
O	979	981	OS
O	982	985	bit
O	986	988	of
O	989	993	your
O	994	1002	question
O	1002	1003	,
O	1004	1006	on
B-Plat	1007	1012	Linux
O	1013	1019	webcam
O	1020	1022	is
O	1023	1034	implemented
O	1035	1038	via
B-Fram	1039	1042	v4l
O	1043	1044	(
B-Fram	1044	1049	video
I-Fram	1050	1053	for
I-Fram	1054	1059	linux
O	1059	1060	)
O	1060	1061	,
O	1062	1065	but
O	1066	1068	as
O	1069	1072	far
O	1073	1075	as
O	1076	1077	I
O	1078	1083	think
O	1083	1084	,
O	1085	1087	it
O	1088	1093	won't
O	1094	1096	be
O	1097	1099	an
O	1100	1105	issue
O	1106	1109	for
O	1110	1116	having
O	1117	1119	it
O	1120	1125	cross
O	1126	1134	platform
O	1134	1135	.

O	0	3	How
O	4	7	can
O	8	9	I
O	10	13	use
O	14	16	an
O	17	26	installer
O	27	35	variable
O	36	38	on
O	39	42	the
O	43	47	same
O	48	54	screen
O	55	57	it
O	58	59	'
O	60	61	s
O	62	67	input
O	68	70	on

O	71	74	How
O	75	78	can
O	79	80	I
O	81	84	get
O	85	88	the
O	89	92	the
O	93	104	information
O	105	109	that
O	110	111	'
O	112	113	s
O	114	121	entered
O	122	126	into
O	127	128	a
O	129	135	screen
O	136	141	while
O	142	147	still
O	148	150	on
O	151	154	the
O	155	159	same
O	160	166	screen
O	166	167	?

O	168	171	For
O	172	179	example
O	179	180	,
O	181	188	suppose
O	189	193	I've
O	194	197	got
O	198	199	a
O	200	204	text
O	205	210	field
O	211	215	that
O	216	220	sets
O	221	222	a
O	223	231	variable
O	232	238	called
O	239	244	myVar
O	245	248	and
O	249	250	a
O	251	257	button
O	258	260	on
O	261	264	the
O	265	269	same
O	270	276	screen
O	277	281	that
O	282	287	needs
O	288	291	the
O	292	297	value
O	298	300	of
O	301	306	myVar
O	307	309	to
O	310	314	work
O	314	315	.

O	316	319	Two
O	320	333	possibilities
O	334	335	:

O	336	337	1
O	337	338	)
O	339	343	Your
O	344	350	button
O	351	357	action
O	358	364	script
O	365	368	can
O	369	376	persist
O	377	380	the
O	381	386	input
O	387	389	on
O	390	393	all
O	394	398	form
O	399	409	components
O	410	412	as
O	413	416	its
O	417	422	first
O	423	429	action
O	429	430	.

O	431	433	To
O	434	436	do
O	437	441	that
O	442	446	call
O	447	466	@codeSnippetRemoved

O	467	471	Then
B-API	472	491	context.getVariable
O	492	493	(
O	493	494	"
O	494	499	myVar
O	500	502	")
O	503	507	will
O	508	514	return
O	515	518	the
O	519	524	value
O	525	529	that
O	530	532	is
O	533	540	entered
O	541	543	on
O	544	547	the
O	548	552	same
O	553	559	screen
O	559	560	.

O	561	562	2
O	562	563	)
O	564	567	You
O	568	576	directly
O	577	583	access
O	584	587	the
O	588	592	form
O	593	602	component
O	603	605	in
O	606	609	the
O	610	616	action
O	617	623	script
O	624	626	of
O	627	630	the
O	631	637	button
O	638	639	:
O	640	659	@codeSnippetRemoved

O	0	8	Creating
O	9	10	a
O	11	21	customized
B-Stan	22	25	404
O	26	27	/
B-Stan	28	31	500
O	32	37	error
O	38	42	page
O	43	45	in
B-Fram	46	50	Play
I-Fram	51	60	Framework

O	61	64	How
O	65	68	can
O	69	72	one
O	73	79	create
O	80	86	global
O	86	87	,
O	88	94	custom
O	95	100	looks
O	101	104	for
O	105	110	their
B-Stan	111	114	404
O	115	116	/
B-Stan	117	120	505
O	121	126	error
O	127	132	pages
O	133	138	using
B-Fram	139	143	Play
O	143	144	?

O	145	148	You
O	149	155	simply
O	156	160	have
O	161	163	to
O	164	170	modify
O	171	174	the
O	175	183	provided
O	184	187	app
O	188	189	/
O	190	195	views
O	196	197	/
O	198	204	errors
O	205	206	/
O	207	215	404.html
O	216	219	and
O	220	223	app
O	224	225	/
O	226	231	views
O	232	233	/
O	234	240	errors
O	241	242	/
O	243	251	500.html
O	251	252	.

O	253	256	For
B-Fram	257	261	play
I-Fram	262	265	2.X
O	266	269	you
O	270	273	can
O	274	282	override
O	283	286	the
O	287	298	appropriate
O	299	306	methods
O	307	309	in
B-API	310	324	GlobalSettings
O	325	326	:
O	327	409	http://www.playframework.com/documentation/api/2.0.3/java/play/GlobalSettings.html

O	410	470	http://www.playframework.com/documentation/2.0.2/ScalaGlobal

B-Stan	0	6	Oracle
I-Stan	7	13	Stored
I-Stan	14	23	procedure
O	24	34	Structured
O	35	45	Parameters

O	46	47	I
O	48	52	wish
O	53	55	to
O	56	60	pass
O	61	62	a
O	63	68	bunch
O	69	71	of
O	72	73	'
O	74	81	unknown
O	82	83	'
O	84	90	values
O	91	93	to
O	94	96	an
B-Stan	97	103	Oracle
I-Stan	104	110	stored
I-Stan	111	120	procedure
O	121	125	from
O	126	127	a
B-Fram	128	134	spring
B-PL	135	139	java
O	140	151	application
O	151	152	.

O	153	156	The
O	157	161	data
O	162	164	is
O	165	173	somewhat
O	174	184	structured
O	184	185	,
O	186	188	so
O	189	198	currently
O	199	201	we
O	202	206	have
O	207	208	a
O	209	215	stored
O	216	220	proc
O	221	225	that
O	226	229	has
O	230	237	accepts
O	238	239	2
O	240	245	clobs
O	246	250	what
O	251	254	are
O	255	258	key
O	259	260	/
O	261	266	value
O	267	272	pairs
O	273	275	of
O	276	279	the
O	280	284	data
O	284	285	.

O	286	289	The
O	290	295	first
O	296	300	clob
O	301	311	represents
O	312	313	a
O	314	320	single
O	321	327	record
O	328	331	amd
O	332	335	the
O	336	342	second
O	343	347	clob
O	347	348	,
O	349	359	represents
O	360	364	many
O	365	370	child
O	371	378	records
O	379	381	of
O	382	386	clob
O	387	388	1
O	388	389	.

O	390	394	This
O	395	400	seems
O	401	402	a
O	403	407	very
O	408	419	inefficient
O	420	423	way
O	424	426	to
O	427	431	pass
O	432	435	the
O	436	440	data
O	441	443	as
O	444	446	we
O	447	451	have
O	452	454	to
O	455	464	construct
O	465	472	strings
O	473	475	in
B-PL	476	480	java
O	481	483	in
O	484	487	the
O	488	493	forst
O	494	499	plave
O	500	503	and
O	504	508	then
O	509	512	the
O	513	517	data
O	518	521	has
O	522	524	to
O	525	527	be
O	528	534	parsed
O	535	537	in
O	538	541	the
O	542	548	stored
O	549	553	proc
O	553	554	.

O	555	556	I
O	557	561	have
O	562	568	looked
O	569	573	into
O	574	580	Oracle
O	581	587	record
O	588	598	structures
O	598	599	,
O	600	607	however
O	608	610	it
O	611	618	appears
O	619	621	as
O	622	628	though
O	629	632	you
O	633	637	have
O	638	640	to
O	641	644	map
O	645	649	each
O	650	655	field
O	656	658	in
O	659	662	the
O	663	669	record
O	670	679	structure
O	680	682	to
O	683	684	a
O	685	687	db
O	688	693	table
O	694	699	field
O	699	700	.
O	701	704	the
O	705	712	problem
O	713	717	with
O	718	722	this
O	723	731	approach
O	732	734	is
O	735	736	a
O	736	737	)
O	738	741	the
O	742	746	data
O	747	752	items
O	753	757	that
O	758	760	we
O	761	765	send
O	766	770	each
O	771	775	time
O	776	782	differ
O	783	784	(
O	784	792	although
O	793	798	there
O	799	801	is
O	802	803	a
O	804	808	core
O	809	812	set
O	813	815	of
O	816	820	data
O	821	825	that
O	826	833	remains
O	834	837	the
O	838	842	same
O	842	843	)
O	844	847	and
O	848	849	b
O	849	850	)
O	851	855	some
O	856	858	of
O	859	862	the
O	863	867	data
O	868	873	items
O	874	877	are
O	878	883	there
O	884	887	for
O	888	896	decision
O	897	903	making
O	904	912	purposes
O	913	917	only
O	918	921	and
O	922	925	are
O	926	929	not
O	930	937	actualy
O	938	947	persisted
O	948	950	to
O	951	954	the
O	955	963	database
O	963	964	.

O	965	967	So
O	968	970	my
O	971	979	question
O	980	982	is
O	983	984	:
O	985	989	what
O	990	992	is
O	993	996	the
O	997	1001	most
O	1002	1011	efficient
O	1012	1019	vehicle
O	1020	1022	to
O	1023	1027	pass
O	1028	1032	such
O	1033	1037	data
O	1038	1040	to
O	1041	1044	the
B-Stan	1045	1051	Oracle
I-Stan	1052	1058	stored
I-Stan	1059	1063	proc
O	1063	1064	?

O	1065	1067	We
O	1068	1072	want
O	1073	1075	to
O	1076	1084	maintain
O	1085	1088	the
O	1089	1099	flexibilty
O	1100	1102	of
O	1103	1108	being
O	1109	1113	able
O	1114	1116	to
O	1117	1121	send
O	1122	1130	variable
O	1131	1140	parameter
O	1141	1145	sets
O	1146	1151	along
O	1152	1156	with
O	1157	1163	having
O	1164	1168	some
O	1169	1178	semblance
O	1179	1181	of
O	1182	1191	structure
O	1192	1198	around
O	1199	1202	the
O	1203	1207	data
O	1207	1208	.

O	1209	1215	Thanks
O	1216	1218	in
O	1219	1226	advance
O	1226	1227	.

O	1228	1233	Barry

O	1234	1238	Have
O	1239	1242	you
O	1243	1253	considered
O	1254	1261	passing
O	1262	1266	your
O	1267	1271	data
O	1272	1274	to
O	1275	1278	the
O	1279	1285	stored
O	1286	1295	procedure
O	1296	1298	as
B-Stan	1299	1302	XML
O	1302	1303	?

O	1304	1310	Oracle
O	1311	1314	can
O	1315	1321	handle
B-Stan	1322	1325	XML
O	1326	1330	data
O	1331	1336	types
O	1336	1337	.

O	1338	1343	There
O	1344	1347	are
O	1348	1352	also
O	1353	1357	some
O	1358	1365	related
O	1366	1375	questions
O	1376	1378	on
O	1379	1384	Stack
O	1385	1393	Overflow
O	1394	1395	:

B-PL	1396	1400	Java
O	1401	1402	:
B-Stan	1403	1409	Oracle
I-Stan	1410	1417	XMLType
O	1418	1419	+
B-Stan	1420	1424	JDBC

O	1425	1428	How
O	1429	1431	to
B-Stan	1432	1438	Oracle
I-Stan	1439	1446	XMLTYPE
O	1447	1449	in
B-Fram	1450	1459	Hibernate

O	1460	1465	Using
B-Fram	1466	1473	MyBatis
O	1474	1478	with
B-Stan	1479	1485	Oracle
I-Stan	1486	1493	XMLType
O	1494	1502	function
B-API	1503	1515	existsNode()

O	1516	1523	However
O	1523	1524	,
B-Stan	1525	1528	XML
O	1529	1532	may
O	1533	1535	be
O	1536	1537	a
O	1538	1549	performance
O	1550	1556	killer
O	1557	1559	in
O	1560	1564	some
O	1565	1575	situations
O	1575	1576	.

O	1577	1584	Another
O	1585	1591	option
O	1592	1594	is
O	1595	1597	to
O	1598	1601	use
B-Stan	1602	1605	REF
I-Stan	1606	1612	CURSOR
O	1613	1618	types
O	1619	1620	:

B-API	1621	1638	PreparedStatement
O	1639	1643	stmt
O	1644	1645	=
B-API	1646	1673	connection.prepareStatement
O	1674	1675	(

O	1676	1677	"
O	1677	1684	DECLARE
O	1684	1685	"

O	1686	1687	+
O	1688	1689	"
O	1689	1696	records
O	1697	1710	SYS_REFCURSOR
O	1711	1712	;
O	1712	1713	"

O	1714	1715	+
O	1716	1717	"
O	1717	1722	BEGIN
O	1722	1723	"

O	1724	1725	+
O	1726	1727	"
O	1727	1731	OPEN
O	1732	1739	records
O	1740	1743	FOR
O	1743	1744	"

O	1745	1746	+
O	1747	1748	"
O	1748	1754	SELECT
O	1755	1756	*
O	1757	1761	FROM
O	1762	1767	TABLE
O	1768	1769	(
O	1769	1770	?
O	1771	1773	);
O	1773	1774	"

O	1775	1776	+
O	1777	1778	"
O	1778	1785	my_proc
O	1786	1787	(
O	1787	1794	records
O	1795	1797	);
O	1797	1798	"

O	1799	1800	+
O	1801	1802	"
O	1802	1804	EN
O	1805	1807	D;
O	1808	1810	")
O	1811	1812	;

O	1813	1815	//
O	1816	1819	Set
O	1820	1823	the
O	1824	1831	records
O	1832	1834	as
O	1835	1837	an
O	1838	1843	array

B-API	1844	1857	stmt.setArray
O	1858	1859	(
O	1859	1860	1
O	1860	1861	,
O	1862	1869	records
O	1870	1872	);

O	1873	1877	That
O	1878	1883	would
O	1884	1886	be
O	1887	1888	a
O	1889	1892	way
O	1893	1895	to
O	1896	1904	somewhat
O	1905	1914	structure
O	1915	1918	the
O	1919	1923	data
O	1924	1927	and
O	1928	1931	yet
O	1932	1939	operate
O	1940	1942	on
O	1943	1949	weakly
O	1950	1955	typed
O	1956	1963	cursors
O	1963	1964	.

O	1965	1968	The
O	1969	1974	above
O	1975	1981	select
O	1982	1987	could
O	1988	1992	have
O	1993	1996	any
O	1997	2001	form
O	2001	2002	.

O	2003	2005	In
O	2006	2010	this
O	2011	2018	example
O	2018	2019	,
O	2020	2023	I'm
O	2024	2032	assuming
O	2033	2037	that
O	2038	2041	you
O	2042	2046	will
O	2047	2049	be
O	2050	2057	binding
O	2058	2067	something
O	2068	2072	like
O	2073	2077	this
O	2078	2079	:

O	2080	2086	CREATE
O	2087	2091	TYPE
O	2092	2095	rec
O	2096	2098	AS
O	2099	2105	OBJECT
O	2106	2107	(
O	2107	2109	ID
O	2110	2116	NUMBER
O	2117	2118	(
O	2118	2119	7
O	2119	2120	)
O	2120	2121	,
O	2122	2127	VALUE
O	2128	2132	CLOB
O	2133	2135	);

O	2136	2142	CREATE
O	2143	2147	TYPE
O	2148	2151	tab
O	2152	2154	AS
O	2155	2160	TABLE
O	2161	2163	OF
O	2164	2167	rec
O	2168	2169	;

O	2170	2171	A
O	2172	2178	simple
O	2179	2186	example
O	2187	2196	procedure
O	2197	2211	implementation
O	2212	2221	expecting
O	2222	2223	a
O	2224	2229	TABLE
O	2230	2232	OF
O	2233	2241	VARCHAR2
B-Stan	2242	2245	REF
I-Stan	2246	2252	CURSOR
O	2253	2254	:

O	0	5	Would
O	6	15	Automatic
O	16	21	Casts
O	22	24	be
O	25	31	useful
O	31	32	?

O	33	35	Is
O	36	41	there
O	42	45	any
O	46	54	downside
O	55	57	or
O	58	65	problem
O	66	75	potential
O	76	78	to
O	79	85	change
O	86	89	the
B-PL	90	94	Java
O	95	103	compiler
O	104	106	to
O	107	120	automatically
O	121	125	cast
O	125	126	?

O	127	129	In
O	130	133	the
O	134	141	example
O	142	147	below
O	148	151	the
O	152	158	result
O	159	161	of
B-API	162	170	list.get
O	171	172	(
O	172	173	0
O	173	174	)
O	175	180	would
O	181	194	automatically
O	195	197	be
O	198	204	casted
O	205	207	to
O	208	211	the
O	212	216	type
O	217	219	of
O	220	223	the
O	224	232	variable
O	233	235	hi
O	235	236	.

O	237	256	@codeSnippetRemoved

O	257	258	I
O	259	263	know
O	264	268	that
O	269	277	generics
O	278	283	allow
O	284	287	you
O	288	290	to
O	291	297	reduce
O	298	305	casting
O	306	309	but
O	310	314	they
O	315	317	do
O	318	320	so
O	321	323	at
O	324	327	the
O	328	335	expense
O	336	338	of
O	339	345	making
O	346	357	declaration
O	358	362	more
O	363	372	difficult
O	372	373	.

O	374	376	To
O	377	379	me
O	379	380	,
O	381	384	the
O	385	392	benefit
O	393	395	of
O	396	404	generics
O	405	407	is
O	408	412	that
O	413	417	they
O	418	423	allow
O	424	427	you
O	428	430	to
O	431	435	have
O	436	439	the
O	440	448	complier
O	449	456	enforce
O	457	461	more
O	462	467	rules
O	468	470	--
O	471	474	not
O	475	479	they
O	480	484	they
O	485	491	reduce
O	492	499	casting
O	500	501	(
O	501	504	but
O	505	506	I
O	507	514	haven't
O	515	519	used
O	520	524	them
O	525	529	much
O	530	532	so
O	533	534	I
O	535	537	am
O	538	546	somewhat
O	547	557	uninformed
O	557	558	)
O	558	559	.

O	560	564	This
O	565	573	proposal
O	574	579	would
O	580	584	only
O	585	591	reduce
O	592	595	the
O	596	602	amount
O	603	605	of
O	606	610	code
O	611	613	to
O	614	618	type
O	618	619	,
O	620	623	not
O	624	628	move
O	629	631	it
O	632	634	to
O	635	642	another
O	643	653	place.Also
O	654	659	there
O	660	663	are
O	664	673	instances
O	674	679	where
O	680	688	generics
O	689	694	can't
O	695	697	be
O	698	702	used
O	703	710	because
O	711	712	a
O	713	723	collection
O	724	727	can
O	728	732	have
O	733	742	different
O	743	754	objectis.If
O	755	759	that
O	760	761	"
O	761	766	looks
O	767	770	too
O	771	781	surprising
O	781	782	"
O	783	788	based
O	789	791	on
O	792	799	current
O	800	805	usage
O	806	811	maybe
O	812	817	there
O	818	823	could
O	824	826	be
O	827	828	a
O	829	835	syntax
O	836	841	tweak
O	842	844	to
O	845	848	use
O	849	851	it
O	851	852	.

O	853	857	From
O	858	859	:
O	860	920	http://jamesjava.blogspot.com/2007/01/automatic-casting.html

O	921	928	Casting
O	929	931	is
O	932	934	an
O	935	943	explicit
O	944	955	instruction
O	956	958	to
O	959	962	the
B-PL	963	967	Java
O	968	976	compiler
O	977	979	to
O	980	986	ignore
O	987	991	type
O	992	998	safety
O	999	1001	so
O	1002	1010	allowing
O	1011	1020	automatic
O	1021	1026	casts
O	1027	1032	would
O	1033	1039	remove
O	1040	1043	one
O	1044	1046	of
O	1047	1050	the
O	1051	1059	features
O	1060	1069	purposely
O	1070	1078	designed
O	1079	1083	into
O	1084	1087	the
O	1088	1096	language
O	1096	1097	.

O	1098	1099	I
O	1100	1110	personally
O	1111	1115	like
O	1116	1124	compiler
O	1125	1133	warnings
O	1134	1137	and
O	1138	1144	errors
O	1144	1145	,
O	1146	1151	since
O	1152	1154	it
O	1155	1156	'
O	1157	1158	s
O	1159	1163	much
O	1164	1170	harder
O	1171	1173	to
O	1174	1178	find
O	1179	1183	this
O	1184	1188	type
O	1189	1191	of
O	1192	1199	problem
O	1200	1202	at
O	1203	1206	run
O	1207	1211	time
O	1212	1213	(
O	1213	1221	assuming
O	1222	1225	the
O	1226	1234	compiler
O	1235	1242	somehow
O	1243	1250	managed
O	1251	1253	to
O	1254	1259	force
O	1260	1263	one
O	1264	1270	object
O	1271	1275	type
O	1276	1278	to
O	1279	1286	another
O	1286	1287	)
O	1287	1288	.

O	1289	1290	I
O	1291	1296	would
O	1297	1302	avoid
O	1303	1305	it
O	1305	1306	,
O	1307	1314	because
O	1315	1316	I
O	1317	1321	have
O	1322	1323	a
O	1324	1331	feeling
O	1332	1334	it
O	1335	1339	will
O	1340	1344	come
O	1345	1349	back
O	1350	1353	and
O	1354	1358	bite
O	1359	1362	you
O	1363	1368	later
O	1369	1371	on
O	1371	1372	.

O	1373	1381	Generics
O	1382	1385	are
O	1386	1391	worth
O	1392	1395	the
O	1396	1402	hassle
O	1402	1403	,
O	1404	1406	in
O	1407	1409	my
O	1410	1417	opinion
O	1417	1418	,
O	1419	1426	because
O	1427	1431	they
O	1432	1436	save
O	1437	1441	lots
O	1442	1444	of
O	1445	1453	headache
O	1454	1458	down
O	1459	1462	the
O	1463	1467	road
O	1467	1468	.

O	1469	1473	Also
O	1473	1474	,
O	1475	1477	it
O	1478	1479	'
O	1480	1481	s
O	1482	1485	not
O	1486	1489	too
O	1490	1494	hard
O	1495	1497	to
O	1498	1501	use
O	1502	1503	a
O	1504	1505	"
B-API	1505	1514	container
O	1514	1515	"
O	1516	1522	object
O	1523	1526	for
O	1527	1538	collections
O	1539	1543	that
O	1544	1548	hold
O	1549	1558	different
O	1559	1565	object
O	1566	1571	types
O	1571	1572	.

O	1573	1578	Seems
O	1579	1581	to
O	1582	1584	me
O	1585	1589	like
O	1590	1596	having
O	1597	1601	type
O	1602	1608	checks
O	1609	1611	is
O	1612	1613	a
O	1614	1618	good
O	1619	1624	thing
O	1624	1625	.

O	1626	1628	An
O	1629	1638	automatic
O	1639	1643	cast
O	1644	1649	would
O	1650	1656	remove
O	1657	1658	a
O	1659	1670	potentially
O	1671	1677	useful
O	1678	1690	compile-time
O	1691	1696	error
O	1696	1697	.

O	1698	1700	If
O	1701	1704	you
O	1705	1710	worry
O	1711	1716	about
O	1717	1720	the
O	1721	1727	number
O	1728	1730	of
O	1731	1741	keystrokes
O	1741	1742	,
O	1743	1746	you
O	1747	1752	could
O	1753	1756	use
O	1757	1759	an
O	1760	1763	IDE
O	1764	1768	like
B-Fram	1769	1776	Eclipse
O	1776	1777	,
O	1778	1782	were
O	1783	1786	the
O	1787	1791	type
O	1792	1796	cast
O	1797	1800	can
O	1801	1803	be
O	1804	1812	inserted
O	1813	1817	with
O	1818	1819	a
O	1820	1832	double-click
O	1832	1833	.

O	1834	1837	Yes
O	1837	1838	,
O	1839	1841	it
O	1842	1847	would
O	1848	1852	move
O	1853	1859	errors
O	1860	1865	which
O	1866	1869	are
O	1870	1879	currently
O	1880	1885	found
O	1886	1888	at
O	1889	1896	compile
O	1897	1901	time
O	1902	1904	to
O	1905	1910	being
O	1911	1916	found
O	1917	1919	at
O	1920	1927	runtime
O	1927	1928	.

O	1929	1934	While
O	1935	1939	this
O	1940	1942	is
O	1943	1946	not
O	1947	1957	considered
O	1958	1960	to
O	1961	1963	be
O	1964	1965	a
O	1966	1970	huge
O	1971	1979	drawback
O	1980	1982	by
O	1983	1987	some
O	1987	1988	,
O	1989	1994	those
O	1995	2001	people
O	2002	2005	are
O	2006	2011	using
B-PL	2012	2018	Python
O	2018	2019	,
B-PL	2020	2024	Ruby
O	2025	2027	or
O	2028	2032	Perl
O	2033	2036	and
O	2037	2040	not
B-PL	2041	2045	Java
O	2046	2049	;-)
O	2049	2050	.

O	2051	2054	The
O	2055	2062	biggest
O	2063	2070	benefit
O	2071	2073	of
O	2074	2079	using
O	2080	2088	generics
O	2089	2091	in
O	2092	2096	your
O	2097	2104	example
O	2105	2107	is
O	2108	2112	that
O	2113	2115	it
O	2116	2123	changes
O	2124	2128	what
O	2129	2134	would
O	2135	2137	be
O	2138	2139	a
O	2140	2143	run
O	2144	2148	time
O	2149	2154	error
O	2155	2159	into
O	2160	2161	a
O	2162	2169	compile
O	2170	2174	time
O	2175	2180	error
O	2180	2181	.

O	2182	2201	@codeSnippetRemoved

O	2202	2209	Because
O	2210	2213	run
O	2214	2218	time
O	2219	2225	errors
O	2226	2229	are
O	2230	2234	seen
O	2235	2237	by
O	2238	2243	users
O	2244	2247	and
O	2248	2255	compile
O	2256	2260	time
O	2261	2267	errors
O	2268	2271	are
O	2272	2276	seen
O	2277	2279	by
O	2280	2291	programmers
O	2291	2292	,
O	2293	2300	compile
O	2301	2305	time
O	2306	2312	errors
O	2313	2316	are
O	2317	2321	much
O	2321	2322	,
O	2323	2327	much
O	2328	2334	better
O	2334	2335	.

O	2336	2338	To
O	2339	2345	answer
O	2346	2350	your
O	2351	2359	question
O	2359	2360	,
O	2361	2366	there
O	2367	2372	would
O	2373	2376	not
O	2377	2379	be
O	2380	2383	any
O	2384	2391	drastic
O	2392	2400	failures
O	2401	2403	if
O	2404	2409	casts
O	2410	2414	were
O	2415	2428	automatically
O	2429	2433	made
O	2434	2435	(
O	2435	2438	and
O	2439	2440	a
B-API	2441	2459	ClassCastException
O	2460	2463	was
O	2464	2469	still
O	2470	2476	thrown
O	2477	2479	at
O	2480	2487	runtime
O	2488	2490	in
O	2491	2495	your
O	2496	2503	example
O	2503	2504	)
O	2504	2505	.

O	2506	2509	The
O	2510	2517	benefit
O	2518	2520	of
O	2521	2530	requiring
O	2531	2533	an
O	2534	2542	explicit
O	2543	2547	cast
O	2548	2550	is
O	2551	2555	that
O	2556	2558	it
O	2559	2567	requires
O	2568	2571	the
O	2572	2577	coder
O	2578	2580	to
O	2581	2586	think
O	2587	2592	about
O	2593	2597	what
O	2598	2600	he
O	2601	2602	'
O	2603	2604	s
O	2605	2610	doing
O	2610	2611	,
O	2612	2615	and
O	2616	2618	to
O	2619	2626	realize
O	2627	2631	that
O	2632	2633	a
O	2634	2638	cast
O	2639	2641	is
O	2642	2648	taking
O	2649	2654	place
O	2654	2655	.

O	2656	2660	Also
O	2661	2666	there
O	2667	2670	are
O	2671	2680	instances
O	2681	2686	where
O	2687	2695	generics
O	2696	2701	can't
O	2702	2704	be
O	2705	2709	used
O	2710	2717	because
O	2718	2719	a
O	2720	2730	collection
O	2731	2734	can
O	2735	2739	have
O	2740	2749	different
O	2750	2756	object

O	2757	2760	You
O	2761	2764	can
O	2765	2770	still
O	2771	2774	add
O	2775	2784	different
O	2785	2792	objects
O	2793	2795	to
O	2796	2797	a
O	2798	2805	generic
O	2806	2816	collection
O	2817	2822	using
O	2823	2832	wildcards
O	2832	2833	.

O	2834	2836	As
O	2837	2843	others
O	2844	2848	have
O	2849	2853	said
O	2853	2854	,
O	2855	2864	automatic
O	2865	2877	type-casting
O	2878	2883	would
O	2884	2893	eliminate
O	2894	2898	type
O	2899	2905	safety
O	2905	2906	.

O	2907	2915	Generics
O	2916	2920	have
O	2921	2929	multiple
O	2930	2938	benefits
O	2939	2942	and
O	2943	2949	really
O	2950	2956	aren't
O	2957	2960	any
O	2961	2967	harder
O	2968	2970	to
O	2971	2978	declare
O	2978	2979	.

O	2980	2984	With
B-Fram	2985	2992	Eclipse
O	2992	2993	,
O	2994	2997	you
O	2998	3001	can
O	3002	3005	can
O	3006	3010	just
O	3011	3018	declare
O	3019	3022	the
O	3023	3030	generic
O	3031	3039	variable
O	3040	3043	and
O	3044	3048	then
O	3049	3052	use
O	3053	3066	auto-complete
O	3067	3069	on
O	3070	3073	the
O	3074	3087	instantiation
O	3088	3091	and
O	3092	3094	it
O	3095	3099	will
O	3100	3113	automatically
O	3114	3118	fill
O	3119	3121	in
O	3122	3125	the
O	3126	3130	type
O	3131	3134	you
O	3135	3139	used
O	3139	3140	.

O	3141	3145	Plus
O	3146	3149	you
O	3150	3151	(
O	3151	3153	or
O	3154	3161	perhaps
O	3162	3166	more
O	3167	3178	importantly
O	3178	3179	,
O	3180	3187	someone
O	3188	3192	else
O	3192	3193	)
O	3194	3198	have
O	3199	3202	the
O	3203	3212	advantage
O	3213	3215	of
O	3216	3224	actually
O	3225	3232	knowing
O	3233	3235	at
O	3236	3237	a
O	3238	3244	glance
O	3245	3252	exactly
O	3253	3257	what
O	3258	3261	the
O	3262	3266	list
O	3267	3269	or
O	3270	3278	whatever
O	3279	3287	contains
O	3287	3288	.

O	0	5	scope
O	6	8	of
O	9	12	the
B-API	13	18	mouse
I-API	19	26	adapter

O	27	28	I
O	29	31	am
O	32	38	wonder
O	39	43	what
O	44	47	the
O	48	53	scope
O	54	56	of
O	57	60	the
B-API	61	73	MouseAdapter
O	74	76	is
O	77	79	in
O	80	84	this
O	85	89	case
O	89	90	.

O	91	110	@codeSnippetRemoved

O	111	112	I
O	113	120	thought
O	121	124	the
B-API	125	137	MouseAdapter
O	138	141	has
O	142	148	access
O	149	151	to
O	152	155	the
O	156	164	variable
O	165	169	edit
O	170	177	because
O	178	181	the
O	182	187	newly
O	188	196	declared
B-API	197	209	MouseAdapter
O	210	212	is
O	213	215	an
O	216	221	inner
O	222	227	class
O	228	230	of
O	231	234	the
O	235	240	class
O	241	244	foo
O	244	245	.

O	246	253	However
O	253	254	,
O	255	257	it
O	258	263	can't
O	264	268	find
O	269	272	the
O	273	281	variable
O	282	286	edit
O	286	287	.

O	288	290	If
O	291	292	I
O	293	303	explicitly
O	304	311	declare
O	312	314	an
O	315	320	inner
O	321	326	class
O	327	330	and
O	331	341	implements
O	341	342	,
O	343	346	say
O	346	347	,
O	348	351	the
B-API	352	364	MouseAdapter
O	365	374	interface
O	375	377	or
O	378	386	whatever
O	386	387	,
O	388	390	it
O	391	394	can
O	395	401	detect
O	402	405	the
O	406	414	variable
O	415	419	edit
O	420	424	from
O	425	431	within
O	432	437	it.So
O	438	440	my
O	441	449	question
O	450	452	is
O	453	457	what
O	458	461	the
O	462	467	scope
O	468	471	the
O	472	475	new
B-API	476	490	MouseAdpater()
O	491	494	has
O	494	495	?

O	496	503	Besides
O	503	504	,
O	505	509	does
O	510	516	anyone
O	517	521	know
O	522	523	a
O	524	528	good
O	529	533	read
O	534	536	on
O	537	541	this
O	541	542	?

O	543	548	Thank
O	549	552	you
O	553	557	very
O	558	562	much
O	562	563	.

O	564	566	By
O	567	570	the
O	571	574	way
O	574	575	,
O	576	579	the
O	580	585	error
O	586	587	I
O	588	591	got
O	592	595	was
O	596	599	the
O	600	605	local
O	606	614	variable
O	615	618	was
O	619	627	accessed
O	628	632	from
O	633	635	an
O	636	641	inner
O	642	647	class
O	647	648	,
O	649	654	needs
O	655	657	to
O	658	665	declare
O	666	668	it
O	669	674	final

O	675	676	1
O	676	677	)
B-API	678	690	edit.getItem
O	691	692	(
O	692	693	0
O	693	694	)
O	695	702	returns
O	703	707	fist
B-API	708	717	JMenuItem
O	718	720	if
O	721	726	exist
O	726	727	,
O	728	737	otherwise
O	738	745	returns
B-API	746	770	IllegalArgumentException

O	771	772	2
O	772	773	)
B-API	774	791	this.edit.getItem
O	792	793	(
O	793	794	0
O	794	795	)
O	795	796	,
O	797	800	not
O	801	806	class
O	807	811	that
O	812	819	returns
O	820	827	members

O	828	829	3
O	829	830	)
B-API	831	843	edit.getItem
O	844	845	(
O	845	846	0
O	846	847	)
B-API	848	865	.addMouseListener
O	866	867	(
O	867	870	new
B-API	871	885	MouseAdapter()
O	886	887	{
O	888	890	is
O	891	907	contraproductive
O	907	908	,
O	909	916	becuase
B-API	917	922	JMenu
O	922	923	,
B-API	924	933	JMenuItem
O	934	937	has
O	938	949	implemented
B-API	950	961	MouseEvents
O	962	971	correctly
O	971	972	,
O	973	976	for
O	977	983	better
O	984	994	workaround
O	995	998	you
O	999	1003	have
O	1004	1006	to
O	1007	1011	look
O	1012	1014	at
B-API	1015	1026	ButtonModel

O	1027	1028	4
O	1028	1029	)
O	1030	1035	there
O	1036	1038	no
O	1039	1045	reason
O	1046	1049	for
O	1050	1055	scope
O	1056	1058	of
O	1059	1062	the
O	1063	1068	mouse
O	1069	1076	adapter

O	1077	1078	5
O	1078	1079	)
O	1080	1083	for
O	1084	1093	listening
O	1094	1096	of
O	1097	1103	events
O	1104	1108	from
B-API	1109	1114	JMenu
O	1115	1116	(
O	1116	1119	not
B-API	1120	1129	JMenuItem
O	1129	1130	)
O	1131	1135	look
O	1136	1138	at
B-API	1139	1151	MenuListener

O	1152	1156	Your
O	1157	1166	anonymous
O	1167	1172	inner
O	1173	1178	class
O	1179	1183	does
O	1184	1189	exist
O	1190	1192	in
O	1193	1196	the
O	1197	1202	scope
O	1203	1205	of
O	1206	1208	it
O	1209	1210	'
O	1211	1212	s
O	1213	1219	parent
O	1220	1226	object
O	1226	1227	,
O	1228	1230	as
O	1231	1234	you
O	1235	1247	expect.Scope
O	1248	1250	is
O	1251	1254	not
O	1255	1258	the
O	1259	1266	problem
O	1266	1267	.

O	1268	1270	As
O	1271	1274	the
O	1275	1280	error
O	1281	1288	message
O	1289	1297	suggests
O	1297	1298	,
O	1299	1302	the
O	1303	1312	anonymous
O	1313	1318	inner
O	1319	1324	class
O	1325	1328	can
O	1329	1333	only
O	1334	1340	access
O	1341	1343	it
O	1344	1345	'
O	1346	1347	s
O	1348	1354	parent
O	1355	1356	'
O	1357	1358	s
O	1359	1360	"
O	1360	1364	edit
O	1364	1365	"
O	1366	1372	member
O	1373	1375	if
O	1376	1380	that
O	1381	1387	member
O	1388	1390	is
O	1391	1399	declared
O	1400	1405	final
O	1405	1406	.

O	1407	1409	So
O	1409	1410	,
O	1411	1417	change
O	1418	1437	@codeSnippetRemoved

O	1438	1440	to
O	1441	1460	@codeSnippetRemoved

O	1461	1464	and
O	1465	1467	it
O	1468	1474	should
O	1475	1479	work
O	1479	1480	.

O	1481	1483	To
O	1484	1490	answer
O	1491	1495	your
O	1496	1504	question
O	1504	1505	,
O	1506	1509	you
O	1510	1514	need
O	1515	1517	to
O	1518	1528	understand
O	1529	1532	the
O	1533	1539	basics
O	1539	1540	,
O	1541	1543	as
O	1544	1546	to
O	1547	1550	how
O	1551	1554	the
B-Fram	1555	1558	JVM
O	1559	1562	use
O	1563	1565	to
O	1566	1575	work.When
O	1576	1579	the
O	1580	1587	classes
O	1588	1591	are
O	1592	1600	compiled
O	1601	1606	which
O	1607	1614	contain
O	1615	1620	inner
O	1621	1628	classes
O	1628	1629	,
O	1630	1633	the
O	1634	1638	byte
O	1639	1643	code
O	1644	1649	which
O	1650	1654	gets
O	1655	1664	generated
O	1665	1669	does
O	1670	1673	not
O	1674	1682	actually
O	1683	1692	implement
O	1693	1698	inner
O	1699	1706	classes
O	1707	1709	as
O	1710	1711	a
O	1712	1717	class
O	1718	1724	within
O	1725	1726	a
O	1727	1732	class
O	1732	1733	.

O	1734	1737	WHY
O	1738	1741	THE
O	1742	1747	ERROR
O	1748	1749	:
O	1750	1753	The
O	1754	1759	local
O	1760	1768	variable
O	1769	1772	was
O	1773	1781	accessed
O	1782	1786	from
O	1787	1789	an
O	1790	1795	inner
O	1796	1801	class
O	1801	1802	,
O	1803	1808	needs
O	1809	1811	to
O	1812	1819	declare
O	1820	1822	it
O	1823	1828	final
O	1829	1848	@codeSnippetRemoved

O	1849	1853	When
O	1854	1857	you
O	1858	1865	compile
O	1866	1870	your
O	1871	1875	this
O	1876	1883	program
O	1883	1884	,
O	1885	1888	two
O	1889	1894	files
O	1895	1899	will
O	1900	1902	be
O	1903	1910	created
O	1910	1911	,
O	1912	1921	Foo.class
O	1922	1925	and
O	1926	1930	Foo$
O	1931	1938	1.class
O	1938	1939	.

O	1940	1942	So
O	1943	1946	now
O	1947	1951	your
O	1952	1959	problem
O	1960	1965	comes
O	1965	1966	,
O	1967	1972	since
O	1973	1976	the
O	1977	1983	Second
O	1984	1989	class
O	1990	1994	i.e.
O	1995	1999	foo$
O	2000	2007	1.class
O	2008	2015	doesn't
O	2016	2020	know
O	2021	2025	that
O	2026	2034	Variable
O	2035	2039	edit
O	2040	2042	is
O	2043	2050	present
O	2051	2057	inside
O	2058	2061	the
O	2062	2067	First
O	2068	2073	class
O	2074	2078	i.e.
O	2079	2088	foo.class
O	2088	2089	.

O	2090	2092	So
O	2093	2096	how
O	2097	2099	to
O	2100	2105	solve
O	2106	2110	this
O	2111	2118	problem
O	2118	2119	?

O	2120	2124	What
B-Fram	2125	2128	JVM
O	2129	2133	does
O	2133	2134	,
O	2135	2137	is
O	2138	2142	that
O	2142	2143	,
O	2144	2146	It
O	2147	2152	makes
O	2153	2154	a
O	2155	2166	requirement
O	2167	2170	for
O	2171	2174	the
O	2175	2184	developer
O	2185	2187	to
O	2188	2192	make
O	2193	2196	the
O	2197	2205	variable
O	2206	2208	of
O	2209	2211	an
O	2212	2217	outer
O	2218	2223	class
O	2224	2226	to
O	2227	2229	be
O	2230	2238	declared
O	2239	2241	as
O	2242	2247	final
O	2247	2248	.

O	2249	2252	Now
O	2253	2257	this
O	2258	2263	being
O	2264	2268	done
O	2268	2269	,
O	2270	2273	now
B-Fram	2274	2277	JVM
O	2278	2285	quietly
O	2286	2292	places
O	2293	2294	a
O	2295	2301	hidden
O	2302	2310	variable
O	2311	2315	with
O	2316	2319	the
O	2320	2324	name
O	2325	2333	val$edit
O	2334	2340	inside
O	2341	2344	the
O	2345	2348	2nd
O	2349	2357	compiled
O	2358	2363	class
O	2364	2368	file
O	2368	2369	,
O	2370	2374	here
O	2375	2377	is
O	2378	2381	the
O	2382	2388	output
O	2389	2391	as
O	2392	2395	got
O	2396	2400	from
O	2401	2406	javap

O	2407	2412	Ouput
O	2413	2416	for
O	2417	2426	foo.class
O	2427	2446	@codeSnippetRemoved

O	2447	2450	Now
O	2451	2456	since
O	2456	2457	,
O	2458	2462	edit
O	2463	2465	is
O	2466	2471	local
O	2472	2474	to
O	2475	2478	the
O	2479	2490	constructor
O	2490	2491	,
O	2492	2497	hence
O	2498	2501	the
O	2502	2508	output
O	2509	2511	as
O	2512	2517	above
O	2517	2518	.

O	2519	2538	@codeSnippetRemoved

O	2539	2542	The
O	2543	2551	Variable
O	2552	2560	val$edit
O	2561	2563	is
O	2564	2572	assigned
O	2573	2576	the
O	2577	2581	same
O	2582	2587	value
O	2588	2593	which
O	2594	2597	has
O	2598	2602	been
O	2603	2611	assigned
O	2612	2614	to
O	2615	2619	edit
O	2620	2625	since
O	2626	2629	now
O	2630	2633	the
O	2634	2642	compiler
O	2643	2648	knows
O	2649	2653	that
O	2654	2657	the
O	2658	2663	value
O	2664	2670	cannot
O	2671	2673	be
O	2674	2681	changed
O	2682	2684	as
O	2685	2687	it
O	2688	2691	has
O	2692	2696	been
O	2697	2705	declared
O	2706	2711	final
O	2712	2715	and
O	2716	2721	hence
O	2722	2724	it
O	2725	2730	works
O	2731	2735	this
O	2736	2740	time
O	2740	2741	.

O	2742	2745	Now
O	2746	2750	what
O	2751	2753	if
O	2754	2755	I
O	2756	2762	change
O	2763	2766	the
O	2767	2771	edit
O	2772	2780	Variable
O	2781	2785	from
O	2786	2791	being
O	2792	2797	Local
O	2798	2800	to
O	2801	2806	being
O	2807	2815	Instance
O	2815	2816	.

O	2817	2820	Now
O	2821	2824	the
O	2825	2831	object
O	2832	2834	of
O	2835	2838	the
O	2839	2844	class
O	2845	2850	knows
O	2851	2861	everything
O	2862	2867	about
O	2868	2872	this
O	2873	2881	variable
O	2882	2886	edit
O	2886	2887	,
O	2888	2890	if
O	2891	2893	it
O	2894	2898	gets
O	2899	2906	changed
O	2906	2907	.

O	2908	2910	So
O	2911	2919	changing
O	2920	2923	the
O	2924	2929	above
O	2930	2937	program
O	2938	2946	likewise
O	2947	2949	we
O	2950	2953	get
O	2954	2955	:
O	2956	2975	@codeSnippetRemoved

O	2976	2980	Here
O	2981	2983	in
O	2984	2988	this
O	2989	2993	case
O	2993	2994	,
O	2995	2997	we
O	2998	3001	are
O	3002	3005	not
O	3006	3013	suppose
O	3014	3016	to
O	3017	3024	declare
O	3025	3028	and
O	3029	3035	define
O	3036	3038	it
O	3039	3041	as
O	3042	3047	being
O	3048	3053	final
O	3053	3054	,
O	3055	3062	because
O	3063	3065	in
O	3066	3070	this
O	3071	3075	case
O	3076	3081	since
O	3082	3085	the
O	3086	3094	Variable
O	3095	3100	being
O	3101	3106	Local
O	3107	3109	to
O	3110	3113	the
O	3114	3119	whole
O	3120	3125	class
O	3125	3126	,
O	3127	3130	the
O	3131	3139	Variable
O	3140	3142	is
O	3143	3147	send
O	3148	3150	to
O	3151	3154	the
O	3155	3160	Inner
O	3161	3166	Class
O	3167	3172	along
O	3173	3177	with
O	3178	3181	the
O	3182	3188	Object
O	3189	3198	Reference
O	3199	3203	i.e.
O	3204	3208	this
O	3209	3228	@codeSnippetRemoved

O	3229	3233	Here
O	3234	3236	is
O	3237	3240	how
O	3241	3244	the
O	3245	3253	Variable
O	3254	3256	is
O	3257	3261	send
O	3262	3264	in
O	3265	3269	this
O	3270	3274	case
O	3275	3279	i.e.
O	3280	3286	this$0
O	3287	3288	:
O	3289	3308	@codeSnippetRemoved

O	3309	3314	Seems
O	3315	3319	like
O	3320	3324	that
O	3325	3328	the
O	3329	3343	interpretation
O	3343	3344	,
O	3345	3348	how
O	3349	3353	this
O	3354	3363	situation
O	3364	3369	works
O	3369	3370	,
O	3371	3380	according
O	3381	3383	to
O	3384	3391	me.Just
O	3392	3395	now
O	3396	3397	I
O	3398	3403	found
O	3404	3408	this
O	3409	3418	wonderful
O	3419	3430	explanation
O	3431	3433	on
O	3434	3437	the
O	3438	3446	internet
O	3447	3456	regarding
O	3457	3464	Mystery
O	3465	3467	of
O	3468	3481	Accessibility
O	3482	3484	in
O	3485	3490	Local
O	3491	3496	Inner
O	3497	3504	Classes
O	3504	3505	,
O	3506	3511	might
O	3512	3514	be
O	3515	3519	this
O	3520	3524	will
O	3525	3529	help
O	3530	3533	you
O	3534	3544	understand
O	3545	3548	the
O	3549	3558	situation
O	3559	3561	in
O	3562	3563	a
O	3564	3568	much
O	3569	3575	better
O	3576	3579	way
O	3580	3583	:-)

