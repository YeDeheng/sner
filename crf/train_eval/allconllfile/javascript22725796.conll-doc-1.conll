O	0	2	My
B-PL	3	13	JavaScript
O	14	18	loop
O	19	21	is
O	22	24	an
O	25	33	infinite
O	34	38	loop
O	38	39	?

O	40	43	I'm
O	44	47	new
O	48	50	to
O	51	62	programming
O	62	63	,
O	64	66	so
O	67	73	please
O	74	79	don't
O	80	82	be
O	83	88	harsh
O	89	93	with
O	94	96	my
O	97	103	skills
O	103	104	.

O	105	112	Anyways
O	112	113	,
O	114	118	here
O	119	121	is
O	122	124	my
O	125	129	code
O	129	130	,
O	131	134	I'm
O	135	145	attempting
O	146	148	to
O	149	153	make
O	154	155	a
O	156	162	simple
O	163	172	countdown
O	173	177	loop
O	177	178	.

O	179	198	@codeSnippetRemoved

O	199	203	What
O	204	207	did
O	208	209	I
O	210	212	do
O	213	218	wrong
O	218	219	?

B-PL	220	230	Javascript
O	231	234	has
O	235	249	function-level
O	250	255	block
O	256	265	execution
O	265	266	.

O	267	270	One
O	271	279	function
O	280	284	runs
O	285	287	to
O	288	298	completion
O	299	305	before
O	306	313	another
O	314	322	function
O	323	325	is
O	326	331	given
O	332	339	ability
O	340	342	to
O	343	350	execute
O	350	351	.

O	352	356	Your
O	357	362	while
O	363	367	loop
O	368	370	is
O	371	382	maintaining
O	383	386	the
O	387	396	execution
O	397	402	baton
O	402	403	,
O	404	406	so
O	407	410	the
O	411	416	other
O	417	426	functions
O	427	429	in
B-API	430	440	setTimeout
O	441	444	are
O	445	450	never
O	451	456	given
O	457	458	a
O	459	465	chance
O	465	466	.

O	467	475	although
B-PL	476	486	javascript
O	487	489	is
O	490	496	called
O	497	508	asynchonous
O	509	511	in
O	512	516	this
O	517	521	case
O	522	524	it
O	525	529	does
O	530	533	not
O	534	538	call
O	539	542	the
O	543	551	subtract
O	552	560	function
O	561	566	until
O	567	570	the
O	571	576	first
O	577	580	one
O	581	583	is
O	584	592	finished
O	592	593	.

O	594	595	(
O	595	602	details
O	603	651	http://ejohn.org/blog/how-javascript-timers-work
O	651	652	)

O	653	657	this
O	658	664	should
O	665	669	work
O	670	689	@codeSnippetRemoved

O	690	694	When
O	695	700	using
O	701	704	the
B-API	705	715	setTimeout
O	716	724	function
O	725	728	you
O	729	736	actualy
O	737	741	call
O	742	743	a
O	744	752	function
O	753	758	after
O	759	760	X
O	761	772	miliseconds
O	773	774	(
O	774	776	in
O	777	781	this
O	782	786	case
O	787	793	X=1000
O	793	794	,
O	795	800	which
O	801	803	is
O	804	805	1
O	806	812	second
O	812	813	)
O	813	814	.

O	815	816	'
O	817	822	While
O	823	824	'
O	825	827	is
O	828	831	the
O	832	840	function
O	841	844	you
O	845	849	want
O	850	852	to
O	853	855	do
O	856	859	the
O	860	869	countdown
O	870	874	with
O	874	875	,
O	876	881	right
O	881	882	?

O	883	885	So
O	886	888	in
O	889	893	your
O	894	902	subtract
O	903	911	function
O	912	916	just
O	917	922	write
O	923	924	:
O	925	944	@codeSnippetRemoved

O	945	948	You
O	949	952	can
O	953	957	also
O	958	962	drop
O	963	966	the
O	967	975	subtract
O	976	984	function
O	985	988	and
O	989	993	just
O	994	999	write
O	1000	1001	:
O	1002	1021	@codeSnippetRemoved

O	1022	1024	Or
O	1025	1029	drop
O	1030	1033	the
O	1034	1039	while
O	1040	1048	function
O	1049	1050	:
O	1051	1070	@codeSnippetRemoved

B-API	1071	1082	setInterval
O	1083	1085	is
O	1086	1089	the
O	1090	1098	function
O	1099	1101	to
O	1102	1105	set
O	1106	1107	a
O	1108	1116	function
O	1117	1119	to
O	1120	1123	run
O	1124	1136	periodically
O	1136	1137	.
O	1138	1205	https://developer.mozilla.org/en-US/docs/Web/API/Window.setInterval
O	1206	1225	@codeSnippetRemoved
