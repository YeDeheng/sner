O	0	7	binding
O	8	13	local
O	14	23	variables
O	24	26	in
B-PL	27	33	python

O	34	35	I
O	36	42	wonder
O	43	45	if
O	46	51	there
O	52	54	is
O	55	56	a
O	57	61	good
O	62	65	way
O	66	68	to
O	69	73	bind
O	74	79	local
O	80	89	variables
O	90	92	in
B-PL	93	99	python
O	99	100	.

O	101	105	Most
O	106	108	of
O	109	111	my
O	112	116	work
O	117	125	involves
O	126	134	cobbling
O	135	143	together
O	144	149	short
O	150	154	data
O	155	157	or
O	158	162	text
O	163	173	processing
O	174	181	scripts
O	182	186	with
O	187	188	a
O	189	195	series
O	196	198	of
O	199	210	expressions
O	211	212	(
O	212	216	when
B-PL	217	223	python
O	224	231	permits
O	231	232	)
O	232	233	,
O	234	236	so
O	237	245	defining
O	246	252	object
O	253	260	classes
O	261	262	(
O	262	264	to
O	265	268	use
O	269	271	as
O	272	282	namespaces
O	282	283	)
O	284	287	and
O	288	301	instantiating
O	302	306	them
O	307	312	seems
O	313	314	a
O	315	318	bit
O	319	323	much
O	323	324	.

O	325	327	So
O	328	332	what
O	333	334	I
O	335	338	had
O	339	341	in
O	342	346	mind
O	347	350	was
O	351	360	something
O	361	365	like
O	366	368	in
O	369	370	(
O	370	376	common
O	376	377	)
B-PL	378	382	lisp
O	382	383	,
O	384	389	where
O	390	393	you
O	394	399	could
O	400	402	do
O	403	412	something
O	413	417	like
O	418	437	@codeSnippetRemoved

O	438	440	In
B-PL	441	447	python
O	447	448	,
O	449	452	the
O	453	457	best
O	458	459	I
O	460	465	could
O	466	470	come
O	471	473	up
O	474	478	with
O	479	481	is
O	482	501	@codeSnippetRemoved

O	502	507	These
O	508	511	are
O	511	512	,
O	513	515	of
O	516	522	course
O	522	523	,
O	524	528	very
O	529	535	simple
O	536	544	examples
O	545	548	but
O	549	554	might
O	555	560	there
O	561	563	be
O	564	573	something
O	574	578	that
O	579	581	is
O	582	584	as
O	585	593	scalable
O	594	596	as
O	597	600	let
O	601	603	or
O	604	607	let
O	608	609	*
O	610	612	in
B-PL	613	617	lisp
O	617	618	?

O	619	622	Are
O	623	631	defining
O	632	639	classes
O	640	643	the
O	644	648	best
O	649	652	way
O	653	655	to
O	656	658	go
O	659	661	to
O	662	668	create
O	669	670	a
O	671	676	local
O	677	686	namespace
O	687	691	?...

O	692	693	(
O	693	696	but
O	697	702	feels
O	703	704	a
O	705	711	little
O	712	716	less
O	717	728	interactive
O	729	733	that
O	734	737	way
O	737	738	)

O	739	743	Edit
O	744	745	:
O	746	748	So
O	749	751	to
O	752	759	further
O	760	767	explain
O	768	771	the
O	772	781	intention
O	782	783	(
O	783	785	my
O	786	795	apologies
O	796	799	for
O	800	809	vagueness
O	809	810	)
O	810	811	,
O	812	813	I
O	814	818	want
O	819	821	to
O	822	828	reduce
O	829	832	the
O	833	836	use
O	837	839	of
O	840	846	global
O	847	856	variables
O	856	857	.

O	858	860	So
O	861	863	in
O	864	867	the
O	868	872	case
O	873	878	above
O	878	879	,
O	880	881	I
O	882	887	meant
O	888	890	to
O	891	894	use
O	895	898	the
O	899	909	extraction
O	910	918	operator
O	919	921	as
O	922	923	a
O	924	931	general
O	932	936	case
O	937	939	of
O	940	943	any
O	944	948	type
O	949	951	of
O	952	961	operation
O	962	966	that
O	967	972	might
O	973	976	not
O	977	981	want
O	982	984	to
O	985	987	be
O	988	996	repeated
O	996	997	.

O	998	1001	For
O	1002	1010	instance
O	1010	1011	,
O	1012	1015	one
O	1016	1021	might
O	1022	1027	write
O	1028	1034	either
O	1035	1054	@codeSnippetRemoved

O	1055	1057	or
O	1058	1077	@codeSnippetRemoved

O	1078	1080	to
O	1081	1091	accomplish
O	1092	1095	the
O	1096	1100	same
O	1101	1107	result
O	1107	1108	.

O	1109	1111	In
O	1112	1119	essence
O	1119	1120	,
O	1121	1123	if
O	1124	1127	the
O	1128	1135	desired
O	1136	1145	operation
O	1146	1148	on
O	1149	1150	'
O	1151	1155	data
O	1156	1157	'
O	1158	1160	is
O	1161	1165	more
O	1166	1177	complicated
O	1178	1182	then
O	1183	1190	getting
O	1191	1194	the
O	1195	1201	second
O	1202	1206	item
O	1206	1207	,
O	1208	1209	I
O	1210	1218	wouldn't
O	1219	1223	want
O	1224	1226	to
O	1227	1231	type
O	1232	1234	it
O	1235	1238	out
O	1239	1247	multiple
O	1248	1253	times
O	1253	1254	,
O	1255	1257	or
O	1258	1261	let
O	1262	1265	the
O	1266	1274	computer
O	1275	1282	compute
O	1283	1286	the
O	1287	1292	value
O	1293	1295	of
O	1296	1299	the
O	1300	1304	same
O	1305	1315	expression
O	1316	1320	more
O	1321	1326	times
O	1327	1331	than
O	1332	1341	necessary
O	1341	1342	.

O	1343	1345	So
O	1346	1348	in
O	1349	1353	most
O	1354	1359	cases
O	1360	1363	one
O	1364	1369	would
O	1370	1376	assign
O	1377	1380	the
O	1381	1387	result
O	1388	1390	of
O	1391	1394	the
O	1395	1404	operation
O	1404	1405	,
O	1406	1408	in
O	1409	1413	this
O	1414	1418	case
O	1418	1419	,
O	1420	1427	data[2]
O	1427	1428	,
O	1429	1431	or
B-API	1432	1451	operator.itemgetter
O	1452	1453	(
O	1453	1454	2
O	1454	1455	)
O	1456	1457	(
O	1457	1461	data
O	1461	1462	)
O	1462	1463	,
O	1464	1466	to
O	1467	1471	some
O	1472	1480	variable
O	1481	1483	in
O	1484	1487	the
O	1488	1494	global
O	1495	1500	space
O	1500	1501	,
O	1502	1505	but
O	1506	1507	I
O	1508	1512	have
O	1513	1515	an
O	1516	1524	aversion
O	1525	1527	to
O	1528	1535	leaving
O	1536	1545	variables
O	1546	1552	around
O	1553	1555	in
O	1556	1559	the
O	1560	1566	global
O	1567	1572	space
O	1573	1575	if
O	1576	1580	they
O	1581	1585	were
O	1586	1590	only
O	1591	1600	necessary
O	1601	1603	to
O	1604	1609	store
O	1610	1622	intermediate
O	1623	1629	values
O	1630	1632	in
O	1633	1634	a
O	1635	1646	computation
O	1647	1650	...
O	1651	1656	hence
O	1657	1660	the
O	1661	1664	use
O	1665	1667	of
O	1668	1671	the
O	1672	1673	'
O	1674	1677	del
O	1678	1679	'
O	1680	1687	command
O	1688	1699	immediately
O	1700	1710	afterwards
O	1710	1711	.

O	1712	1720	Defining
O	1721	1722	a
O	1723	1728	local
O	1729	1740	environment
O	1741	1743	or
O	1744	1753	namespace
O	1754	1757	and
O	1758	1765	binding
O	1766	1778	intermediate
O	1779	1786	results
O	1787	1789	to
O	1790	1795	local
O	1796	1805	variables
O	1806	1811	would
O	1812	1814	be
O	1815	1817	an
O	1818	1823	ideal
O	1824	1835	alternative
O	1835	1836	.

O	1837	1840	Not
O	1841	1847	really
O	1848	1855	knowing
B-PL	1856	1860	Lisp
O	1860	1861	,
O	1862	1863	I
O	1864	1869	can't
O	1870	1873	see
O	1874	1878	what
O	1879	1885	you're
O	1886	1892	trying
O	1893	1895	to
O	1896	1898	do
O	1899	1903	here
O	1903	1904	.

O	1905	1908	But
O	1909	1910	I
O	1911	1916	would
O	1917	1920	say
O	1921	1925	that
O	1926	1928	in
O	1929	1936	general
O	1937	1940	you
O	1941	1947	should
O	1948	1951	not
O	1952	1955	try
O	1956	1958	to
O	1959	1964	write
B-PL	1965	1971	Python
O	1972	1974	as
O	1975	1977	if
O	1978	1980	it
O	1981	1985	were
B-PL	1986	1990	Lisp
O	1990	1991	,
O	1992	1994	or
O	1995	2001	indeed
O	2002	2005	any
O	2006	2014	language
O	2015	2017	as
O	2018	2020	if
O	2021	2023	it
O	2024	2028	were
O	2029	2032	any
O	2033	2038	other
O	2039	2047	language
O	2047	2048	.

O	2049	2053	I've
O	2054	2058	been
O	2059	2070	programming
O	2071	2073	in
B-PL	2074	2080	Python
O	2081	2084	for
O	2085	2089	five
O	2090	2095	years
O	2096	2099	and
O	2100	2104	I've
O	2105	2110	never
O	2111	2115	seen
O	2116	2117	a
O	2118	2122	need
O	2123	2125	to
O	2126	2128	do
O	2129	2133	what
O	2134	2140	you're
O	2141	2147	trying
O	2148	2153	above
O	2153	2154	.

O	2155	2158	Can
O	2159	2162	you
O	2163	2167	give
O	2168	2170	an
O	2171	2178	example
O	2179	2181	of
O	2182	2183	a
O	2184	2187	use
O	2188	2192	case
O	2193	2196	for
O	2197	2200	the
O	2201	2206	above
O	2207	2208	-
O	2209	2213	what
O	2214	2217	are
O	2218	2221	you
O	2222	2230	actually
O	2231	2237	trying
O	2238	2240	to
O	2241	2243	do
O	2243	2244	,
O	2245	2247	in
O	2248	2253	terms
O	2254	2256	of
O	2257	2260	the
O	2261	2264	end
O	2265	2271	result
O	2271	2272	?

O	2273	2278	Maybe
O	2279	2283	then
O	2284	2286	we
O	2287	2290	can
O	2291	2297	advise
O	2298	2301	you
O	2302	2304	on
O	2305	2308	the
O	2309	2313	best
O	2314	2317	way
O	2318	2320	to
O	2321	2323	do
O	2324	2326	it
O	2327	2329	in
B-PL	2330	2336	Python
O	2336	2337	,
O	2338	2344	rather
O	2345	2349	than
B-PL	2350	2354	Lisp
O	2354	2355	.

O	2356	2358	It
O	2359	2360	'
O	2361	2362	s
O	2363	2364	a
O	2365	2368	bit
O	2369	2376	unclear
O	2377	2381	what
O	2382	2385	you
O	2386	2389	are
O	2390	2396	asking
O	2396	2397	,
O	2398	2401	bit
O	2402	2406	I'll
O	2407	2410	try
O	2411	2413	to
O	2414	2420	answer
O	2421	2427	anyway
O	2428	2429	:

O	2430	2433	You
O	2434	2438	bind
O	2439	2448	variables
O	2449	2451	to
O	2452	2457	names
O	2458	2462	with
O	2463	2464	=
O	2465	2467	in
B-PL	2468	2474	Python
O	2474	2475	.

O	2476	2478	So
O	2479	2483	your
O	2484	2488	data
O	2489	2490	=
O	2491	2492	[
O	2493	2494	1
O	2494	2495	,
O	2496	2497	2
O	2497	2498	,
O	2499	2500	3
O	2501	2502	]
O	2503	2508	binds
O	2509	2512	the
O	2513	2517	list
O	2518	2519	[
O	2520	2521	1
O	2521	2522	,
O	2523	2524	2
O	2524	2525	,
O	2526	2527	3
O	2528	2529	]
O	2530	2532	to
O	2533	2536	the
O	2537	2541	name
O	2542	2546	data
O	2546	2547	.

O	2548	2551	You
O	2552	2555	can
O	2556	2562	create
O	2563	2568	local
O	2569	2579	namespaces
O	2580	2584	with
O	2585	2592	classes
O	2593	2596	and
O	2597	2606	functions
O	2607	2608	/
O	2609	2616	methods
O	2616	2617	.

O	2618	2621	The
O	2622	2629	closest
O	2630	2633	you
O	2634	2637	get
O	2638	2640	so
O	2641	2650	something
O	2651	2653	as
O	2654	2662	powerful
O	2663	2665	as
O	2666	2669	let
O	2670	2672	is
O	2673	2681	probably
O	2682	2685	def
O	2686	2689	and
O	2690	2696	lambda
O	2696	2697	.

B-PL	2698	2704	Python
O	2705	2707	is
O	2708	2709	(
O	2709	2716	despite
O	2717	2722	where
O	2723	2727	some
O	2728	2734	people
O	2735	2738	try
O	2739	2741	to
O	2742	2746	tell
O	2747	2750	you
O	2750	2751	)
O	2752	2755	not
B-PL	2756	2760	Lisp
O	2760	2761	,
O	2762	2765	and
O	2766	2769	not
O	2770	2782	particularly
O	2783	2793	functional
O	2793	2794	,
O	2795	2797	so
O	2798	2801	you
O	2802	2806	will
O	2807	2811	have
O	2812	2814	to
O	2815	2820	adapt
O	2821	2825	your
O	2826	2833	mindset
O	2834	2835	a
O	2836	2839	bit
O	2839	2840	.

O	2841	2847	Update
O	2848	2849	:
O	2850	2852	Ah
O	2852	2853	,
O	2854	2855	I
O	2856	2859	see
O	2860	2864	what
O	2865	2868	you
O	2869	2873	mean
O	2874	2877	now
O	2877	2878	.

O	2879	2882	All
O	2883	2892	variables
O	2893	2896	are
O	2897	2903	pretty
O	2904	2908	much
O	2909	2914	local
O	2915	2917	in
B-PL	2918	2924	Python
O	2924	2925	.

O	2926	2929	The
O	2930	2937	nearest
O	2938	2941	you
O	2942	2945	get
O	2946	2948	to
O	2949	2955	global
O	2956	2965	variables
O	2966	2969	are
O	2970	2979	variables
O	2980	2987	defined
O	2988	2990	in
O	2991	2997	module
O	2998	3003	space
O	3003	3004	,
O	3005	3012	because
O	3013	3016	you
O	3017	3020	can
O	3021	3027	access
O	3028	3032	them
O	3033	3037	with
O	3038	3042	from
O	3043	3049	module
O	3050	3056	import
O	3057	3065	variable
O	3065	3066	.

O	3067	3070	You
O	3071	3075	also
O	3076	3079	can
O	3080	3086	access
O	3087	3091	them
O	3092	3096	from
O	3097	3105	wherever
O	3106	3108	in
O	3109	3112	the
O	3113	3119	module
O	3119	3120	,
O	3121	3124	but
O	3125	3128	not
O	3129	3135	modify
O	3136	3140	them
O	3141	3142	(
O	3142	3148	unless
O	3149	3152	you
O	3153	3156	say
O	3157	3161	that
O	3162	3165	you
O	3166	3170	want
O	3171	3173	to
O	3174	3180	modify
O	3181	3185	them
O	3186	3190	with
O	3191	3194	the
O	3195	3201	global
O	3202	3209	keyword
O	3209	3210	.

O	3211	3219	Anything
O	3220	3223	you
O	3224	3230	define
O	3231	3233	in
O	3234	3235	a
O	3236	3244	function
O	3245	3246	/
O	3247	3253	method
O	3254	3256	or
O	3257	3262	class
O	3263	3273	definition
O	3273	3274	,
O	3275	3279	will
O	3280	3284	only
O	3285	3287	be
O	3288	3298	accessible
O	3299	3303	from
O	3304	3308	that
O	3309	3318	namespace
O	3318	3319	.

O	3320	3322	So
O	3323	3325	in
O	3326	3331	short
O	3332	3333	:
O	3334	3337	you
O	3338	3343	don't
O	3344	3348	have
O	3349	3351	to
O	3352	3357	worry
O	3358	3363	about
O	3364	3367	the
O	3368	3374	things
O	3375	3378	you
O	3379	3384	worry
O	3385	3390	about
O	3391	3394	now
O	3394	3395	.

B-PL	3396	3402	Python
O	3403	3408	takes
O	3409	3413	care
O	3414	3416	of
O	3417	3419	it
O	3420	3423	for
O	3424	3427	you
O	3427	3428	.

O	3429	3431	:)

O	3432	3433	I
O	3434	3437	can
O	3438	3442	only
O	3443	3449	second
O	3450	3457	Lennart
O	3458	3461	and
O	3462	3468	Daniel
O	3469	3470	-
B-PL	3471	3477	Python
O	3478	3480	is
O	3481	3484	not
B-PL	3485	3489	Lisp
O	3489	3490	,
O	3491	3494	and
O	3495	3501	trying
O	3502	3504	to
O	3505	3510	write
O	3511	3519	language
O	3520	3521	X
O	3522	3526	into
O	3527	3535	language
O	3536	3537	Y
O	3538	3540	is
O	3541	3548	usually
O	3549	3560	inefficient
O	3561	3564	and
O	3565	3576	frustrating
O	3577	3579	at
O	3580	3584	best
O	3584	3585	.

O	3586	3591	First
O	3592	3597	point
O	3598	3599	:
O	3600	3604	your
O	3605	3612	example
O	3613	3617	code
O	3618	3637	@codeSnippetRemoved

O	3638	3643	would
O	3644	3646	be
O	3647	3651	much
O	3652	3656	more
O	3657	3665	readable
O	3666	3668	as
O	3669	3670	:
O	3671	3690	@codeSnippetRemoved

O	3691	3694	but
O	3695	3701	anyway
O	3701	3702	,
O	3703	3705	in
O	3706	3710	this
O	3711	3719	concrete
O	3720	3724	case
O	3724	3725	,
O	3726	3731	using
O	3732	3733	a
O	3734	3740	lambda
O	3741	3743	is
O	3744	3749	total
O	3750	3758	overkill
O	3758	3759	,
O	3760	3779	overcomplexificated
O	3779	3780	,
O	3781	3784	and
O	3785	3791	mostly
O	3792	3803	inefficient
O	3803	3804	.

O	3805	3806	A
O	3807	3816	braindead
O	3817	3836	@codeSnippetRemoved
