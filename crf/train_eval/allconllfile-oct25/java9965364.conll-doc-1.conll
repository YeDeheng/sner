O	0	5	scope
O	6	8	of
O	9	12	the
B-API	13	18	mouse
I-API	19	26	adapter

O	27	28	I
O	29	31	am
O	32	38	wonder
O	39	43	what
O	44	47	the
O	48	53	scope
O	54	56	of
O	57	60	the
B-API	61	73	MouseAdapter
O	74	76	is
O	77	79	in
O	80	84	this
O	85	89	case
O	89	90	.

O	91	110	@codeSnippetRemoved

O	111	112	I
O	113	120	thought
O	121	124	the
B-API	125	137	MouseAdapter
O	138	141	has
O	142	148	access
O	149	151	to
O	152	155	the
O	156	164	variable
O	165	169	edit
O	170	177	because
O	178	181	the
O	182	187	newly
O	188	196	declared
B-API	197	209	MouseAdapter
O	210	212	is
O	213	215	an
O	216	221	inner
O	222	227	class
O	228	230	of
O	231	234	the
O	235	240	class
O	241	244	foo
O	244	245	.

O	246	253	However
O	253	254	,
O	255	257	it
O	258	263	can't
O	264	268	find
O	269	272	the
O	273	281	variable
O	282	286	edit
O	286	287	.

O	288	290	If
O	291	292	I
O	293	303	explicitly
O	304	311	declare
O	312	314	an
O	315	320	inner
O	321	326	class
O	327	330	and
O	331	341	implements
O	341	342	,
O	343	346	say
O	346	347	,
O	348	351	the
B-API	352	364	MouseAdapter
O	365	374	interface
O	375	377	or
O	378	386	whatever
O	386	387	,
O	388	390	it
O	391	394	can
O	395	401	detect
O	402	405	the
O	406	414	variable
O	415	419	edit
O	420	424	from
O	425	431	within
O	432	437	it.So
O	438	440	my
O	441	449	question
O	450	452	is
O	453	457	what
O	458	461	the
O	462	467	scope
O	468	471	the
O	472	475	new
B-API	476	490	MouseAdpater()
O	491	494	has
O	494	495	?

O	496	503	Besides
O	503	504	,
O	505	509	does
O	510	516	anyone
O	517	521	know
O	522	523	a
O	524	528	good
O	529	533	read
O	534	536	on
O	537	541	this
O	541	542	?

O	543	548	Thank
O	549	552	you
O	553	557	very
O	558	562	much
O	562	563	.

O	564	566	By
O	567	570	the
O	571	574	way
O	574	575	,
O	576	579	the
O	580	585	error
O	586	587	I
O	588	591	got
O	592	595	was
O	596	599	the
O	600	605	local
O	606	614	variable
O	615	618	was
O	619	627	accessed
O	628	632	from
O	633	635	an
O	636	641	inner
O	642	647	class
O	647	648	,
O	649	654	needs
O	655	657	to
O	658	665	declare
O	666	668	it
O	669	674	final

O	675	676	1
O	676	677	)
B-API	678	690	edit.getItem
O	691	692	(
O	692	693	0
O	693	694	)
O	695	702	returns
O	703	707	fist
B-API	708	717	JMenuItem
O	718	720	if
O	721	726	exist
O	726	727	,
O	728	737	otherwise
O	738	745	returns
B-API	746	770	IllegalArgumentException

O	771	772	2
O	772	773	)
B-API	774	791	this.edit.getItem
O	792	793	(
O	793	794	0
O	794	795	)
O	795	796	,
O	797	800	not
O	801	806	class
O	807	811	that
O	812	819	returns
O	820	827	members

O	828	829	3
O	829	830	)
B-API	831	843	edit.getItem
O	844	845	(
O	845	846	0
O	846	847	)
B-API	848	865	.addMouseListener
O	866	867	(
O	867	870	new
B-API	871	885	MouseAdapter()
O	886	887	{
O	888	890	is
O	891	907	contraproductive
O	907	908	,
O	909	916	becuase
B-API	917	922	JMenu
O	922	923	,
B-API	924	933	JMenuItem
O	934	937	has
O	938	949	implemented
B-API	950	961	MouseEvents
O	962	971	correctly
O	971	972	,
O	973	976	for
O	977	983	better
O	984	994	workaround
O	995	998	you
O	999	1003	have
O	1004	1006	to
O	1007	1011	look
O	1012	1014	at
B-API	1015	1026	ButtonModel

O	1027	1028	4
O	1028	1029	)
O	1030	1035	there
O	1036	1038	no
O	1039	1045	reason
O	1046	1049	for
O	1050	1055	scope
O	1056	1058	of
O	1059	1062	the
O	1063	1068	mouse
O	1069	1076	adapter

O	1077	1078	5
O	1078	1079	)
O	1080	1083	for
O	1084	1093	listening
O	1094	1096	of
O	1097	1103	events
O	1104	1108	from
B-API	1109	1114	JMenu
O	1115	1116	(
O	1116	1119	not
B-API	1120	1129	JMenuItem
O	1129	1130	)
O	1131	1135	look
O	1136	1138	at
B-API	1139	1151	MenuListener

O	1152	1156	Your
O	1157	1166	anonymous
O	1167	1172	inner
O	1173	1178	class
O	1179	1183	does
O	1184	1189	exist
O	1190	1192	in
O	1193	1196	the
O	1197	1202	scope
O	1203	1205	of
O	1206	1208	it
O	1209	1210	'
O	1211	1212	s
O	1213	1219	parent
O	1220	1226	object
O	1226	1227	,
O	1228	1230	as
O	1231	1234	you
O	1235	1247	expect.Scope
O	1248	1250	is
O	1251	1254	not
O	1255	1258	the
O	1259	1266	problem
O	1266	1267	.

O	1268	1270	As
O	1271	1274	the
O	1275	1280	error
O	1281	1288	message
O	1289	1297	suggests
O	1297	1298	,
O	1299	1302	the
O	1303	1312	anonymous
O	1313	1318	inner
O	1319	1324	class
O	1325	1328	can
O	1329	1333	only
O	1334	1340	access
O	1341	1343	it
O	1344	1345	'
O	1346	1347	s
O	1348	1354	parent
O	1355	1356	'
O	1357	1358	s
O	1359	1360	"
O	1360	1364	edit
O	1364	1365	"
O	1366	1372	member
O	1373	1375	if
O	1376	1380	that
O	1381	1387	member
O	1388	1390	is
O	1391	1399	declared
O	1400	1405	final
O	1405	1406	.

O	1407	1409	So
O	1409	1410	,
O	1411	1417	change
O	1418	1437	@codeSnippetRemoved

O	1438	1440	to
O	1441	1460	@codeSnippetRemoved

O	1461	1464	and
O	1465	1467	it
O	1468	1474	should
O	1475	1479	work
O	1479	1480	.

O	1481	1483	To
O	1484	1490	answer
O	1491	1495	your
O	1496	1504	question
O	1504	1505	,
O	1506	1509	you
O	1510	1514	need
O	1515	1517	to
O	1518	1528	understand
O	1529	1532	the
O	1533	1539	basics
O	1539	1540	,
O	1541	1543	as
O	1544	1546	to
O	1547	1550	how
O	1551	1554	the
B-Fram	1555	1558	JVM
O	1559	1562	use
O	1563	1565	to
O	1566	1575	work.When
O	1576	1579	the
O	1580	1587	classes
O	1588	1591	are
O	1592	1600	compiled
O	1601	1606	which
O	1607	1614	contain
O	1615	1620	inner
O	1621	1628	classes
O	1628	1629	,
O	1630	1633	the
O	1634	1638	byte
O	1639	1643	code
O	1644	1649	which
O	1650	1654	gets
O	1655	1664	generated
O	1665	1669	does
O	1670	1673	not
O	1674	1682	actually
O	1683	1692	implement
O	1693	1698	inner
O	1699	1706	classes
O	1707	1709	as
O	1710	1711	a
O	1712	1717	class
O	1718	1724	within
O	1725	1726	a
O	1727	1732	class
O	1732	1733	.

O	1734	1737	WHY
O	1738	1741	THE
O	1742	1747	ERROR
O	1748	1749	:
O	1750	1753	The
O	1754	1759	local
O	1760	1768	variable
O	1769	1772	was
O	1773	1781	accessed
O	1782	1786	from
O	1787	1789	an
O	1790	1795	inner
O	1796	1801	class
O	1801	1802	,
O	1803	1808	needs
O	1809	1811	to
O	1812	1819	declare
O	1820	1822	it
O	1823	1828	final
O	1829	1848	@codeSnippetRemoved

O	1849	1853	When
O	1854	1857	you
O	1858	1865	compile
O	1866	1870	your
O	1871	1875	this
O	1876	1883	program
O	1883	1884	,
O	1885	1888	two
O	1889	1894	files
O	1895	1899	will
O	1900	1902	be
O	1903	1910	created
O	1910	1911	,
O	1912	1921	Foo.class
O	1922	1925	and
O	1926	1930	Foo$
O	1931	1938	1.class
O	1938	1939	.

O	1940	1942	So
O	1943	1946	now
O	1947	1951	your
O	1952	1959	problem
O	1960	1965	comes
O	1965	1966	,
O	1967	1972	since
O	1973	1976	the
O	1977	1983	Second
O	1984	1989	class
O	1990	1994	i.e.
O	1995	1999	foo$
O	2000	2007	1.class
O	2008	2015	doesn't
O	2016	2020	know
O	2021	2025	that
O	2026	2034	Variable
O	2035	2039	edit
O	2040	2042	is
O	2043	2050	present
O	2051	2057	inside
O	2058	2061	the
O	2062	2067	First
O	2068	2073	class
O	2074	2078	i.e.
O	2079	2088	foo.class
O	2088	2089	.

O	2090	2092	So
O	2093	2096	how
O	2097	2099	to
O	2100	2105	solve
O	2106	2110	this
O	2111	2118	problem
O	2118	2119	?

O	2120	2124	What
B-Fram	2125	2128	JVM
O	2129	2133	does
O	2133	2134	,
O	2135	2137	is
O	2138	2142	that
O	2142	2143	,
O	2144	2146	It
O	2147	2152	makes
O	2153	2154	a
O	2155	2166	requirement
O	2167	2170	for
O	2171	2174	the
O	2175	2184	developer
O	2185	2187	to
O	2188	2192	make
O	2193	2196	the
O	2197	2205	variable
O	2206	2208	of
O	2209	2211	an
O	2212	2217	outer
O	2218	2223	class
O	2224	2226	to
O	2227	2229	be
O	2230	2238	declared
O	2239	2241	as
O	2242	2247	final
O	2247	2248	.

O	2249	2252	Now
O	2253	2257	this
O	2258	2263	being
O	2264	2268	done
O	2268	2269	,
O	2270	2273	now
B-Fram	2274	2277	JVM
O	2278	2285	quietly
O	2286	2292	places
O	2293	2294	a
O	2295	2301	hidden
O	2302	2310	variable
O	2311	2315	with
O	2316	2319	the
O	2320	2324	name
O	2325	2333	val$edit
O	2334	2340	inside
O	2341	2344	the
O	2345	2348	2nd
O	2349	2357	compiled
O	2358	2363	class
O	2364	2368	file
O	2368	2369	,
O	2370	2374	here
O	2375	2377	is
O	2378	2381	the
O	2382	2388	output
O	2389	2391	as
O	2392	2395	got
O	2396	2400	from
B-API	2401	2406	javap

O	2407	2412	Ouput
O	2413	2416	for
O	2417	2426	foo.class
O	2427	2446	@codeSnippetRemoved

O	2447	2450	Now
O	2451	2456	since
O	2456	2457	,
O	2458	2462	edit
O	2463	2465	is
O	2466	2471	local
O	2472	2474	to
O	2475	2478	the
O	2479	2490	constructor
O	2490	2491	,
O	2492	2497	hence
O	2498	2501	the
O	2502	2508	output
O	2509	2511	as
O	2512	2517	above
O	2517	2518	.

O	2519	2538	@codeSnippetRemoved

O	2539	2542	The
O	2543	2551	Variable
O	2552	2560	val$edit
O	2561	2563	is
O	2564	2572	assigned
O	2573	2576	the
O	2577	2581	same
O	2582	2587	value
O	2588	2593	which
O	2594	2597	has
O	2598	2602	been
O	2603	2611	assigned
O	2612	2614	to
O	2615	2619	edit
O	2620	2625	since
O	2626	2629	now
O	2630	2633	the
O	2634	2642	compiler
O	2643	2648	knows
O	2649	2653	that
O	2654	2657	the
O	2658	2663	value
O	2664	2670	cannot
O	2671	2673	be
O	2674	2681	changed
O	2682	2684	as
O	2685	2687	it
O	2688	2691	has
O	2692	2696	been
O	2697	2705	declared
O	2706	2711	final
O	2712	2715	and
O	2716	2721	hence
O	2722	2724	it
O	2725	2730	works
O	2731	2735	this
O	2736	2740	time
O	2740	2741	.

O	2742	2745	Now
O	2746	2750	what
O	2751	2753	if
O	2754	2755	I
O	2756	2762	change
O	2763	2766	the
O	2767	2771	edit
O	2772	2780	Variable
O	2781	2785	from
O	2786	2791	being
O	2792	2797	Local
O	2798	2800	to
O	2801	2806	being
O	2807	2815	Instance
O	2815	2816	.

O	2817	2820	Now
O	2821	2824	the
O	2825	2831	object
O	2832	2834	of
O	2835	2838	the
O	2839	2844	class
O	2845	2850	knows
O	2851	2861	everything
O	2862	2867	about
O	2868	2872	this
O	2873	2881	variable
O	2882	2886	edit
O	2886	2887	,
O	2888	2890	if
O	2891	2893	it
O	2894	2898	gets
O	2899	2906	changed
O	2906	2907	.

O	2908	2910	So
O	2911	2919	changing
O	2920	2923	the
O	2924	2929	above
O	2930	2937	program
O	2938	2946	likewise
O	2947	2949	we
O	2950	2953	get
O	2954	2955	:
O	2956	2975	@codeSnippetRemoved

O	2976	2980	Here
O	2981	2983	in
O	2984	2988	this
O	2989	2993	case
O	2993	2994	,
O	2995	2997	we
O	2998	3001	are
O	3002	3005	not
O	3006	3013	suppose
O	3014	3016	to
O	3017	3024	declare
O	3025	3028	and
O	3029	3035	define
O	3036	3038	it
O	3039	3041	as
O	3042	3047	being
O	3048	3053	final
O	3053	3054	,
O	3055	3062	because
O	3063	3065	in
O	3066	3070	this
O	3071	3075	case
O	3076	3081	since
O	3082	3085	the
O	3086	3094	Variable
O	3095	3100	being
O	3101	3106	Local
O	3107	3109	to
O	3110	3113	the
O	3114	3119	whole
O	3120	3125	class
O	3125	3126	,
O	3127	3130	the
O	3131	3139	Variable
O	3140	3142	is
O	3143	3147	send
O	3148	3150	to
O	3151	3154	the
O	3155	3160	Inner
O	3161	3166	Class
O	3167	3172	along
O	3173	3177	with
O	3178	3181	the
O	3182	3188	Object
O	3189	3198	Reference
O	3199	3203	i.e.
O	3204	3208	this
O	3209	3228	@codeSnippetRemoved

O	3229	3233	Here
O	3234	3236	is
O	3237	3240	how
O	3241	3244	the
O	3245	3253	Variable
O	3254	3256	is
O	3257	3261	send
O	3262	3264	in
O	3265	3269	this
O	3270	3274	case
O	3275	3279	i.e.
O	3280	3286	this$0
O	3287	3288	:
O	3289	3308	@codeSnippetRemoved

O	3309	3314	Seems
O	3315	3319	like
O	3320	3324	that
O	3325	3328	the
O	3329	3343	interpretation
O	3343	3344	,
O	3345	3348	how
O	3349	3353	this
O	3354	3363	situation
O	3364	3369	works
O	3369	3370	,
O	3371	3380	according
O	3381	3383	to
O	3384	3391	me.Just
O	3392	3395	now
O	3396	3397	I
O	3398	3403	found
O	3404	3408	this
O	3409	3418	wonderful
O	3419	3430	explanation
O	3431	3433	on
O	3434	3437	the
O	3438	3446	internet
O	3447	3456	regarding
O	3457	3464	Mystery
O	3465	3467	of
O	3468	3481	Accessibility
O	3482	3484	in
O	3485	3490	Local
O	3491	3496	Inner
O	3497	3504	Classes
O	3504	3505	,
O	3506	3511	might
O	3512	3514	be
O	3515	3519	this
O	3520	3524	will
O	3525	3529	help
O	3530	3533	you
O	3534	3544	understand
O	3545	3548	the
O	3549	3558	situation
O	3559	3561	in
O	3562	3563	a
O	3564	3568	much
O	3569	3575	better
O	3576	3579	way
O	3580	3583	:-)
