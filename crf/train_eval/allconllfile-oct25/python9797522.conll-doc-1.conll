O	0	3	How
O	4	6	do
O	7	8	'
O	9	12	and
O	13	14	'
O	15	18	and
O	19	20	'
O	21	23	or
O	24	25	'
O	26	29	act
O	30	34	with
O	35	46	non-boolean
O	47	53	values
O	54	56	in
B-PL	57	63	Python
O	63	64	?

O	65	67	22
O	68	71	and
O	72	75	333
O	76	77	/
O	78	80	12
O	81	83	or
O	84	85	1

O	86	87	I
O	88	92	have
O	93	104	encountered
O	105	108	the
O	109	114	above
O	115	119	line
O	120	122	of
O	123	127	code
O	127	128	.

O	129	132	The
O	133	139	result
O	140	142	is
O	143	145	27
O	145	146	,
O	147	150	but
O	151	152	I
O	153	158	could
O	159	162	not
O	163	168	quite
O	169	179	understand
O	180	184	what
O	185	189	does
O	190	193	and
O	194	197	and
O	198	200	or
O	201	205	mean
O	206	208	in
O	209	213	this
O	214	218	case
O	218	219	.

O	220	223	Can
O	224	232	somebody
O	233	240	explain
O	241	243	to
O	244	246	me
O	246	247	,
O	248	257	preferred
O	258	262	with
O	263	271	examples
O	271	272	.

O	273	279	Thanks
O	280	282	in
O	283	290	advance
O	291	293	!!

O	294	295	A
O	296	299	and
O	300	301	B
O	302	309	returns
O	310	311	A
O	312	314	if
O	315	316	A
O	317	319	is
O	320	325	false
O	325	326	,
O	327	329	or
O	330	331	B
O	332	341	otherwise
O	342	343	:
O	344	363	@codeSnippetRemoved

O	364	373	Similarly
O	373	374	,
O	375	376	'
O	377	378	A
O	379	381	or
O	382	383	B
O	384	385	'
O	386	393	returns
O	394	395	A
O	396	398	if
O	399	400	A
O	401	403	is
O	404	408	true
O	408	409	,
O	410	412	or
O	413	414	B
O	415	424	otherwise
O	425	426	:
O	427	446	@codeSnippetRemoved

O	447	450	Let
O	451	452	'
O	453	454	s
O	455	463	separate
O	464	468	this
O	469	472	out
O	473	474	:
O	475	494	@codeSnippetRemoved

O	495	498	The
O	499	506	logical
O	507	515	operands
O	516	519	and
O	519	520	,
O	521	523	or
O	524	528	will
O	529	533	come
O	534	539	after
O	540	548	division
O	549	557	operator
O	558	560	in
O	561	565	this
O	566	576	particular
O	577	585	scenario
O	586	588	as
O	589	592	per
O	593	596	the
O	597	602	rules
O	603	605	of
O	606	616	precedence
O	616	617	.

O	618	623	First
O	624	626	it
O	627	631	will
O	632	641	calculate
O	642	645	333
O	646	647	/
O	648	650	12
O	651	656	which
O	657	659	is
O	660	662	27
O	663	666	and
O	667	671	then
O	672	674	it
O	675	679	will
O	680	686	become
O	687	689	22
O	690	693	and
O	694	696	27
O	697	699	or
O	700	701	1
O	702	707	which
O	708	710	is
O	711	721	equivalent
O	722	724	to
O	725	727	27
O	728	730	as
O	731	734	and
O	734	735	,
O	736	738	or
O	739	743	have
O	744	749	equal
O	750	761	precedences
O	761	762	.

O	763	782	@codeSnippetRemoved

O	783	786	But
O	787	789	in
O	790	794	case
O	795	797	of
B-PL	798	804	Python
I-PL	805	808	3.2
O	809	811	it
O	812	813	'
O	814	815	s
O	816	825	computing
O	826	828	to
O	829	834	27.75
O	834	835	.

O	836	855	@codeSnippetRemoved

O	856	860	This
O	861	863	is
O	864	867	the
O	868	869	"
O	869	875	and-or
O	876	881	trick
O	881	882	"
O	883	885	--
O	886	889	and
O	890	893	and
O	894	896	or
O	897	902	don't
O	903	911	actually
O	912	918	return
O	919	926	boolean
O	927	933	values
O	934	935	;
O	936	943	instead
O	943	944	,
O	945	949	they
O	950	956	return
O	957	960	one
O	961	963	of
O	964	969	their
O	970	975	input
O	976	985	arguments
O	985	986	.

O	987	993	People
O	994	998	used
O	999	1001	to
O	1002	1005	use
O	1006	1010	this
O	1011	1014	for
O	1015	1027	control-flow
O	1027	1028	.

O	1029	1031	As
O	1032	1034	of
B-PL	1035	1041	python
I-PL	1042	1045	2.5
O	1045	1046	,
O	1047	1049	it
O	1050	1051	'
O	1052	1053	s
O	1054	1057	not
O	1058	1067	necessary
O	1068	1075	anymore
O	1075	1076	,
O	1077	1084	because
O	1085	1096	conditional
O	1097	1108	expressions
O	1109	1113	were
O	1114	1124	introduced
O	1124	1125	.

O	1126	1145	@codeSnippetRemoved

O	1146	1148	is
O	1149	1159	equivalent
O	1160	1162	to
O	1163	1182	@codeSnippetRemoved

O	1183	1185	In
B-PL	1186	1192	Python
O	1192	1193	,
O	1194	1201	nonzero
O	1202	1209	numbers
O	1210	1213	are
O	1214	1221	counted
O	1222	1224	as
O	1225	1229	true
O	1230	1233	for
O	1234	1237	the
O	1238	1246	purposes
O	1247	1249	of
O	1250	1257	boolean
O	1258	1269	expressions
O	1269	1270	,
O	1271	1274	and
O	1275	1279	zero
O	1280	1282	is
O	1283	1290	counted
O	1291	1293	as
O	1294	1299	false
O	1299	1300	.

O	1301	1303	So
O	1304	1308	even
O	1309	1315	though
O	1316	1320	both
O	1321	1324	and
O	1325	1328	and
O	1329	1331	or
O	1332	1335	are
O	1336	1344	normally
O	1345	1349	used
O	1350	1354	with
O	1355	1358	the
O	1359	1367	booleans
O	1368	1372	True
O	1373	1376	and
O	1377	1382	False
O	1382	1383	,
O	1384	1388	they
O	1389	1392	can
O	1393	1395	be
O	1396	1400	used
O	1401	1405	with
O	1406	1413	numbers
O	1414	1417	too
O	1417	1418	.

O	1419	1422	The
O	1423	1428	issue
O	1429	1431	is
O	1432	1433	:
O	1434	1438	what
O	1439	1441	is
O	1442	1445	the
O	1446	1451	value
O	1452	1454	of
O	1455	1457	an
O	1458	1468	expression
O	1469	1473	like
O	1474	1476	10
O	1477	1480	and
O	1481	1482	3
O	1482	1483	,
O	1484	1489	where
O	1490	1494	both
O	1495	1497	of
O	1498	1501	the
O	1502	1508	values
O	1509	1517	evaluate
O	1518	1520	to
O	1521	1525	true
O	1525	1526	?

O	1527	1529	In
B-PL	1530	1531	C
O	1531	1532	,
O	1533	1538	which
O	1539	1542	has
O	1543	1550	similar
O	1551	1569	integer-as-boolean
O	1570	1579	semantics
O	1579	1580	,
O	1581	1584	the
O	1585	1590	value
O	1591	1593	of
O	1594	1596	10
O	1597	1598	3
O	1599	1601	is
O	1602	1603	1
O	1603	1604	,
O	1605	1608	the
O	1609	1613	most
O	1614	1622	commonly
O	1623	1627	used
O	1628	1632	true
O	1633	1638	value
O	1638	1639	.

O	1640	1647	However
O	1647	1648	,
O	1649	1651	in
B-PL	1652	1658	Python
O	1659	1662	the
O	1663	1668	value
O	1669	1671	of
O	1672	1676	this
O	1677	1687	expression
O	1688	1690	is
O	1691	1692	3
O	1692	1693	,
O	1694	1697	the
O	1698	1704	second
O	1705	1709	half
O	1710	1712	of
O	1713	1716	the
O	1717	1720	and
O	1721	1731	expression
O	1731	1732	.

O	1733	1737	This
O	1738	1743	makes
O	1744	1749	sense
O	1750	1757	because
O	1758	1761	and
O	1762	1776	short-circuits
O	1776	1777	,
O	1778	1785	meaning
O	1786	1790	that
O	1791	1792	0
O	1793	1796	and
O	1797	1798	3
O	1799	1801	is
O	1802	1803	0
O	1803	1804	,
O	1805	1807	so
O	1808	1811	and
O	1812	1815	has
O	1816	1817	"
O	1817	1821	take
O	1822	1825	the
O	1826	1831	first
O	1832	1837	value
O	1838	1840	if
O	1841	1843	it
O	1844	1845	'
O	1846	1847	s
O	1848	1853	false
O	1853	1854	,
O	1855	1858	the
O	1859	1865	second
O	1866	1875	otherwise
O	1875	1876	"
O	1877	1886	semantics
O	1886	1887	.

O	1888	1892	What
O	1893	1898	about
O	1899	1902	the
O	1903	1913	expression
O	1914	1917	you
O	1918	1924	posted
O	1924	1925	?

O	1926	1928	By
O	1929	1937	operator
O	1938	1948	precedence
O	1948	1949	,
O	1950	1952	it
O	1953	1954	'
O	1955	1956	s
O	1957	1960	the
O	1961	1965	same
O	1966	1968	as
O	1969	1988	@codeSnippetRemoved

O	1989	1992	The
O	1993	1998	value
O	1999	2001	of
O	2002	2004	22
O	2005	2008	and
O	2009	2012	333
O	2013	2014	/
O	2015	2017	12
O	2018	2020	is
O	2021	2024	333
O	2025	2026	/
O	2027	2029	12
O	2029	2030	,
O	2031	2036	which
O	2037	2039	is
O	2040	2042	27
O	2042	2043	.

O	2044	2049	Since
O	2050	2053	the
O	2054	2056	or
O	2057	2065	operator
O	2066	2080	short-circuits
O	2080	2081	,
O	2082	2085	the
B-PL	2086	2092	Python
O	2093	2104	interpreter
O	2105	2110	takes
O	2111	2114	the
O	2115	2120	first
O	2121	2125	true
O	2126	2131	value
O	2132	2136	when
O	2137	2147	evaluating
O	2148	2150	27
O	2151	2153	or
O	2154	2155	1
O	2155	2156	,
O	2157	2160	and
O	2161	2165	gets
O	2166	2168	27
O	2168	2169	.
