B-API	0	9	Messenger
O	10	12	to
O	13	19	Remote
O	20	27	Service
O	28	35	Causing
O	36	42	Memory
O	43	47	Leak

O	48	49	I
O	50	54	have
O	55	57	an
O	58	69	application
O	70	74	that
O	75	87	communicates
O	88	92	with
O	93	94	a
O	95	102	Service
O	103	105	in
O	106	107	a
O	108	114	remote
O	115	122	process
O	123	128	using
O	129	132	the
B-API	133	142	Messenger
O	143	152	interface
O	152	153	.

O	154	158	Here
O	159	161	is
O	162	165	the
O	166	171	basic
O	172	184	architecture
O	185	187	of
O	188	191	how
O	192	198	things
O	199	202	are
O	203	206	set
O	207	209	up
O	210	211	:

O	212	215	The
O	216	227	application
O	228	237	generates
O	238	245	several
O	246	247	"
O	247	256	Operation
O	256	257	"
O	258	265	objects
O	266	270	that
O	271	278	require
O	279	285	access
O	286	288	to
O	289	292	the
O	293	300	service
O	300	301	.

O	302	306	Each
O	307	308	"
O	308	317	Operation
O	317	318	"
O	319	327	contains
O	328	329	a
O	330	337	Handler
O	338	345	wrapped
O	346	348	in
O	349	350	a
B-API	351	360	Messenger
O	361	365	used
O	366	368	to
O	369	376	receive
O	377	380	the
O	381	389	response
O	390	394	data
O	395	399	back
O	400	404	from
O	405	408	the
O	409	416	Service
O	417	421	When
O	422	425	the
O	426	435	operation
O	436	444	executes
O	444	445	,
O	446	448	it
O	449	454	wraps
O	455	458	its
B-API	459	468	Messenger
O	469	473	into
O	474	476	an
O	477	483	Intent
O	484	487	and
O	488	493	calls
B-API	494	508	startService()
O	509	511	to
O	512	516	pass
O	517	520	the
O	521	528	message
O	529	531	to
O	532	535	the
O	536	542	remote
O	543	550	service
O	551	554	The
O	555	561	remote
O	562	569	service
O	570	574	does
O	575	579	some
O	580	584	work
O	585	590	based
O	591	593	on
O	594	597	the
O	598	608	parameters
O	609	611	of
O	612	615	the
B-API	616	622	Intent
O	623	626	and
O	627	631	then
O	632	639	returns
O	640	643	the
O	644	652	response
O	653	655	by
O	656	663	sending
O	664	665	a
O	666	673	Message
O	674	676	to
O	677	680	the
B-API	681	690	Messenger
O	691	694	for
O	695	699	that
O	700	709	operation
O	709	710	.

O	711	715	Here
O	716	718	is
O	719	722	the
O	723	728	basic
O	729	733	code
O	734	741	present
O	742	744	in
O	745	748	the
O	749	758	operation
O	759	760	:
O	761	780	@codeSnippetRemoved

O	781	784	And
O	785	786	a
O	787	794	snippet
O	795	797	of
O	798	801	how
O	802	805	the
O	806	813	Service
O	814	816	is
O	817	827	structured
O	828	829	(
O	829	831	it
O	832	833	'
O	834	835	s
O	836	845	basically
O	846	848	an
B-API	849	862	IntentService
O	863	867	that
O	868	875	doesn't
O	876	880	shut
O	881	885	down
O	886	890	when
O	891	894	the
O	895	900	queue
O	901	903	is
O	904	909	empty
O	910	912	):
O	913	932	@codeSnippetRemoved

O	933	937	This
O	938	941	all
O	942	947	works
O	948	961	fantastically
O	962	966	well
O	966	967	.

O	968	969	I
O	970	973	can
O	974	978	send
O	979	983	tons
O	984	986	of
O	987	997	operations
O	998	1002	from
O	1003	1010	several
O	1011	1020	different
O	1021	1033	applications
O	1034	1036	to
O	1037	1040	the
O	1041	1045	same
O	1046	1053	service
O	1054	1057	and
O	1058	1062	they
O	1063	1066	all
O	1067	1074	process
O	1075	1078	and
O	1079	1083	send
O	1084	1089	their
O	1090	1098	response
O	1099	1101	to
O	1102	1106	just
O	1107	1110	the
O	1111	1116	right
O	1117	1122	place
O	1122	1123	.

O	1124	1131	However
O	1132	1135	...

O	1136	1137	I
O	1138	1145	noticed
O	1146	1150	that
O	1151	1153	if
O	1154	1157	the
O	1158	1169	application
O	1170	1173	ran
O	1174	1178	long
O	1179	1185	enough
O	1186	1189	and
O	1190	1194	with
O	1195	1201	enough
O	1202	1210	activity
O	1211	1213	it
O	1214	1219	would
O	1220	1225	crash
O	1226	1230	with
O	1231	1233	an
B-API	1234	1250	OutOfMemoryError
O	1250	1251	.

O	1252	1256	Upon
O	1257	1264	looking
O	1265	1267	at
O	1268	1271	the
B-Fram	1272	1277	HPROF
O	1278	1282	data
O	1283	1285	in
B-Fram	1286	1289	MAT
O	1289	1290	,
O	1291	1292	I
O	1293	1300	noticed
O	1301	1305	that
O	1306	1309	all
O	1310	1315	these
O	1316	1326	operations
O	1327	1332	where
O	1333	1340	staying
O	1341	1343	in
O	1344	1350	memory
O	1350	1351	,
O	1352	1355	and
O	1356	1360	they
O	1361	1365	were
O	1366	1370	held
O	1371	1378	hostage
O	1379	1383	from
O	1384	1387	the
O	1388	1395	Garbage
O	1396	1405	Collector
O	1406	1413	because
O	1414	1416	of
O	1417	1420	the
B-API	1421	1430	Messenger
O	1430	1431	.

O	1432	1442	Apparently
O	1442	1443	,
O	1444	1447	the
B-API	1448	1457	Messenger
O	1458	1466	instance
O	1467	1469	is
O	1470	1478	creating
O	1479	1480	a
O	1481	1490	long-term
O	1491	1497	native
O	1498	1508	connection
O	1509	1511	to
B-API	1512	1518	Binder
O	1519	1523	that
O	1524	1530	counts
O	1531	1533	as
O	1534	1535	a
O	1536	1538	GC
O	1539	1543	Root
O	1543	1544	,
O	1545	1550	which
O	1551	1553	is
O	1554	1561	keeping
O	1562	1566	each
O	1567	1568	"
O	1568	1577	Operation
O	1577	1578	"
O	1579	1585	object
O	1586	1588	in
O	1589	1595	memory
O	1596	1608	indefinitely
O	1608	1609	.

O	1610	1614	Does
O	1615	1621	anyone
O	1622	1626	know
O	1627	1629	if
O	1630	1635	there
O	1636	1638	is
O	1639	1640	a
O	1641	1644	way
O	1645	1647	to
O	1648	1653	clear
O	1654	1656	or
O	1657	1664	disable
O	1665	1668	the
B-API	1669	1678	Messenger
O	1679	1683	when
O	1684	1687	the
O	1688	1689	"
O	1689	1698	Operation
O	1698	1699	"
O	1700	1702	is
O	1703	1707	over
O	1708	1710	so
O	1711	1713	it
O	1714	1721	doesn't
O	1722	1728	create
O	1729	1733	this
O	1734	1740	memory
O	1741	1745	leak
O	1745	1746	?

O	1747	1749	Is
O	1750	1755	there
O	1756	1763	perhaps
O	1764	1771	another
O	1772	1775	way
O	1776	1778	to
O	1779	1788	implement
O	1789	1792	the
B-Stan	1793	1796	IPC
O	1797	1799	to
O	1800	1803	the
O	1804	1811	Service
O	1812	1814	in
O	1815	1818	the
O	1819	1823	same
O	1824	1831	fashion
O	1831	1832	,
O	1833	1835	so
O	1836	1840	that
O	1841	1849	multiple
O	1850	1859	disparate
O	1860	1867	objects
O	1868	1871	can
O	1872	1876	make
O	1877	1878	a
O	1879	1886	request
O	1887	1890	and
O	1891	1894	get
O	1895	1896	a
O	1897	1903	result
O	1904	1918	asynchronously
O	1918	1919	?

O	1920	1926	Thanks
O	1927	1929	in
O	1930	1937	advance
O	1937	1938	!

O	1939	1940	I
O	1941	1943	am
O	1944	1947	not
O	1948	1952	sure
O	1953	1955	if
O	1956	1960	this
O	1961	1963	is
O	1964	1967	the
O	1968	1972	best
O	1973	1976	way
O	1977	1982	since
O	1982	1983	,
O	1984	1988	even
O	1989	1991	if
O	1992	2000	Activity
O	2001	2003	is
O	2004	2006	in
O	2007	2010	the
O	2011	2021	background
O	2022	2025	you
O	2026	2030	will
O	2031	2034	get
O	2035	2038	the
O	2039	2046	message
O	2047	2051	from
O	2052	2059	Service
O	2059	2060	.

O	2061	2062	I
O	2063	2068	think
O	2069	2072	you
O	2073	2079	should
O	2080	2084	bind
O	2085	2087	to
O	2088	2091	the
O	2092	2099	service
O	2100	2103	and
O	2104	2112	register
O	2113	2114	a
B-API	2115	2124	messenger
O	2125	2127	to
O	2128	2131	the
O	2132	2139	service
O	2140	2142	as
O	2143	2147	soon
O	2148	2150	as
O	2151	2158	Service
O	2159	2161	is
O	2162	2171	connected
O	2171	2172	.

O	2173	2176	And
O	2177	2181	then
O	2182	2192	unregister
O	2193	2196	the
B-API	2197	2206	messenger
O	2207	2211	when
O	2212	2215	you
O	2216	2226	disconnect
O	2226	2227	.

O	2228	2233	Check
B-API	2234	2253	ExportVcardActivity
O	2254	2256	in
B-Fram	2257	2261	AOSP
O	2261	2262	.

O	2263	2265	It
O	2266	2268	is
O	2269	2278	following
O	2279	2288	something
O	2289	2294	along
O	2295	2300	these
O	2301	2306	lines
O	2306	2307	.

O	2308	2313	Looks
O	2314	2318	like
O	2319	2322	you
O	2323	2331	starting
O	2332	2333	a
O	2334	2337	lot
O	2338	2340	of
O	2341	2349	services
O	2350	2357	instead
O	2358	2360	of
O	2361	2368	binding
O	2369	2371	to
O	2372	2381	currently
O	2382	2389	running
O	2389	2390	.

O	2391	2393	It
O	2394	2396	is
O	2397	2406	difficult
O	2407	2409	to
O	2410	2415	judge
O	2416	2420	from
O	2421	2425	your
O	2426	2432	quotes
O	2432	2433	,
O	2434	2437	but
O	2438	2439	I
O	2440	2443	can
O	2444	2451	suppose
O	2452	2454	it
O	2455	2459	from
B-API	2460	2480	context.startService
O	2481	2482	(
O	2482	2495	serviceIntent
O	2496	2498	);
O	2499	2503	That
O	2504	2509	could
O	2510	2512	be
O	2513	2516	the
O	2517	2523	reason
O	2524	2526	of
O	2527	2533	memory
O	2534	2543	leak.IMHO
O	2544	2547	you
O	2548	2554	should
O	2555	2559	read
O	2560	2569	carefully
O	2570	2575	Bound
O	2576	2584	Services
O	2585	2587	to
O	2588	2593	check
O	2594	2597	you
O	2598	2602	code
O	2602	2603	.

O	2604	2610	Thanks
O	2611	2613	to
O	2614	2618	some
O	2619	2623	very
O	2624	2631	helpful
O	2632	2639	insight
O	2640	2644	from
O	2645	2651	Dianne
O	2652	2660	Hackborn
O	2661	2663	on
O	2664	2667	the
B-Plat	2668	2675	Android
O	2676	2680	team
O	2680	2681	,
O	2682	2685	the
O	2686	2691	issue
O	2692	2694	is
O	2695	2702	because
O	2703	2706	the
O	2707	2713	remote
O	2714	2721	service
O	2722	2729	process
O	2730	2733	has
O	2734	2737	not
O	2738	2741	yet
O	2742	2749	Garbage
O	2750	2759	Collected
O	2760	2762	it
O	2763	2764	'
O	2765	2766	s
O	2767	2775	instance
O	2776	2778	of
O	2779	2782	the
B-API	2783	2792	Messenger
O	2793	2798	which
O	2798	2799	,
O	2800	2802	in
O	2803	2809	effect
O	2809	2810	,
O	2811	2815	held
O	2816	2819	the
O	2820	2829	instances
O	2830	2832	in
O	2833	2836	the
O	2837	2848	application
O	2849	2850	'
O	2851	2852	s
O	2853	2860	process
O	2861	2868	hostage
O	2869	2874	until
O	2875	2879	that
O	2880	2884	time
O	2884	2885	.

O	2886	2890	This
O	2891	2893	is
O	2894	2897	the
O	2898	2902	text
O	2903	2905	of
O	2906	2909	her
O	2910	2915	reply
O	2916	2917	:

O	2918	2920	It
O	2921	2923	is
O	2924	2928	true
O	2929	2933	that
O	2934	2941	sending
O	2942	2943	a
B-API	2944	2953	messenger
O	2954	2960	across
O	2961	2970	processes
O	2971	2975	will
O	2976	2983	require
O	2984	2991	holding
O	2992	2993	a
O	2994	2998	GREF
O	2999	3001	on
O	3002	3004	it
O	3005	3008	for
O	3009	3012	the
O	3013	3018	other
O	3019	3026	process
O	3027	3029	to
O	3030	3041	communicate
O	3042	3046	with
O	3047	3049	it
O	3049	3050	.

O	3051	3058	Barring
O	3059	3063	bugs
O	3064	3065	(
O	3065	3070	which
O	3071	3075	have
O	3076	3084	happened
O	3085	3088	but
O	3089	3090	I
O	3091	3093	am
O	3094	3097	not
O	3098	3102	sure
O	3103	3105	if
O	3106	3108	in
O	3109	3112	any
O	3113	3121	released
O	3122	3130	platform
O	3131	3139	versions
O	3139	3140	)
O	3140	3141	,
O	3142	3145	the
O	3146	3150	GREF
O	3151	3155	will
O	3156	3158	be
O	3159	3167	released
O	3168	3172	when
O	3173	3176	the
O	3177	3182	other
O	3183	3190	process
O	3191	3197	itself
O	3198	3200	no
O	3201	3207	longer
O	3208	3213	holds
O	3214	3215	a
O	3216	3225	reference
O	3226	3228	on
O	3229	3233	this
O	3233	3234	.

O	3235	3239	When
O	3240	3242	we
O	3243	3246	are
O	3247	3254	talking
O	3255	3260	about
O	3261	3267	things
O	3268	3270	in
O	3271	3277	Dalvik
O	3278	3279	"
O	3279	3281	no
O	3282	3288	longer
O	3289	3294	holds
O	3295	3296	a
O	3297	3306	reference
O	3306	3307	"
O	3308	3317	generally
O	3318	3323	means
O	3324	3325	"
O	3325	3328	the
O	3329	3334	other
O	3335	3339	side
O	3340	3343	has
O	3344	3351	garbage
O	3352	3361	collected
O	3362	3365	the
B-API	3366	3370	Java
I-API	3371	3376	proxy
O	3377	3383	object
O	3383	3384	.

O	3385	3386	"
O	3386	3390	What
O	3391	3395	this
O	3396	3401	means
O	3402	3404	is
O	3405	3409	that
O	3410	3414	when
O	3415	3418	you
O	3419	3424	throw
O	3425	3426	a
B-API	3427	3436	Messenger
O	3437	3438	(
O	3438	3440	or
O	3441	3444	any
B-API	3445	3452	IBinder
O	3453	3459	object
O	3459	3460	)
O	3461	3467	across
O	3468	3470	to
O	3471	3478	another
O	3479	3486	process
O	3486	3487	,
O	3488	3491	the
O	3492	3498	Dalvik
O	3499	3501	VM
O	3502	3504	in
O	3505	3509	your
O	3510	3513	own
O	3514	3521	process
O	3522	3525	can
O	3526	3528	no
O	3529	3535	longer
O	3536	3542	manage
O	3543	3546	the
O	3547	3553	memory
O	3554	3556	of
O	3557	3561	that
O	3562	3568	object
O	3569	3575	itself
O	3576	3579	and
O	3580	3582	is
O	3583	3592	dependent
O	3593	3595	on
O	3596	3599	all
O	3600	3606	remote
O	3607	3614	objects
O	3615	3624	releasing
O	3625	3627	it
O	3628	3633	until
O	3634	3636	it
O	3637	3640	can
O	3641	3643	be
O	3644	3652	released
O	3653	3660	locally
O	3660	3661	.

O	3662	3665	And
O	3666	3670	this
O	3671	3675	will
O	3676	3683	include
O	3684	3687	all
O	3688	3695	objects
O	3696	3700	that
O	3701	3704	the
B-API	3705	3712	IBinder
O	3713	3716	has
O	3717	3720	any
O	3721	3731	references
O	3732	3734	to
O	3735	3737	as
O	3738	3742	well
O	3742	3743	.

O	3744	3745	A
O	3746	3752	common
O	3753	3760	pattern
O	3761	3763	to
O	3764	3768	deal
O	3769	3773	with
O	3774	3778	this
O	3779	3781	is
O	3782	3784	to
O	3785	3788	use
O	3789	3790	a
B-API	3791	3804	WeakReference
O	3805	3807	in
O	3808	3812	your
B-API	3813	3820	IBinder
O	3821	3822	/
B-API	3823	3832	Messenger
O	3833	3837	that
O	3838	3843	holds
O	3844	3847	the
O	3848	3858	references
O	3859	3861	to
O	3862	3865	the
O	3866	3870	rest
O	3871	3873	of
O	3874	3878	your
O	3879	3886	objects
O	3887	3891	that
O	3892	3894	it
O	3895	3899	will
O	3900	3906	access
O	3906	3907	.

O	3908	3912	This
O	3913	3919	allows
O	3920	3924	your
O	3925	3930	local
O	3931	3938	garbage
O	3939	3948	collector
O	3949	3951	to
O	3952	3957	clean
O	3958	3960	up
O	3961	3964	all
O	3965	3967	of
O	3968	3973	those
O	3974	3979	other
O	3980	3987	objects
O	3988	3989	(
O	3989	3994	which
O	3995	3998	may
O	3999	4001	be
O	4002	4007	quite
O	4008	4013	heavy
O	4013	4014	,
O	4015	4022	holding
O	4023	4026	big
O	4027	4033	things
O	4034	4038	like
O	4039	4046	bitmaps
O	4047	4050	and
O	4051	4055	such
O	4055	4056	)
O	4057	4061	even
O	4062	4068	though
O	4069	4070	a
O	4071	4077	remote
O	4078	4085	process
O	4086	4091	still
O	4092	4095	has
O	4096	4097	a
O	4098	4107	reference
O	4108	4110	on
O	4111	4115	your
B-API	4116	4123	IBinder
O	4123	4124	.

O	4125	4127	Of
O	4128	4134	course
O	4135	4137	if
O	4138	4141	you
O	4142	4144	do
O	4145	4149	this
O	4149	4150	,
O	4151	4156	there
O	4157	4162	needs
O	4163	4165	to
O	4166	4168	be
O	4169	4178	something
O	4179	4183	else
O	4184	4191	holding
O	4192	4193	a
O	4194	4203	reference
O	4204	4206	on
O	4207	4212	these
O	4213	4218	other
O	4219	4226	objects
O	4227	4232	until
O	4233	4237	they
O	4238	4241	are
O	4242	4244	no
O	4245	4251	longer
O	4252	4258	needed
O	4258	4259	,
O	4260	4262	or
O	4263	4267	else
O	4268	4271	the
O	4272	4279	garbage
O	4280	4289	collector
O	4290	4295	could
O	4296	4301	clean
O	4302	4306	them
O	4307	4309	up
O	4310	4316	before
O	4317	4321	they
O	4322	4325	are
O	4326	4328	no
O	4329	4335	longer
O	4336	4342	needed
O	4342	4343	.

O	4344	4353	Something
O	4354	4358	else
O	4359	4360	I
O	4361	4366	would
O	4367	4376	recommend
O	4377	4379	is
O	4380	4382	to
O	4383	4386	not
O	4387	4389	do
O	4390	4391	a
O	4392	4398	design
O	4399	4404	where
O	4405	4408	you
O	4409	4420	instantiate
B-API	4421	4430	Messenger
O	4431	4438	objects
O	4439	4442	for
O	4443	4447	each
B-Stan	4448	4451	IPC
O	4452	4455	you
O	4456	4458	do
O	4458	4459	.

O	4460	4466	Create
O	4467	4470	one
B-API	4471	4480	Messenger
O	4481	4485	that
O	4486	4489	you
O	4490	4494	pass
O	4495	4497	in
O	4498	4500	to
O	4501	4505	each
B-Stan	4506	4509	IPC
O	4510	4514	call
O	4514	4515	.

O	4516	4525	Otherwise
O	4526	4529	you
O	4530	4533	can
O	4534	4542	generate
O	4543	4544	a
O	4545	4548	lot
O	4549	4551	of
O	4552	4559	remoted
O	4560	4567	objects
O	4568	4572	that
O	4573	4576	are
O	4577	4582	being
O	4583	4587	kept
O	4588	4594	around
O	4595	4598	due
O	4599	4601	to
O	4602	4607	other
O	4608	4617	processes
O	4618	4628	continuing
O	4629	4631	to
O	4632	4636	hold
O	4637	4647	references
O	4648	4655	because
O	4656	4659	the
O	4660	4665	other
O	4666	4670	side
O	4671	4673	is
O	4674	4677	not
O	4678	4690	aggressively
O	4691	4698	garbage
O	4699	4709	collecting
O	4710	4715	since
O	4716	4719	all
O	4720	4723	the
O	4724	4731	objects
O	4732	4734	it
O	4735	4737	is
O	4738	4746	creating
O	4747	4750	due
O	4751	4753	to
O	4754	4759	these
O	4760	4765	calls
O	4766	4769	are
O	4770	4775	small
O	4775	4776	.

O	4777	4781	More
O	4782	4786	Info
O	4787	4788	:
O	4789	4864	https://groups.google.com/d/msg/android-developers/aK2o1W2xrMU/Z0-QujnU3wUJ

O	0	3	How
O	4	6	do
O	7	8	i
O	9	13	fire
O	14	17	the
B-Fram	18	24	google
I-Fram	25	31	places
I-Fram	32	44	autocomplete
O	45	49	with
O	50	60	dictionary
O	61	63	on
O	64	66	in
B-Plat	67	74	android
B-Fram	75	82	firefox
O	83	90	browser
O	90	91	?

O	92	96	I've
O	97	107	integrated
O	108	112	with
O	113	116	the
B-Fram	117	123	google
I-Fram	124	130	places
I-Fram	131	143	autocomplete
O	144	146	on
O	147	149	my
O	150	157	website
O	157	158	.

O	159	166	However
O	167	171	when
O	172	175	the
O	176	186	dictionary
O	187	189	is
O	190	192	on
O	193	195	in
O	196	199	the
B-Fram	200	207	firefox
O	208	215	browser
O	216	218	on
B-Plat	219	226	android
O	227	233	phones
O	233	234	,
O	235	238	the
O	239	245	places
O	246	249	are
O	250	254	only
O	255	261	listed
O	262	266	when
O	267	268	i
O	269	274	click
O	275	278	one
O	279	281	of
O	282	285	the
O	286	295	suggested
O	296	301	words
O	301	302	.
O	303	305	in
O	306	307	a
O	308	314	normal
O	315	319	text
O	320	323	box
O	324	325	i
O	326	331	would
O	332	334	do
O	335	354	@codeSnippetRemoved

O	355	362	However
O	362	363	,
O	364	366	in
O	367	371	this
O	372	376	case
O	376	377	,
O	378	379	I
O	380	385	don't
O	386	390	know
O	391	395	what
O	396	401	event
O	402	404	to
O	405	409	fire
O	409	410	.

O	411	414	How
O	415	421	should
O	422	423	i
O	424	427	fix
O	428	432	this
O	432	433	?

O	434	438	Here
O	439	440	'
O	441	442	s
O	443	445	my
O	446	450	code

O	451	455	HTML
O	456	457	:
O	458	477	@codeSnippetRemoved

O	478	488	Javascript
O	489	490	:
O	491	510	@codeSnippetRemoved

B-API	0	20	AutoCompleteTextView
O	21	25	with
O	26	32	custom
B-API	33	45	ArrayAdapter
O	46	49	and
O	50	56	Filter

O	57	58	I
O	59	63	have
O	64	65	a
O	66	73	problem
O	74	78	when
O	79	82	I'm
O	83	89	trying
O	90	92	to
O	93	99	Filter
O	100	107	results
O	108	110	in
B-API	111	131	AutoCompleteTextView
O	132	136	from
B-Fram	137	143	LogCat
O	144	145	I
O	146	150	know
O	151	155	that
O	156	165	filtering
O	166	168	is
O	169	178	performed
O	179	186	correct
O	187	190	but
O	191	193	it
O	194	195	'
O	196	197	s
O	198	201	not
O	202	212	refreshing
O	213	216	the
O	217	221	view
O	222	224	:/
O	225	228	Did
O	229	230	I
O	231	237	forget
O	238	243	about
O	244	253	something
O	254	257	any
O	258	269	suggestions
O	270	272	or
O	273	277	help
O	277	278	?

O	279	283	Here
O	284	286	is
O	287	293	source
O	294	298	code
O	299	301	of
O	302	308	filter
O	308	309	.

O	310	329	@codeSnippetRemoved

O	330	333	The
O	334	341	missing
O	342	346	part
O	347	349	is
O	350	354	that
O	355	356	I
O	357	361	need
O	362	364	to
O	365	368	set
O	369	372	the
O	373	376	new
O	377	383	values
O	384	388	from
O	389	395	filter
O	396	398	so
O	399	400	I
O	401	405	just
O	406	412	simply
O	413	420	changed
O	421	424	the
O	425	444	@codeSnippetRemoved

O	445	448	and
O	449	452	now
O	453	455	it
O	456	457	'
O	458	459	s
O	460	467	working
O	467	468	.

O	469	472	The
O	473	480	correct
O	481	485	code
O	486	492	bellow
O	492	493	.

O	494	513	@codeSnippetRemoved

O	514	521	Another
O	522	528	Update
O	529	530	-
O	531	533	On
O	534	543	inputting
O	544	547	and
O	548	556	removing
O	557	560	all
O	561	564	the
O	565	575	characters
O	576	578	in
O	579	585	search
O	586	593	textbox
O	594	598	very
O	599	606	quickly
O	607	614	crashes
O	615	618	the
O	619	630	application
O	631	633	on
O	634	650	newValues.size()
O	651	653	or
O	654	667	newValues.get
O	668	669	(
O	669	670	i
O	670	671	)
O	672	674	as
O	675	684	newValues
O	685	690	might
O	691	693	be
O	694	698	null
O	698	699	.

O	700	702	So
O	702	703	,
O	704	708	here
O	709	710	'
O	711	712	s
O	713	716	the
O	717	721	code
O	722	725	you
O	726	732	should
O	733	736	use
O	737	738	:
O	739	758	@codeSnippetRemoved

O	0	5	check
O	6	14	distinct
O	15	21	values
O	22	24	in
B-API	25	50	datarowview.row.itemarray
O	51	56	other
O	57	61	than
O	62	67	empty
O	68	74	string

O	75	76	I
O	77	79	am
O	80	87	getting
B-API	88	99	datarowview
O	100	107	through
O	108	111	the
O	112	121	following
O	122	126	code
O	127	146	@codeSnippetRemoved

O	147	150	how
O	151	154	can
O	155	156	i
O	157	162	check
O	163	167	here
O	168	172	that
O	173	176	all
O	177	183	values
O	184	186	in
O	187	202	s.Row.ItemArray
O	203	205	is
O	206	214	distinct
O	214	215	.

O	216	218	If
O	219	224	value
O	225	227	is
O	228	232	null
O	233	235	or
O	236	241	empty
O	242	248	string
O	249	251	it
O	252	258	should
O	259	263	skip
O	264	267	the
O	268	276	distinct
O	277	283	nature
O	284	286	ie
O	287	292	there
O	293	296	can
O	297	299	be
O	300	308	multiple
O	309	313	null
O	314	320	values
O	321	323	or
O	324	329	empty
O	330	336	string
O	337	339	in
B-API	340	349	ItemArray
O	350	353	but
O	354	356	no
O	357	362	other
O	363	367	same
O	368	374	values
O	374	375	.

O	376	379	you
O	380	383	can
O	384	387	use
B-API	388	392	LINQ
I-API	393	400	GroupBy
O	401	403	to
O	404	409	check
O	410	413	the
O	414	422	distinct
O	423	424	:
O	425	444	@codeSnippetRemoved

O	445	448	How
O	449	451	it
O	452	457	works
O	458	459	:

O	460	462	To
O	463	471	simplify
O	471	472	,
O	473	479	assume
O	480	484	your
O	485	489	item
O	490	495	array
O	496	499	has
O	500	501	:
O	502	503	[
O	504	505	1
O	505	506	,
O	507	508	1
O	508	509	,
O	510	511	3
O	511	512	,
O	513	515	3]
O	515	516	.

B-API	517	524	GroupBy
O	525	526	(
O	526	527	x
O	528	529	=
O	530	531	x
O	531	532	)
O	533	537	will
O	538	543	group
O	544	548	your
O	549	554	array
O	555	557	in
O	558	561	two
O	562	567	group
O	568	569	:
O	570	589	@codeSnippetRemoved

O	590	592	To
O	593	597	know
O	598	605	whether
O	606	608	it
O	609	611	is
O	612	620	distinct
O	621	623	or
O	624	627	not
O	627	628	,
O	629	632	you
O	633	637	just
O	638	643	check
O	644	651	whether
O	652	655	any
O	656	661	group
O	662	665	has
O	666	671	Count
O	672	673	>
O	674	675	1
O	675	676	,
O	677	679	if
O	680	683	yes
O	683	684	,
O	685	687	it
O	688	690	is
O	691	694	not
O	695	703	distinct
O	703	704	.

O	705	712	Example
O	713	715	in
O	716	720	here
O	721	723	is
O	724	727	not
O	728	736	distinct

O	0	2	DB
O	3	12	geography
O	13	17	type
B-API	18	27	MakeValid
O	28	32	does
O	33	36	not
O	37	41	seem
O	42	44	to
O	45	47	be
O	48	55	working

O	56	57	I
O	58	62	have
O	63	65	an
O	66	77	application
O	78	83	where
O	84	87	the
O	88	92	user
O	93	98	draws
O	99	104	zones
O	105	108	and
O	109	114	later
O	115	116	I
O	117	122	check
O	123	125	if
O	126	127	a
O	128	136	polyline
O	137	144	crosses
O	145	149	them
O	149	150	.

O	151	154	All
O	155	157	of
O	158	159	a
O	160	166	sudden
O	167	170	the
O	171	182	application
O	183	190	crashed
O	191	194	out
O	195	199	with
O	200	203	the
O	204	209	error
O	210	211	:
O	212	231	@codeSnippetRemoved

O	232	233	I
O	234	237	was
O	238	247	surprised
O	248	250	at
O	251	254	the
O	255	262	message
O	263	264	'
O	265	268	Use
B-API	269	278	MakeValid
O	279	280	'
O	281	283	as
O	284	285	I
O	286	288	AM
O	289	294	using
O	295	296	'
B-API	297	306	MakeValid
O	307	308	'
O	309	311	as
O	312	317	shown
O	318	323	below
O	324	325	:
O	326	345	@codeSnippetRemoved

O	346	347	I
O	348	353	later
O	354	359	found
O	360	363	the
O	364	373	offending
O	374	381	polygon
O	382	383	(
O	383	386	see
O	387	392	image
O	392	393	)
O	394	397	has
O	398	402	been
O	403	408	drawn
O	409	415	pretty
O	416	421	badly
O	422	425	and
O	426	427	I
O	428	433	guess
O	434	438	this
O	439	441	is
O	442	449	causing
O	450	453	the
O	454	459	issue
O	459	460	.

O	461	463	So
O	464	466	my
O	467	475	specific
O	476	485	questions
O	486	489	are
O	490	491	:

O	492	494	Am
O	495	496	I
O	497	502	using
B-API	503	512	MakeValid
O	513	522	correctly
O	522	523	?

O	524	525	I
O	526	533	thought
B-API	534	545	MakeValid()
O	546	551	would
O	552	559	resolve
O	560	564	this
O	565	569	kind
O	570	572	of
O	573	578	thing
O	579	582	...

O	583	592	Obviously
O	593	594	I
O	595	599	have
O	600	602	no
O	603	610	control
O	611	615	over
O	616	619	the
O	620	627	drawing
O	628	634	skills
O	635	637	of
O	638	640	my
O	641	647	client
O	648	650	so
O	651	653	if
B-API	654	663	MakeValid
O	664	671	doesn't
O	672	676	help
O	677	680	for
O	681	686	badly
O	687	692	drawn
O	693	701	polygons
O	701	702	,
O	703	705	is
O	706	711	there
O	712	716	some
O	717	722	other
O	723	726	way
O	727	729	of
O	730	732	er
O	733	736	...
O	737	743	making
O	744	748	this
O	749	754	valid
O	754	755	?

O	756	760	Many
O	761	767	thanks
O	767	768	.

O	769	771	OK
O	771	772	,
O	773	775	so
O	776	779	the
O	780	785	issue
O	786	789	was
O	790	796	indeed
O	797	799	an
O	800	807	invalid
O	808	815	polygon
O	816	820	zone
O	821	825	held
O	826	828	in
O	829	832	the
O	833	841	database
O	841	842	.

O	843	846	The
O	847	848	'
O	849	852	Use
B-API	853	862	MakeValid
O	863	864	'
O	865	867	in
O	868	871	the
O	872	877	error
O	878	885	message
O	886	895	triggered
O	896	900	some
O	901	906	wrong
O	907	918	assumptions
O	919	921	as
O	922	923	I
O	924	927	was
O	928	935	already
O	936	941	using
B-API	942	951	MakeValid
O	951	952	.

O	953	961	Actually
O	962	966	this
O	967	972	error
O	973	976	was
O	977	986	triggered
O	987	991	from
O	992	994	an
O	995	1002	invalid
O	1003	1010	Polygon
O	1011	1015	zone
O	1016	1019	and
O	1020	1023	not
O	1024	1027	the
B-API	1028	1036	PolyLine
O	1037	1038	I
O	1039	1042	was
O	1043	1048	using
O	1049	1051	in
O	1052	1055	the
O	1056	1061	query
O	1061	1062	.

O	1063	1065	To
O	1066	1073	protect
O	1074	1081	against
O	1082	1086	this
O	1087	1088	I
O	1089	1093	have
O	1094	1099	added
O	1100	1101	'
B-API	1102	1113	MakeValid()
O	1114	1115	'
O	1116	1118	to
O	1119	1122	the
O	1123	1129	INSERT
O	1130	1133	SQL
O	1134	1143	Statement
O	1144	1146	so
O	1147	1151	that
O	1152	1154	no
O	1155	1162	invalid
O	1163	1171	polygons
O	1172	1175	can
O	1176	1180	ever
O	1181	1186	exist
O	1187	1193	within
O	1194	1197	the
O	1198	1206	database
O	1207	1212	again
O	1212	1213	.

O	1214	1215	I
O	1216	1220	have
O	1221	1227	tested
O	1228	1237	inserting
O	1238	1240	an
O	1241	1248	invalid
O	1249	1256	polygon
O	1257	1261	with
O	1262	1265	and
O	1266	1273	without
O	1274	1275	'
B-API	1276	1285	MakeValid
O	1286	1287	'
O	1288	1294	within
O	1295	1298	the
O	1299	1305	INSERT
O	1306	1315	statement
O	1316	1319	and
O	1320	1323	can
O	1324	1331	confirm
O	1332	1338	adding
O	1339	1340	'
B-API	1341	1350	MakeValid
O	1351	1352	'
O	1353	1357	does
O	1358	1365	resolve
O	1366	1369	the
O	1370	1375	issue
O	1375	1376	.

O	1377	1396	@codeSnippetRemoved

O	0	6	Thanks
O	7	13	@Derek
O	14	17	for
O	18	28	suggesting
O	29	33	that
O	34	35	I
O	36	40	post
O	41	46	there
O	46	47	.

O	48	50	--
O	51	57	Pranav

O	58	61	You
O	62	66	need
O	67	69	to
O	70	73	add
O	74	75	a
O	76	85	reference
O	86	88	to
O	89	112	Raven.Storage.Esent.dll

O	0	2	Is
O	3	8	there
O	9	10	a
O	11	24	markdown-like
O	25	31	system
O	31	32	,
O	33	38	which
O	39	46	creates
O	47	55	multiple
O	56	62	output
O	63	68	files
O	68	69	?

O	70	73	I'm
O	74	81	looking
O	82	85	for
O	86	88	an
O	89	93	easy
O	94	97	way
O	98	100	to
O	101	107	create
O	108	109	a
O	110	115	whole
O	116	122	number
O	123	125	of
O	126	132	output
O	133	138	files
O	139	141	in
O	142	143	a
O	144	153	directory
O	154	163	structure
O	164	168	from
O	169	170	a
O	171	177	single
O	178	183	input
O	184	188	file
O	188	189	.

O	190	193	The
O	194	199	input
O	200	206	syntax
O	207	213	should
O	214	216	be
O	217	224	similar
O	225	227	to
B-Stan	228	236	Markdown
O	236	237	,
O	238	240	or
O	241	247	should
O	248	250	at
O	251	256	least
O	257	264	support
O	265	273	semantic
O	274	285	structuring
O	286	289	and
O	290	295	links
O	295	296	.

O	297	298	I
O	299	303	want
O	304	306	to
O	307	310	use
O	311	315	this
O	316	318	to
O	319	325	create
O	326	331	small
O	332	336	help
O	337	344	package
O	344	345	.

O	346	348	So
O	349	359	generating
O	360	361	a
O	362	367	table
O	368	370	of
O	371	378	content
O	379	382	and
O	383	390	support
O	391	394	for
O	395	403	Previous
O	404	407	and
O	408	412	Next
O	413	418	links
O	419	424	would
O	425	427	be
O	428	433	great
O	434	436	as
O	437	441	well
O	441	442	.

O	443	445	Is
O	446	451	there
O	452	453	a
O	454	458	tool
O	459	462	for
O	463	472	something
O	473	477	like
O	478	482	this
O	482	483	?

O	484	497	Alternatively
O	497	498	,
O	499	504	which
B-Stan	505	513	markdown
O	514	528	implementation
O	529	531	is
O	532	540	designed
O	541	543	to
O	544	546	be
O	547	557	extensible
O	558	561	for
O	562	566	this
O	567	576	something
O	577	581	like
O	582	586	this
O	586	587	?

O	0	4	Have
B-API	5	11	iframe
O	12	16	load
O	17	21	when
O	22	29	visible

O	30	31	I
O	32	36	have
O	37	38	a
O	39	43	page
O	44	48	with
O	49	54	about
O	55	58	100
O	59	65	videos
O	66	68	on
O	69	73	them
O	74	75	(
O	75	82	youtube
O	82	83	)
O	84	91	loading
O	92	94	an
B-API	95	101	iframe
O	101	102	.

O	103	107	They
O	108	111	are
O	112	115	all
O	116	118	in
O	119	121	an
B-API	122	131	accordion
O	132	137	style
O	138	142	menu
O	142	143	,
O	144	145	I
O	146	149	was
O	150	159	wondering
O	160	162	if
O	163	168	there
O	169	172	was
O	173	174	a
O	175	178	way
O	179	181	to
O	182	186	have
O	187	191	them
O	192	196	load
O	197	201	when
O	202	205	the
B-API	206	215	accordion
O	216	218	is
O	219	223	open
O	224	226	or
O	227	230	the
B-API	231	237	iframe
O	238	240	is
O	241	248	visible
O	249	251	on
O	252	255	the
O	256	260	page
O	260	261	.

O	262	267	Right
O	268	271	now
O	272	274	it
O	275	280	takes
O	281	283	up
O	284	287	way
O	288	291	too
O	292	296	much
O	297	303	memory
O	304	307	and
O	308	312	lags
O	313	316	the
O	317	321	page
O	322	323	a
O	324	327	lot
O	327	328	.

O	329	331	IF
O	332	335	you
O	336	340	want
O	341	343	to
O	344	346	do
O	347	351	this
O	351	352	,
O	353	356	you
O	357	360	can
O	361	364	set
O	365	368	the
O	369	372	src
O	373	381	property
O	382	384	of
O	385	388	the
B-API	389	395	iframe
O	395	396	,
O	397	401	that
O	402	408	points
O	409	411	to
O	412	415	the
O	416	422	videos
O	422	423	,
O	424	426	on
O	427	430	the
O	431	436	event
O	437	441	that
O	442	444	is
O	445	454	triggered
O	455	459	when
O	460	463	the
B-API	464	473	accordion
O	474	476	is
O	477	483	opened
O	483	484	.

O	485	486	I
O	487	494	haven't
O	495	501	worked
O	502	504	in
O	505	506	a
O	507	512	while
O	513	517	with
O	518	521	the
B-API	522	531	accordion
O	531	532	,
O	533	536	but
O	537	543	pretty
O	544	548	sure
O	549	554	there
O	555	557	is
O	558	559	a
O	560	564	init
O	565	570	event
O	571	574	for
O	575	577	it
O	577	578	.

O	579	582	You
O	583	590	haven't
O	591	596	shown
O	597	600	any
O	601	605	code
O	606	610	that
O	611	617	allows
O	618	620	us
O	621	623	to
O	624	631	include
O	632	636	this
O	637	639	in
O	640	644	your
O	645	649	code
O	649	650	.

O	651	656	Don't
O	657	660	set
O	661	664	the
O	665	668	src
O	669	671	of
O	672	675	the
O	676	681	video
O	681	682	,
O	683	688	store
O	689	691	it
O	692	694	in
O	695	699	data
O	700	719	@codeSnippetRemoved

O	720	725	Using
O	726	734	whatever
O	735	743	triggers
O	744	747	the
B-API	748	757	accordion
O	757	758	,
O	759	760	$
O	761	762	(
O	762	766	this
O	766	767	)
O	768	773	being
O	774	778	that
B-API	779	788	accordion
O	789	793	item
O	794	813	@codeSnippetRemoved

O	814	818	Okay
O	819	821	so
O	822	824	it
O	825	829	will
O	830	832	go
O	833	835	as
O	836	842	follow
O	843	844	:

O	845	849	HTML
O	850	869	@codeSnippetRemoved

O	870	880	javascript
O	881	900	@codeSnippetRemoved

O	901	908	Example
O	909	910	:
B-API	911	929	AccordionLoadFrame

O	0	3	How
O	4	7	can
O	8	9	I
O	10	12	do
O	13	16	the
O	17	27	equivalent
O	28	30	of
O	31	41	submitting
O	42	43	a
O	44	48	form
O	49	54	twice
O	55	59	with
O	60	63	PHP
O	63	64	?

O	65	66	I
O	67	71	have
O	72	73	a
O	74	81	problem
O	82	86	with
O	87	88	a
O	89	93	form
O	93	94	.

O	95	96	I
O	97	101	need
O	102	104	it
O	105	107	to
O	108	115	perform
O	116	119	two
O	120	127	actions
O	128	132	with
O	133	137	only
O	138	141	one
O	142	148	submit
O	149	154	click
O	154	155	.

O	156	160	I've
O	161	165	read
O	166	170	that
O	171	174	the
O	175	179	best
O	180	188	solution
O	189	191	is
O	192	193	a
O	194	205	server-side
O	206	212	script
O	212	213	,
O	214	217	but
O	218	220	my
O	221	230	knowledge
O	231	233	of
O	234	237	PHP
O	238	240	is
O	241	247	pretty
O	248	255	limited
O	255	256	,
O	257	259	so
O	260	263	I'd
O	264	270	really
O	271	281	appreciate
O	282	285	any
O	286	290	help
O	290	291	.

O	292	295	The
O	296	299	two
O	300	307	actions
O	308	309	I
O	310	314	need
O	315	317	to
O	318	325	perform
O	326	329	are
O	330	331	:

O	332	335	Run
O	336	337	a
O	338	344	script
O	345	349	that
O	350	357	uploads
O	358	359	a
O	360	364	file
O	365	368	and
O	369	374	sends
O	375	377	an
O	378	383	email
O	384	385	(
O	385	392	action=
O	393	394	"
O	394	406	uploader.php
O	406	407	"
O	407	408	)
O	409	415	Direct
O	416	419	the
O	420	424	user
O	425	427	to
O	428	429	a
O	430	436	PayPal
O	437	444	payment
O	445	452	gateway
O	453	454	(
O	454	461	action=
O	462	463	"
O	463	500	https://www.paypal.com/cgi-bin/webscr
O	500	501	"
O	501	502	)

O	503	505	As
O	506	507	I
O	508	511	see
O	512	514	it
O	514	515	,
O	516	519	the
O	520	527	problem
O	528	530	is
O	531	535	that
O	536	537	I
O	538	543	don't
O	544	548	have
O	549	556	control
O	557	561	over
O	562	565	the
O	566	572	PayPal
O	573	579	script
O	579	580	,
O	581	584	but
O	585	587	it
O	588	597	obviously
O	598	603	takes
O	604	608	some
O	609	613	data
O	614	618	from
O	619	622	the
O	623	627	form
O	628	629	(
O	629	633	i.e.
O	634	640	amount
O	640	641	,
O	642	649	concept
O	649	650	,
O	651	654	etc
O	655	658	...
O	658	659	)
O	659	660	,
O	661	663	so
O	664	670	adding
O	671	672	a
O	673	679	simple
O	680	688	redirect
O	689	691	in
O	692	704	uploader.php
O	705	710	isn't
O	711	717	enough
O	717	718	.

O	719	723	What
O	724	726	do
O	727	730	you
O	731	736	think
O	736	737	?

O	738	741	How
O	742	747	could
O	748	749	I
O	750	755	solve
O	756	758	it
O	758	759	?

O	760	766	Thanks
O	766	767	!

O	768	774	UPDATE
O	775	776	:
O	777	781	I'll
O	782	785	try
O	786	788	to
O	789	793	post
O	794	797	the
O	798	809	user-action
O	810	814	flow
O	815	816	:

O	817	821	user
O	822	827	fills
O	828	830	in
O	831	834	the
O	835	839	form
O	840	843	and
O	844	848	adds
O	849	850	a
O	851	855	file
O	856	858	to
O	859	865	upload
O	866	869	1st
O	870	874	form
O	875	881	action
O	882	883	:
O	884	888	file
O	889	891	is
O	892	900	uploaded
O	901	904	and
O	905	907	an
O	908	913	email
O	914	916	is
O	917	921	sent
O	922	923	(
O	923	930	action=
O	931	932	"
O	932	944	uploader.php
O	944	945	"
O	945	946	)
O	947	950	2nd
O	951	955	form
O	956	962	action
O	963	964	:
O	965	969	user
O	970	972	is
O	973	978	taken
O	979	981	to
O	982	983	a
O	984	990	paypal
O	991	998	payment
O	999	1003	form
O	1004	1005	(
O	1005	1012	action=
O	1013	1014	"
O	1014	1051	https://www.paypal.com/cgi-bin/webscr
O	1051	1052	"
O	1052	1053	)
O	1054	1058	When
O	1059	1062	the
O	1063	1071	purchase
O	1072	1074	is
O	1075	1084	completed
O	1085	1088	the
O	1089	1093	user
O	1094	1096	is
O	1097	1102	taken
O	1103	1105	to
O	1106	1107	a
O	1108	1116	purchase
O	1117	1129	confirmation
O	1130	1134	page
O	1134	1135	.

O	1136	1140	Your
O	1141	1153	uploader.php
O	1154	1160	should
O	1161	1165	show
O	1166	1169	the
O	1170	1173	new
O	1174	1180	paypal
O	1181	1185	form
O	1186	1187	(
O	1187	1189	or
O	1190	1193	the
O	1194	1198	same
O	1198	1199	)
O	1200	1202	to
O	1203	1207	user
O	1208	1211	and
O	1212	1218	submit
O	1219	1221	it
O	1222	1224	by
O	1225	1235	javascript
O	1236	1238	on
B-Stan	1239	1242	dom
O	1243	1254	ready.Don't
O	1255	1261	forget
O	1262	1267	about
O	1268	1282	non-javascript
O	1283	1288	users
O	1289	1292	too
O	1292	1293	.

O	1294	1313	@codeSnippetRemoved

O	1314	1317	You
O	1318	1321	can
O	1322	1326	send
O	1327	1330	the
O	1331	1335	form
O	1336	1338	to
O	1339	1349	submit.php
O	1349	1350	,
O	1351	1357	upload
O	1358	1362	your
O	1363	1367	file
O	1367	1368	,
O	1369	1376	perform
O	1377	1381	your
O	1382	1387	email
O	1388	1394	action
O	1394	1395	,
O	1396	1400	then
O	1401	1404	use
O	1405	1409	CURL
O	1410	1412	to
O	1413	1417	send
O	1418	1422	your
O	1423	1427	data
O	1428	1430	on
O	1431	1433	to
O	1434	1440	PayPal
O	1440	1441	.

O	1442	1446	This
O	1447	1451	site
O	1452	1455	has
O	1456	1458	an
O	1459	1466	example
O	1467	1469	of
O	1470	1473	how
O	1474	1476	to
O	1477	1481	send
O	1482	1486	data
O	1487	1489	to
O	1490	1496	PayPal
O	1497	1500	via
O	1501	1505	CURL
O	1506	1507	/
O	1508	1511	PHP
O	1512	1513	:

O	1514	1565	http://curl.phptrack.com/forum/viewtopic.php?p=9643
O	1566	1602	sid=5cc0c394df6efcf73772273846430fbe

O	0	7	Trouble
O	8	12	with
O	13	20	web.xml
O	21	24	url
O	25	32	pattern

O	33	35	In
O	36	38	my
O	39	46	web.xml
O	47	48	I
O	49	53	have
O	54	57	URL
O	58	65	pattern
O	66	69	for
B-Stan	70	77	servlet
O	78	82	like
O	83	87	this
O	88	89	:

O	90	101	url-pattern
O	102	103	/
O	104	105	*
O	106	107	/
O	108	117	myservice
O	118	119	/
O	120	131	url-pattern

O	132	134	So
O	135	136	I
O	137	141	want
O	142	144	to
O	145	149	call
O	150	152	it
O	153	158	using
O	159	168	blablabla
O	169	170	/
O	171	180	myservice
O	181	185	also
O	186	188	as
O	189	196	anyWord
O	197	198	/
O	199	208	myservice
O	208	209	.

O	210	213	But
O	214	216	it
O	217	224	doesn't
O	225	229	work
O	229	230	.

O	231	233	It
O	234	238	work
O	239	243	only
O	244	246	if
O	247	248	I
O	249	253	call
O	254	256	it
O	257	262	using
O	263	267	this
O	268	271	URL
O	272	273	:
O	274	275	/
O	276	277	*
O	278	279	/
O	280	289	myservice
O	290	291	(
O	291	295	with
O	296	304	asterisk
O	305	307	in
O	308	311	URL
O	311	312	)
O	312	313	.

O	314	317	You
O	318	323	can't
O	324	326	do
O	327	341	that.According
O	342	344	to
O	345	348	the
B-Stan	349	356	Servlet
I-Stan	357	360	2.5
O	361	374	Specification
O	375	376	(
O	376	379	and
O	380	386	things
O	387	393	aren't
O	394	398	that
O	399	408	different
O	409	411	in
O	412	417	other
O	418	424	levels
O	425	427	of
O	428	431	the
O	432	445	specification
O	445	446	)
O	446	447	,
O	448	455	chapter
O	456	464	SRV.11.2
O	465	466	:

O	467	468	A
O	469	475	string
O	476	485	beginning
O	486	490	with
O	491	492	a
O	493	494	/
O	495	504	character
O	505	508	and
O	509	515	ending
O	516	520	with
O	521	522	a
O	523	524	/
O	525	526	*
O	527	535	suffixis
O	536	540	used
O	541	544	for
O	545	549	path
O	550	557	mapping
O	557	558	.

O	559	560	A
O	561	567	string
O	568	577	beginning
O	578	582	with
O	583	584	a
O	585	586	*
O	586	587	.
O	588	594	prefix
O	595	597	is
O	598	602	used
O	603	605	as
O	606	608	an
O	609	618	extension
O	619	626	mapping
O	626	627	.

O	628	629	A
O	630	636	string
O	637	647	containing
O	648	652	only
O	653	656	the
O	657	658	/
O	659	668	character
O	669	678	indicates
O	679	682	the
O	683	684	"
O	684	691	default
O	691	692	"
B-Stan	693	700	servlet
O	701	703	of
O	704	707	the
O	708	719	application
O	719	720	.

O	721	723	In
O	724	728	this
O	729	733	case
O	734	737	the
B-Stan	738	745	servlet
O	746	750	path
O	751	753	is
O	754	757	the
O	758	765	request
O	766	769	URI
O	770	775	minus
O	776	779	the
O	780	787	context
O	788	792	path
O	793	799	andthe
O	800	804	path
O	805	809	info
O	810	812	is
O	813	817	null
O	817	818	.

O	819	822	All
O	823	828	other
O	829	836	strings
O	837	840	are
O	841	845	used
O	846	849	for
O	850	855	exact
O	856	863	matches
O	864	868	only
O	868	869	.

O	870	874	Your
O	875	879	case
O	880	885	falls
O	886	891	under
O	892	895	the
O	896	899	4th
O	900	906	bullet
O	906	907	,
O	908	910	so
O	911	916	exact
O	917	924	mapping
O	925	927	is
O	928	932	used
O	932	933	.

O	934	936	To
O	937	947	circumvent
O	948	952	that
O	952	953	,
O	954	957	use
O	958	959	a
O	960	967	mapping
O	968	970	of
O	971	972	/
O	973	974	(
O	974	979	third
O	980	984	case
O	984	985	)
O	985	986	.

O	987	990	Map
O	991	994	all
O	995	1003	requests
O	1004	1006	to
O	1007	1009	go
O	1010	1012	to
O	1013	1014	a
O	1015	1025	particular
B-Stan	1026	1033	servlet
O	1033	1034	,
O	1035	1038	and
O	1039	1043	have
O	1044	1048	that
B-Stan	1049	1056	servlet
O	1057	1065	re-route
O	1066	1074	requests
O	1075	1077	to
O	1078	1086	handlers
O	1087	1089	of
O	1090	1094	some
O	1095	1099	sort
O	1100	1101	(
O	1101	1107	either
O	1108	1113	other
O	1114	1122	servlets
O	1122	1123	,
O	1124	1126	or
O	1127	1131	some
O	1132	1138	custom
O	1139	1146	classes
O	1146	1147	)
O	1147	1148	.

O	1149	1152	For
O	1153	1160	example
O	1161	1162	:
O	1163	1182	@codeSnippetRemoved

O	1183	1186	And
O	1187	1191	then
O	1191	1192	,
O	1193	1199	within
O	1200	1209	MyServlet
O	1210	1211	'
O	1212	1213	s
O	1214	1218	code
O	1218	1219	,
O	1220	1227	inspect
O	1228	1231	the
O	1232	1235	URL
O	1236	1240	that
O	1241	1244	you
O	1245	1253	received
O	1254	1256	in
O	1257	1260	the
O	1261	1268	request
O	1269	1270	(
O	1270	1275	using
B-API	1276	1297	request.getPathInfo()
O	1297	1298	)
O	1299	1302	and
O	1303	1306	use
O	1307	1310	the
O	1311	1316	value
O	1317	1319	to
O	1320	1327	forward
O	1328	1331	the
O	1332	1339	request
O	1340	1342	to
O	1343	1348	other
O	1349	1357	handlers
O	1357	1358	.

O	1359	1362	You
O	1363	1368	could
O	1369	1372	use
O	1373	1374	a
O	1375	1381	filter
O	1382	1387	while
O	1388	1392	your
O	1393	1396	url
O	1397	1404	pattern
O	1405	1407	is
O	1408	1409	/
O	1410	1411	*
O	1412	1415	and
O	1416	1422	inside
O	1423	1426	the
O	1427	1433	filter
O	1434	1440	decide
O	1441	1446	which
O	1447	1458	redirection
O	1459	1462	you
O	1463	1471	required
O	1471	1472	.

O	1473	1492	@codeSnippetRemoved

O	1493	1512	@codeSnippetRemoved

O	1513	1517	What
O	1518	1523	about
O	1524	1527	two
O	1528	1539	ULR-mapping
O	1540	1548	sections
O	1548	1549	?

O	1550	1569	@codeSnippetRemoved

B-Plat	0	7	Android
O	8	9	:
O	10	14	Loop
O	15	17	to
O	18	22	pick
O	23	24	a
O	25	31	random
O	32	38	images
O	39	43	from
B-API	44	53	ArrayList

O	54	59	Right
O	60	63	now
O	64	66	my
O	67	74	program
O	75	83	randomly
O	84	92	displays
O	93	94	5
O	95	101	random
O	102	108	images
O	109	113	from
O	114	116	my
B-API	117	122	Array
I-API	123	127	List
O	128	131	and
O	132	136	here
O	137	138	'
O	139	140	s
O	141	144	the
O	145	149	main
O	150	154	part
O	155	157	of
O	158	162	what
O	163	164	I
O	165	169	have
O	170	173	now
O	174	175	:
O	176	195	@codeSnippetRemoved

O	196	199	I'm
O	200	203	now
O	204	211	getting
O	212	214	an
O	215	220	error
O	221	223	in
O	224	226	my
O	227	233	render
O	234	240	method
O	241	245	here
O	246	250	that
O	251	253	is
O	254	261	causing
O	262	265	the
O	266	269	app
O	270	272	to
O	273	278	crash
O	279	280	:
O	281	300	@codeSnippetRemoved

O	301	305	What
O	306	309	I'm
O	310	316	trying
O	317	319	to
O	320	322	do
O	323	325	is
O	326	330	make
O	331	335	each
O	336	344	drawable
O	345	350	image
O	351	355	have
O	356	358	an
O	359	366	integer
O	367	372	value
O	373	377	such
O	378	380	as
O	381	382	:
O	383	397	R.drawable.one
O	398	403	equal
O	404	406	to
O	407	408	1
O	408	409	,
O	410	424	R.drawable.two
O	425	430	equal
O	431	433	to
O	434	435	2
O	436	441	.....

O	442	457	R.drawable.five
O	458	463	equal
O	464	466	to
O	467	468	5
O	468	469	.

O	470	473	And
O	474	478	have
O	479	480	a
O	481	485	loop
O	486	492	repeat
O	493	498	until
O	499	502	the
O	503	509	images
O	510	519	displayed
O	520	526	equals
O	527	528	a
O	529	534	total
O	535	540	value
O	541	543	of
O	544	546	50
O	547	548	(
O	548	552	they
O	553	556	all
O	557	560	add
O	561	563	up
O	564	566	to
O	567	569	50
O	569	570	)
O	571	574	and
O	575	579	then
O	580	584	stop
O	584	585	.

O	586	589	I'm
O	590	596	trying
O	597	599	to
O	600	603	get
O	604	614	myImgCount
O	615	618	and
O	619	632	totalImgCount
O	633	635	to
O	636	640	keep
O	641	646	track
O	647	649	of
O	650	653	the
O	654	659	value
O	660	662	of
O	663	666	the
O	667	672	image
O	673	677	that
O	678	680	is
O	681	689	randomly
O	690	696	chosen
O	697	700	and
O	701	702	I
O	703	707	know
O	708	710	it
O	711	716	isn't
O	717	722	right
O	723	726	but
O	727	728	I
O	729	734	can't
O	735	739	find
O	740	743	any
O	744	748	info
O	749	751	on
O	752	755	how
O	756	758	to
O	759	767	complete
O	768	772	this
O	773	777	task
O	777	778	.

O	779	785	Thanks
O	786	788	in
O	789	796	advance
O	797	799	to
O	800	806	anyone
O	807	810	who
O	811	814	can
O	815	819	help
O	819	820	,
O	821	824	I'm
O	825	828	new
O	829	831	to
O	832	838	coding
O	839	841	so
O	842	844	if
O	845	848	you
O	849	852	can
O	853	860	explain
O	861	864	why
O	865	868	you
O	869	873	used
O	874	878	your
O	879	883	code
O	884	886	it
O	887	892	would
O	893	897	help
O	898	902	even
O	903	907	more
O	907	908	!

O	909	915	Thanks
O	915	916	!

O	917	920	You
O	921	924	can
O	925	928	use
O	929	932	the
O	933	941	drawable
O	942	948	naming
O	949	959	convention
O	960	962	as
O	963	980	R.drawable.image1
O	980	981	,
O	982	999	R.drawable.image2
O	1000	1003	and
O	1004	1007	use
O	1008	1027	@codeSnippetRemoved

O	1028	1035	Details
O	1036	1038	on
B-API	1039	1052	getIdentifier
O	1053	1059	method
O	1060	1064	here
O	1065	1066	:

O	1067	1071	Hope
O	1072	1076	this
O	1077	1082	helps

O	0	3	How
O	4	6	do
O	7	8	I
O	9	15	detect
O	16	22	64-bit
O	23	27	Java
O	28	32	from
O	33	36	the
O	37	44	command
O	45	49	line
O	49	50	?

O	51	53	Is
O	54	59	there
O	60	63	any
O	64	67	way
O	68	70	to
O	71	74	get
O	75	77	at
O	78	82	Java
O	83	91	internal
O	92	102	properties
O	102	103	,
O	104	108	such
O	109	111	as
B-API	112	131	sun.arch.data.model
O	131	132	,
O	133	137	from
O	138	139	a
O	140	147	command
O	148	152	line
O	153	155	on
B-Plat	156	163	windows
O	163	164	?

O	165	166	I
O	167	171	need
O	172	173	a
O	174	181	command
O	182	184	to
O	185	188	put
O	189	191	in
O	192	193	a
O	194	199	batch
O	200	206	script
O	207	211	that
O	212	216	will
O	217	223	detect
O	224	227	the
O	228	232	java
O	233	245	architecture
O	246	250	type
O	251	252	:
O	253	259	32-bit
O	260	262	or
O	263	269	64-bit
O	269	270	.

O	271	275	Here
O	276	278	is
O	279	280	a
O	281	291	prewritten
O	292	300	property
O	301	305	dump
O	306	313	program
O	314	317	for
O	318	321	you
O	322	323	:
O	324	329	linky

O	330	332	If
O	333	336	you
O	337	340	are
O	341	346	using
O	347	350	Sun
O	351	352	'
O	353	354	s
O	355	357	VM
O	358	359	(
O	359	362	and
O	363	364	I
O	365	370	would
O	371	378	suppose
O	379	384	other
O	385	388	VMs
O	389	393	have
O	394	401	similar
O	402	409	details
O	410	412	in
O	413	418	their
O	419	426	version
O	427	438	information
O	438	439	)
O	439	440	,
O	441	444	you
O	445	448	can
O	449	454	check
O	455	458	for
O	459	462	the
O	463	469	string
O	470	471	"
O	471	477	64-Bit
O	477	478	"
O	479	481	in
O	482	485	the
O	486	492	output
O	493	495	of
O	496	497	"
O	497	501	java
O	502	510	-version
O	510	511	"
O	512	513	:
O	514	533	@codeSnippetRemoved

O	534	536	If
O	537	540	you
O	541	548	install
B-Fram	549	555	Groovy
O	556	559	you
O	560	563	can
O	564	567	use
O	568	587	@codeSnippetRemoved

O	588	591	for
O	592	595	all
O	596	606	properties
O	606	607	,
O	608	611	and
O	612	631	@codeSnippetRemoved

O	632	635	for
O	636	644	specific
O	645	655	properties
O	655	656	.

O	657	667	Installing
B-Fram	668	674	Groovy
O	675	677	is
O	678	680	as
O	681	685	easy
O	686	688	as
O	689	699	extracting
O	700	701	a
B-Stan	702	705	zip
O	706	709	and
O	710	713	add
O	714	716	to
O	717	721	path
O	721	722	.

O	723	730	jarnbjo
O	731	732	'
O	733	734	s
O	735	741	script
O	742	744	is
O	745	748	for
B-Plat	749	756	Windows
O	756	757	.

O	758	760	In
O	761	765	Unix
O	766	771	shell
O	771	772	,
O	773	776	you
O	777	780	can
O	781	784	use
O	785	788	the
O	789	798	following
O	799	805	script
O	805	806	.

O	807	826	@codeSnippetRemoved

O	0	4	Java
O	4	5	,
B-Fram	6	12	Tomcat
O	13	16	and
B-Fram	17	23	Jersey
O	24	31	hosting

O	32	36	Does
O	37	43	anyone
O	44	48	have
O	49	52	any
O	53	62	knowledge
O	63	65	of
O	66	67	a
O	68	75	hosting
O	76	84	provider
O	85	89	that
O	90	96	allows
O	97	100	for
O	101	104	the
O	105	108	use
O	109	111	of
O	112	115	the
O	116	125	following
O	126	127	:

O	128	132	Java
B-Fram	133	139	Tomcat
I-Fram	140	146	Jersey
O	147	152	MySQL

O	153	154	I
O	155	159	have
O	160	164	been
O	165	172	looking
O	173	179	around
O	180	183	and
O	184	188	cant
O	189	193	seem
O	194	196	to
O	197	201	find
O	201	202	.

O	203	209	Thanks

O	210	213	Try
O	214	221	Kattare
O	221	222	.

O	223	233	Relatively
O	234	245	inexpensive
O	246	249	and
O	250	254	very
O	255	265	responsive
O	266	273	support
O	274	276	by
O	277	282	email
O	283	286	and
O	287	289	by
O	290	295	phone
O	295	296	.

O	0	3	how
O	4	7	can
O	8	9	I
O	10	13	get
O	14	18	Font
O	19	20	X
O	21	27	offset
O	28	33	width
O	34	36	in
B-Fram	37	43	java2D
O	43	44	?

O	45	46	I
O	47	51	need
O	52	57	print
O	58	61	two
O	62	67	words
O	68	69	:
O	70	71	"
O	71	72	A
O	72	73	"
O	74	77	and
O	78	79	"
O	79	80	B
O	80	81	"
O	82	87	using
B-Fram	88	92	java
I-Fram	93	95	2D

O	96	100	font
O	101	105	size
O	106	107	=
O	108	111	100
O	112	113	;

O	114	115	"
O	115	116	A
O	116	117	"
O	118	122	font
O	123	129	family
O	130	131	:
O	132	138	Bodoni
O	139	141	MT
O	142	148	Poster
O	149	159	Compressed

O	160	161	"
O	161	162	B
O	162	163	"
O	164	168	font
O	169	175	family
O	176	177	:
O	178	183	Arial

O	184	185	I
O	186	192	writed
O	193	198	below
O	199	204	codes
O	205	207	to
O	208	210	do
O	211	213	it
O	214	215	:
O	216	235	@codeSnippetRemoved

O	236	237	I
O	238	241	get
O	242	245	the
O	246	252	result
O	253	258	image
O	259	260	:

O	261	264	but
O	265	266	I
O	267	271	need
O	272	276	like
O	277	281	this
O	282	283	(
O	283	287	make
O	288	290	by
B-Fram	291	300	PhotoShop
O	301	303	):

O	304	305	I
O	306	311	think
O	312	315	the
O	316	324	question
O	325	327	at
O	328	340	g.drawString
O	341	342	(
O	342	343	"
O	343	344	B
O	344	345	"
O	345	346	,
O	347	356	FONT_SIZE
O	356	357	,
O	358	367	FONT_SIZE
O	368	370	);

O	371	374	How
O	375	378	can
O	379	380	I
O	381	384	get
O	385	388	the
O	389	393	font
O	394	395	X
O	396	402	offset
O	403	408	width
O	408	409	?

O	410	416	thanks
O	417	420	for
O	421	425	help
O	426	428	:)

O	429	434	After
O	435	438	you
O	439	441	do
O	442	445	the
B-API	446	453	setFont
O	453	454	,
O	455	462	declare
O	463	464	a
O	465	473	variable
O	474	478	like
O	479	498	@codeSnippetRemoved

O	499	502	Now
O	503	507	that
O	508	511	you
O	512	516	have
O	517	520	all
O	521	524	the
O	525	535	dimensions
O	536	538	of
O	539	542	the
O	543	550	letters
O	550	551	,
O	552	555	set
O	556	561	their
O	562	571	positions
O	572	573	(
O	573	575	px
O	576	578	is
O	579	587	distance
O	588	592	from
O	593	596	the
O	597	601	left
O	602	606	edge
O	607	609	to
O	610	613	the
O	614	620	letter
O	620	621	,
O	622	624	py
O	625	629	from
O	630	633	the
O	634	637	top
O	638	640	to
O	641	644	the
O	645	653	baseline
O	654	656	of
O	657	660	the
O	661	665	font
O	665	666	)
O	667	686	@codeSnippetRemoved

O	687	690	And
O	691	700	similarly
O	701	704	for
O	705	706	"
O	706	707	B
O	707	708	"
O	708	709	.

O	710	714	Hope
O	715	719	that
O	720	725	helps
O	725	726	,
O	727	728	-
O	729	732	M.S
O	732	733	.

O	0	3	You
O	4	10	should
O	11	15	then
O	16	19	use
O	20	23	the
O	24	27	get
O	28	31	...

O	32	33	-
O	34	37	and
O	38	41	set
O	42	45	...
O	46	53	methods
O	54	56	on
O	57	61	this
B-Stan	62	66	Blob
O	66	67	.

O	68	72	Here
O	73	76	you
O	77	86	basically
O	87	91	have
O	92	95	two
O	96	103	options
O	104	105	:

O	106	110	Work
O	111	115	with
O	116	117	a
O	118	128	byte-array
O	129	130	:

O	131	134	Get
O	135	139	hold
O	140	142	of
O	143	144	a
O	145	149	byte
O	150	152	[]
O	153	163	containing
O	164	167	the
O	168	172	data
O	173	180	through
B-API	181	194	Blob.getBytes
O	195	205	Manipulate
O	206	210	this
O	211	221	byte-array
O	222	225	Set
O	226	228	it
O	229	233	back
O	234	239	using
B-API	240	253	Blob.setBytes
O	253	254	.

O	255	259	Work
O	260	264	with
B-API	265	276	InputStream
O	277	278	/
B-API	279	291	OutputStream
O	292	293	:

O	294	297	Get
O	298	302	hold
O	303	304	a
O	305	307	an
B-API	308	319	InputStream
O	320	327	through
B-API	328	348	Blob.getBinaryStream
O	349	359	Manipulate
O	360	364	this
O	365	371	stream
O	372	374	as
O	375	378	you
O	379	382	see
O	383	386	fit
O	387	390	Use
B-API	391	411	Blob.setBinaryStream
O	411	412	.

O	413	415	An
O	416	427	alternative
O	428	436	approach
O	437	439	is
O	440	442	to
O	443	447	skip
O	448	455	messing
O	456	460	with
B-Stan	461	465	Blob
O	466	468	in
O	469	472	the
O	473	478	first
O	479	484	place
O	484	485	,
O	486	489	and
O	490	497	instead
O	498	501	use
O	502	505	the
O	506	512	second
O	513	521	approach
O	522	523	(
O	523	527	with
O	528	535	streams
O	535	536	)
O	537	545	directly
O	546	553	through
O	554	557	the
B-API	558	567	ResultSet
O	568	578	-interface
O	578	579	.

O	580	584	With
O	585	591	Simple
B-Stan	592	596	Java
I-Stan	597	601	JDBC
O	602	605	Api
O	605	606	,
O	607	610	you
O	611	614	can
O	615	618	get
O	619	620	a
B-API	621	634	java.sql.Blob
O	635	639	back
O	640	644	from
O	645	646	a
B-API	647	656	ResultSet
O	656	657	.

B-API	658	675	ResultSet.getBlob
O	676	677	(
O	677	682	index
O	682	683	)
O	684	686	or
B-API	687	704	ResultSet.getBlob
O	705	706	(
O	706	712	String
O	713	723	columnName
O	723	724	)
O	724	725	.

O	726	730	Both
O	731	738	returns
O	739	740	a
B-Stan	741	745	Blob
O	745	746	.

O	747	751	Once
O	752	755	you
O	756	759	get
O	760	761	a
B-Stan	762	766	Blob
O	766	767	,
O	768	771	you
O	772	775	can
O	776	779	get
O	780	783	the
O	784	788	byte
O	789	791	[]
O	792	796	back
O	797	801	from
O	802	805	the
B-API	806	821	Blob.getBytes()
O	822	828	method
O	829	831	or
O	832	835	set
O	836	841	using
B-API	842	852	setBytes()
O	853	859	method
O	859	860	.

O	861	867	Update
O	868	869	:
O	870	876	Seeing
O	877	881	that
O	882	886	some
O	887	895	Database
O	896	902	driver
O	903	910	vendors
O	911	916	don't
O	917	924	support
B-Stan	925	929	Blob
O	929	930	,
O	931	934	you
O	935	938	can
O	939	942	use
B-API	943	970	ResultSet.getBinaryStream()
O	970	971	.

O	972	974	It
O	975	982	depends
O	983	985	on
O	986	991	which
O	992	996	kind
O	997	999	of
O	1000	1004	blob
O	1005	1013	contains
O	1014	1015	(
O	1015	1020	image
O	1020	1021	,
O	1022	1027	video
O	1027	1028	)
O	1029	1032	and
O	1033	1035	it
O	1036	1037	'
O	1038	1039	s
O	1040	1049	extension
O	1049	1050	.

O	1051	1052	I
O	1053	1058	wrote
O	1059	1060	a
O	1061	1067	simple
O	1068	1075	program
O	1076	1078	to
O	1079	1087	retrieve
O	1088	1090	an
O	1091	1096	image
O	1097	1101	from
O	1102	1104	DB
O	1105	1108	and
O	1109	1113	show
O	1114	1116	it
O	1117	1119	in
B-Stan	1120	1123	JSP
O	1124	1128	page
O	1128	1129	.

O	1130	1134	Hope
O	1135	1137	it
O	1138	1143	helps
O	1143	1144	.

B-Stan	1145	1148	JSP
O	1149	1153	Page
O	1154	1173	@codeSnippetRemoved

B-Stan	1174	1181	Servlet
O	1182	1186	Page
O	1187	1206	@codeSnippetRemoved

O	1207	1214	Calling
O	1215	1224	Procedure
O	1225	1244	@codeSnippetRemoved

O	0	4	Best
O	5	13	practice
O	14	17	for
O	18	27	parameter
O	28	34	naming
O	35	37	in
O	38	42	Java
O	43	55	constructors
O	56	59	and
O	60	66	simple
O	67	74	setters

O	75	77	Is
O	78	83	there
O	84	85	a
O	86	94	standard
O	95	105	acceptable
O	106	116	convention
O	117	120	for
O	121	131	parameters
O	132	134	in
O	135	139	Java
O	140	142	to
O	143	158	straightforward
O	159	171	constructors
O	172	175	and
O	176	183	setters
O	183	184	?

O	185	186	(
O	186	190	I've
O	191	195	seen
O	196	199	the
O	200	206	answer
O	207	210	for
O	211	214	C++
O	214	215	,
O	216	219	but
O	220	229	practices
O	230	233	are
O	234	239	often
O	240	249	different
O	250	257	between
O	258	261	the
O	262	265	two
O	266	277	communities
O	277	278	)

O	279	286	Suppose
O	287	291	that
O	292	293	I
O	294	298	have
O	299	300	a
O	301	306	class
O	307	308	C
O	309	313	with
O	314	315	a
O	316	319	foo
O	320	325	field
O	325	326	.

O	327	328	I
O	329	333	have
O	334	342	commonly
O	343	347	seen
O	348	351	the
O	352	361	following
O	362	367	three
O	368	375	options
O	376	377	:

O	378	379	1
O	379	380	)
O	381	384	Use
O	385	388	the
O	389	395	actual
O	396	401	field
O	402	406	name
O	407	411	with
O	412	414	an
O	415	425	underscore
O	426	427	:

O	428	429	2
O	429	430	)
O	431	434	Use
O	435	438	the
O	439	445	actual
O	446	451	field
O	452	456	name
O	456	457	,
O	458	462	just
O	463	466	use
O	467	468	"
O	468	472	this
O	472	473	"
O	474	476	in
O	477	484	setting
O	485	486	:

O	487	488	3
O	488	489	)
O	490	500	Completely
O	501	513	inconsistent
O	514	520	things
O	521	525	like
O	526	527	:

O	528	529	I
O	530	534	tend
O	535	537	to
O	538	541	use
O	542	543	2
O	543	544	,
O	545	548	but
O	549	552	I'm
O	553	562	wondering
O	563	567	what
O	568	569	'
O	570	571	s
O	572	579	correct
O	580	588	practice
O	588	589	.

O	590	591	I
O	592	596	have
O	597	601	seen
O	602	603	2
O	604	607	and
O	608	609	3
O	610	614	used
O	615	618	the
O	619	623	most
O	623	624	.

O	625	629	That
O	630	634	said
O	634	635	,
O	636	639	the
O	640	646	answer
O	647	649	is
O	650	658	dictated
O	659	661	by
O	662	666	what
O	667	670	the
O	671	679	accepted
O	680	688	standard
O	689	691	is
O	692	695	for
O	696	699	the
O	700	704	code
O	705	709	base
O	710	713	you
O	714	717	are
O	718	730	contributing
O	731	733	to
O	733	734	.

O	735	736	I
O	737	742	think
O	743	745	it
O	746	748	is
O	749	753	more
O	754	763	important
O	764	766	to
O	767	769	be
O	770	780	consistent
O	781	787	across
O	788	791	the
O	792	799	project
O	800	804	than
O	805	809	have
O	810	813	one
O	814	815	"
O	815	820	right
O	820	821	"
O	822	828	answer
O	829	832	for
O	833	838	every
O	839	845	single
O	846	850	java
O	851	860	developer
O	860	861	.

B-Fram	862	869	Eclipse
O	870	874	code
O	875	884	genration
O	885	889	uses
O	890	895	style
O	896	898	#2
O	899	903	from
O	904	908	your
O	909	913	list
O	913	914	.

O	915	921	Option
O	922	925	two
O	926	928	is
O	929	933	most
O	934	940	common
O	940	941	.

O	942	944	In
O	945	949	Java
O	950	952	it
O	953	954	'
O	955	956	s
O	957	967	considered
O	968	972	poor
O	973	981	practice
O	982	984	to
O	985	988	use
O	989	1000	meaningless
O	1001	1005	name
O	1006	1014	prefixes
O	1015	1017	or
O	1018	1026	suffixes
O	1027	1029	to
O	1030	1041	distinguish
O	1042	1050	instance
O	1051	1060	variables
O	1061	1065	from
O	1066	1076	parameters
O	1077	1081	from
O	1082	1087	local
O	1088	1097	variables
O	1097	1098	.

O	1099	1102	But
O	1103	1108	there
O	1109	1112	are
O	1113	1115	no
O	1116	1127	conventions
O	1128	1131	for
O	1132	1135	the
O	1136	1141	names
O	1142	1152	themselves
O	1152	1153	.

O	1154	1157	Use
O	1158	1166	whatever
O	1167	1172	names
O	1173	1177	make
O	1178	1181	the
O	1182	1186	code
O	1187	1194	easiest
O	1195	1197	to
O	1198	1208	understand
O	1208	1209	.

O	1210	1211	I
O	1212	1216	know
O	1217	1221	that
O	1222	1226	when
B-Fram	1227	1235	netbeans
O	1236	1249	automatically
O	1250	1257	creates
O	1258	1265	getters
O	1266	1269	and
O	1270	1277	setters
O	1278	1280	it
O	1281	1285	uses
O	1286	1292	number
O	1293	1294	2
O	1295	1301	method
O	1301	1302	.

O	1303	1304	I
O	1305	1315	personally
O	1316	1323	usually
O	1324	1327	add
O	1328	1332	temp
O	1333	1335	to
O	1336	1339	the
O	1340	1348	variable
O	1349	1352	i.e
O	1353	1356	foo
O	1357	1358	=
O	1359	1366	tempfoo
O	1366	1367	.

O	1368	1371	But
O	1372	1374	as
O	1375	1380	neesh
O	1381	1385	says
O	1386	1389	you
O	1390	1396	should
O	1397	1400	try
O	1401	1403	to
O	1404	1410	remain
O	1411	1421	consistent
O	1422	1432	regardless
O	1433	1435	of
O	1436	1441	which
O	1442	1448	method
O	1449	1452	you
O	1453	1459	choose

O	1460	1461	(
O	1461	1462	1
O	1462	1463	)
O	1464	1466	is
O	1467	1471	very
O	1472	1473	C
O	1474	1475	/
O	1476	1479	C++
O	1479	1480	.

O	1481	1485	Java
O	1486	1493	doesn't
O	1494	1498	tend
O	1499	1501	to
O	1502	1505	use
O	1506	1513	leading
O	1514	1525	underscores
O	1526	1530	much
O	1530	1531	.

O	1532	1533	I
O	1534	1544	personally
O	1545	1548	use
O	1549	1550	(
O	1550	1551	2
O	1551	1552	)
O	1553	1559	almost
O	1560	1571	exclusively
O	1571	1572	.

O	1573	1574	(
O	1574	1575	3
O	1575	1576	)
O	1577	1579	is
O	1580	1584	just
O	1585	1591	making
O	1592	1596	your
O	1597	1601	life
O	1602	1611	difficult
O	1612	1619	because
O	1620	1622	it
O	1623	1626	can
O	1627	1629	be
O	1630	1634	hard
O	1635	1637	to
O	1638	1643	think
O	1644	1646	of
O	1647	1650	two
O	1651	1661	meaningful
O	1662	1665	yet
O	1666	1673	concise
O	1674	1679	names
O	1680	1683	for
O	1684	1687	the
O	1688	1694	member
O	1695	1698	and
O	1699	1702	the
O	1703	1712	parameter
O	1712	1713	.

O	1714	1716	As
O	1717	1720	you
O	1721	1725	code
O	1726	1728	to
O	1729	1733	make
O	1734	1737	the
O	1738	1747	interface
O	1748	1750	as
O	1751	1756	clear
O	1757	1759	as
O	1760	1768	possible
O	1768	1769	,
O	1770	1771	I
O	1772	1778	always
O	1779	1785	prefer
O	1786	1791	using
O	1792	1793	a
O	1794	1799	field
O	1800	1802	as
O	1803	1808	_name
O	1809	1819	internally
O	1819	1820	,
O	1821	1827	having
O	1828	1830	it
O	1831	1833	as
O	1834	1838	name
O	1839	1841	as
O	1842	1843	a
O	1844	1850	method
O	1851	1859	argument
O	1859	1860	,
O	1861	1870	assigning
O	1871	1873	it
O	1874	1883	elegantly
O	1884	1886	as
O	1887	1892	_name
O	1893	1894	=
O	1895	1899	name
O	1899	1900	.

O	1901	1902	I
O	1903	1907	have
O	1908	1912	seen
O	1913	1917	this
O	1918	1920	in
O	1921	1927	Fowler
O	1928	1929	'
O	1930	1931	s
O	1932	1943	Refactoring
O	1944	1947	and
O	1948	1953	other
O	1954	1961	similar
O	1962	1971	textbooks
O	1971	1972	,
O	1973	1979	though
O	1980	1981	I
O	1982	1985	see
O	1986	1990	ugly
O	1991	2001	mechanisms
O	2002	2006	such
O	2007	2009	as
O	2010	2015	using
O	2016	2019	the
O	2020	2025	field
O	2026	2028	as
O	2029	2033	name
O	2034	2044	internally
O	2045	2049	then
O	2050	2055	using
O	2056	2061	aName
O	2062	2064	as
O	2065	2066	a
O	2067	2073	method
O	2074	2082	argument
O	2082	2083	,
O	2084	2087	ugh
O	2087	2088	.

O	2089	2093	I've
O	2094	2098	also
O	2099	2103	seen
O	2104	2107	the
O	2108	2114	Option
O	2115	2116	2
O	2117	2119	as
O	2120	2123	the
O	2124	2128	most
O	2129	2135	common
O	2136	2139	one
O	2140	2141	:

O	2142	2146	IDEs
O	2147	2151	such
O	2152	2154	as
B-Fram	2155	2162	Eclipse
O	2163	2166	and
B-Fram	2167	2175	Netbeans
O	2176	2180	will
O	2181	2194	automatically
O	2195	2200	write
O	2201	2204	the
O	2205	2212	getters
O	2213	2216	and
O	2217	2224	setters
O	2225	2227	in
O	2228	2231	the
O	2232	2237	above
O	2238	2244	format
O	2244	2245	.

O	2246	2251	There
O	2252	2255	are
O	2256	2257	a
O	2258	2261	few
O	2262	2268	merits
O	2269	2271	to
O	2272	2277	using
O	2278	2282	this
O	2283	2289	method
O	2290	2291	:

O	2292	2296	Does
O	2297	2300	not
O	2301	2304	use
O	2305	2308	the
O	2309	2319	underscore
O	2320	2321	(
O	2321	2322	_
O	2322	2323	)
O	2324	2333	character
O	2334	2336	in
O	2337	2340	the
O	2341	2346	field
O	2347	2351	name
O	2352	2354	--
O	2355	2366	underscores
O	2367	2370	are
O	2371	2374	not
O	2375	2386	recommended
O	2387	2390	for
O	2391	2403	non-constant
O	2404	2409	field
O	2410	2415	names
O	2415	2416	.

O	2417	2420	The
O	2421	2424	use
O	2425	2427	of
O	2428	2431	the
O	2432	2442	underscore
O	2443	2452	character
O	2453	2455	in
O	2456	2458	an
O	2459	2469	identifier
O	2470	2472	is
O	2473	2476	not
O	2477	2488	recommended
O	2489	2495	except
O	2496	2499	for
O	2500	2511	identifiers
O	2512	2515	for
O	2516	2525	constants
O	2525	2526	.

O	2527	2530	The
O	2531	2540	Variables
O	2541	2545	page
O	2546	2548	of
O	2549	2552	The
O	2553	2557	Java
O	2558	2567	Tutorials
O	2568	2576	mentions
O	2577	2580	the
O	2581	2590	following
O	2591	2596	about
O	2597	2608	underscores
O	2609	2610	:

O	2611	2613	If
O	2614	2618	your
O	2619	2627	variable
O	2628	2634	stores
O	2635	2636	a
O	2637	2645	constant

O	2646	2651	value
O	2651	2652	,
O	2653	2657	such
O	2658	2660	as
O	2661	2667	static
O	2668	2673	final
O	2674	2677	int

O	2678	2687	NUM_GEARS
O	2688	2689	=
O	2690	2691	6
O	2691	2692	,
O	2693	2696	the
O	2697	2707	convention
O	2708	2715	changes

O	2716	2724	slightly
O	2724	2725	,
O	2726	2738	capitalizing
O	2739	2744	every
O	2745	2751	letter

O	2752	2755	and
O	2756	2766	separating
O	2767	2777	subsequent
O	2778	2783	words
O	2784	2788	with

O	2789	2792	the
O	2793	2803	underscore
O	2804	2813	character
O	2813	2814	.

O	2815	2817	By

O	2818	2828	convention
O	2828	2829	,
O	2830	2833	the
O	2834	2844	underscore
O	2845	2854	character

O	2855	2857	is
O	2858	2863	never
O	2864	2868	used
O	2869	2878	elsewhere
O	2878	2879	.

O	2880	2881	(
O	2881	2889	Emphasis
O	2890	2895	added
O	2895	2896	.
O	2896	2897	)

O	2898	2903	Since
O	2904	2909	field
O	2910	2915	names
O	2916	2919	are
O	2920	2923	not
O	2924	2933	constants
O	2933	2934	,
O	2935	2944	according
O	2945	2947	to
O	2948	2952	what
O	2953	2955	is
O	2956	2963	written
O	2964	2966	on
O	2967	2971	that
O	2972	2976	page
O	2976	2977	,
O	2978	2981	one
O	2982	2988	should
O	2989	2992	not
O	2993	2996	use
O	2997	3008	underscores
O	3009	3011	in
O	3012	3024	non-constant
O	3025	3031	fields
O	3031	3032	.

O	3033	3037	IDEs
O	3038	3041	can
O	3042	3055	automatically
O	3056	3059	add
B-Fram	3060	3067	Javadoc
O	3068	3076	comments
O	3077	3086	according
O	3087	3089	to
O	3090	3093	the
O	3094	3098	name
O	3099	3101	of
O	3102	3105	the
O	3106	3115	parameter
O	3116	3118	of
O	3119	3122	the
O	3123	3129	method
O	3129	3130	,
O	3131	3133	so
O	3134	3140	having
O	3141	3144	the
O	3145	3149	name
O	3150	3152	of
O	3153	3156	the
O	3157	3162	field
O	3163	3165	in
O	3166	3169	the
O	3170	3179	parameter
O	3180	3184	list
O	3185	3190	would
O	3191	3193	be
O	3194	3204	beneficial
O	3204	3205	.

O	3206	3209	The
O	3210	3219	following
O	3220	3222	is
O	3223	3225	an
O	3226	3233	example
O	3234	3236	of
O	3237	3239	an
O	3240	3253	automatically
O	3254	3263	generated
O	3264	3271	Javadoc
O	3272	3273	:

O	3274	3280	Having
O	3281	3284	the
B-Fram	3285	3292	Javadoc
O	3293	3300	reflect
O	3301	3304	the
O	3305	3309	name
O	3310	3312	of
O	3313	3316	the
O	3317	3322	field
O	3323	3326	has
O	3327	3334	another
O	3335	3342	benefit
O	3343	3345	--
O	3346	3350	IDEs
O	3351	3355	that
O	3356	3360	have
O	3361	3365	code
O	3366	3376	completion
O	3377	3380	can
O	3381	3384	use
O	3385	3388	the
O	3389	3394	field
O	3395	3399	name
O	3400	3402	in
O	3403	3406	the
O	3407	3414	Javadoc
O	3415	3417	in
O	3418	3423	order
O	3424	3426	to
O	3427	3440	automatically
O	3441	3445	fill
O	3446	3449	out
O	3450	3459	parameter
O	3460	3465	names
O	3466	3467	:

O	3468	3474	Giving
O	3475	3482	meaning
O	3483	3485	to
O	3486	3489	the
O	3490	3495	field
O	3496	3500	name
O	3501	3504	and
O	3505	3514	parameter
O	3515	3519	name
O	3520	3524	will
O	3525	3529	make
O	3530	3532	it
O	3533	3539	easier
O	3540	3542	to
O	3543	3553	understand
O	3554	3558	what
O	3559	3562	the
O	3563	3572	parameter
O	3573	3581	actually
O	3582	3592	represents
O	3592	3593	.

O	3594	3599	Those
O	3600	3603	are
O	3604	3608	some
O	3609	3611	of
O	3612	3615	the
O	3616	3622	merits
O	3623	3624	I
O	3625	3628	can
O	3629	3633	come
O	3634	3636	up
O	3637	3641	with
O	3642	3644	at
O	3645	3648	the
O	3649	3655	moment
O	3655	3656	,
O	3657	3660	and
O	3661	3662	I
O	3663	3670	believe
O	3671	3675	that
O	3676	3678	it
O	3679	3681	is
O	3682	3686	most
O	3687	3693	likely
O	3694	3697	the
O	3698	3702	most
O	3703	3709	common
O	3710	3713	way
O	3714	3716	to
O	3717	3723	naming
O	3724	3734	parameters
O	3735	3737	in
O	3738	3742	Java
O	3742	3743	.

O	3744	3750	Option
O	3751	3754	two
O	3754	3755	.

O	3756	3758	If
O	3759	3762	you
O	3763	3766	see
O	3767	3768	a
O	3769	3770	"
O	3770	3776	setFoo
O	3777	3778	(
O	3778	3784	String
O	3785	3788	foo
O	3789	3791	)"
O	3792	3802	definition
O	3803	3804	(
O	3804	3808	e.g.
O	3809	3811	in
O	3812	3819	javadoc
O	3820	3822	or
O	3823	3828	hover
O	3828	3829	)
O	3830	3833	you
O	3834	3839	would
O	3840	3842	be
O	3843	3853	reasonable
O	3854	3856	to
O	3857	3863	expect
O	3864	3868	that
O	3869	3872	the
O	3873	3878	field
O	3878	3879	"
O	3880	3883	foo
O	3884	3885	"
O	3885	3887	is
O	3888	3891	set
O	3892	3894	to
O	3895	3898	the
O	3899	3904	value
O	3905	3907	of
O	3908	3911	the
O	3912	3921	parameter
O	3921	3922	"
O	3923	3926	foo
O	3927	3928	"
O	3928	3929	.

O	3930	3935	Other
O	3936	3941	names
O	3942	3945	may
O	3946	3953	require
O	3954	3957	you
O	3958	3960	to
O	3961	3967	double
O	3968	3973	check
O	3974	3975	-
O	3976	3980	e.g.
O	3981	3986	would
B-API	3987	3994	setName
O	3995	3996	(
O	3996	4002	String
O	4003	4009	person
O	4009	4010	)
O	4011	4015	just
O	4016	4019	set
O	4020	4023	the
O	4024	4028	name
O	4029	4031	to
O	4032	4038	person
O	4039	4041	or
O	4042	4047	would
O	4048	4058	additional
O	4059	4065	action
O	4066	4068	be
O	4069	4074	taken
O	4075	4076	(
O	4076	4080	look
O	4081	4083	up
O	4084	4087	the
O	4088	4092	name
O	4093	4095	in
O	4096	4097	a
O	4098	4103	table
O	4104	4106	of
O	4107	4114	persons
O	4115	4118	etc
O	4118	4119	)
O	4120	4122	?.

O	4123	4126	The
O	4127	4132	usual
O	4133	4139	reason
O	4140	4143	for
O	4144	4147	not
O	4148	4153	doing
O	4154	4156	so
O	4157	4159	is
O	4160	4164	that
O	4165	4168	you
O	4169	4172	may
O	4173	4186	accidentially
O	4187	4192	write

O	4193	4196	...

O	4197	4200	foo
O	4201	4202	=
O	4203	4206	foo
O	4207	4208	;

O	4209	4216	instead
O	4217	4219	of

O	4220	4228	this.foo
O	4229	4230	=
O	4231	4234	foo
O	4235	4236	;

O	4237	4242	which
O	4243	4245	is
O	4246	4247	a
O	4248	4263	self-assignment
O	4264	4266	of
O	4267	4270	the
O	4271	4280	parameter
O	4281	4284	not
O	4285	4290	doing
O	4291	4299	anything
O	4299	4300	.

O	4301	4307	Modern
O	4308	4317	compilers
O	4318	4323	catch
O	4324	4328	this
O	4329	4330	-
O	4331	4337	modern
O	4338	4341	IDE
O	4342	4351	generates
O	4352	4355	the
O	4356	4357	"
O	4357	4365	this.foo
O	4366	4367	=
O	4368	4371	foo
O	4371	4372	"
O	4373	4382	statement
O	4383	4387	when
O	4388	4396	creating
O	4397	4398	a
O	4399	4405	setter
O	4406	4409	for
O	4410	4411	a
O	4412	4417	field
O	4417	4418	.

O	4419	4421	In
B-Fram	4422	4429	Eclipse
O	4430	4433	you
O	4434	4437	can
O	4438	4444	create
O	4445	4448	the
O	4449	4455	getter
O	4456	4459	and
O	4460	4466	setter
O	4467	4470	for
O	4471	4472	a
O	4473	4478	field
O	4478	4479	,
O	4480	4484	with
O	4485	4491	Ctrl-1
O	4492	4496	when
O	4497	4500	the
O	4501	4507	cursor
O	4508	4510	is
O	4511	4518	located
O	4519	4521	on
O	4522	4525	the
O	4526	4531	field
O	4532	4534	in
O	4535	4543	question
O	4543	4544	.

O	4545	4548	the
O	4549	4559	convention
O	4560	4564	that
O	4565	4566	I
O	4567	4570	use
O	4571	4573	is
O	4574	4576	to
O	4577	4584	preface
O	4585	4591	member
O	4592	4601	variables
O	4602	4606	with
O	4607	4609	m_
O	4610	4611	;
O	4612	4614	as
O	4615	4617	in
O	4618	4619	:

O	4620	4626	String
O	4627	4632	m_foo
O	4633	4634	;

O	4635	4639	that
O	4640	4643	way
O	4643	4644	,
O	4645	4647	it
O	4648	4650	is
O	4651	4655	very
O	4656	4661	clear
O	4662	4667	which
O	4668	4677	variables
O	4678	4681	are
O	4682	4689	members
O	4690	4693	and
O	4694	4699	which
O	4700	4703	are
O	4704	4707	not
O	4707	4708	.

O	4709	4713	also
O	4713	4714	,
O	4715	4717	my
O	4718	4722	last
O	4723	4730	company
O	4731	4739	prefaced
O	4740	4743	all
O	4744	4747	the
O	4748	4757	arguments
O	4758	4760	in
O	4761	4762	a
O	4763	4769	method
O	4770	4774	with
O	4775	4776	"
O	4776	4779	the
O	4779	4780	"
O	4780	4781	,
O	4782	4784	as
O	4785	4787	in
O	4788	4789	:

O	4790	4796	public
O	4797	4802	doFoo
O	4803	4804	(
O	4804	4810	String
O	4811	4817	theKey
O	4817	4818	,
O	4819	4825	String
O	4826	4835	theRandom
O	4835	4836	)
O	4837	4838	{

O	4839	4843	....

O	4844	4845	}

O	4846	4848	it
O	4849	4853	made
O	4854	4856	it
O	4857	4861	very
O	4862	4866	easy
O	4867	4869	to
O	4870	4873	not
O	4874	4881	confuse
O	4882	4885	the
O	4886	4895	arguments
O	4896	4900	with
O	4901	4909	internal
O	4910	4919	variables
O	4919	4920	.

O	4921	4932	conventions
O	4933	4939	should
O	4940	4942	be
O	4943	4948	about
O	4949	4955	making
O	4956	4959	the
O	4960	4964	code
O	4965	4971	easier
O	4972	4974	to
O	4975	4979	read
O	4979	4980	,
O	4981	4984	and
O	4985	4993	reducing
O	4994	5000	errors
O	5000	5001	.

O	5002	5008	Option
O	5009	5010	2
O	5011	5013	is
O	5014	5018	most
O	5019	5025	common
O	5026	5028	in
O	5029	5033	Java
O	5034	5037	but
O	5038	5039	a
O	5040	5045	picky
O	5046	5056	Checkstyle
O	5057	5062	won't
O	5063	5066	let
O	5067	5070	you
O	5071	5074	use
O	5075	5079	this
O	5080	5086	option
O	5087	5094	because
O	5095	5098	the
O	5099	5103	name
O	5104	5106	of
O	5107	5110	the
O	5111	5116	local
O	5117	5120	var
O	5121	5128	shadows
O	5129	5132	the
O	5133	5138	other
O	5138	5139	.

O	5140	5147	Because
O	5148	5150	of
O	5151	5155	that
O	5156	5160	most
O	5161	5164	use
O	5165	5168	the
O	5169	5178	following
O	5179	5180	:

O	5181	5184	foo
O	5185	5186	(
O	5186	5189	int
O	5190	5197	thatBar
O	5197	5198	)
O	5199	5200	{

O	5201	5209	this.bar
O	5210	5211	=
O	5212	5219	thatBar
O	5220	5221	;

O	5222	5223	}

O	5224	5227	The
O	5228	5232	only
O	5233	5240	problem
O	5241	5246	using
O	5247	5251	this
O	5252	5258	option
O	5259	5261	is
O	5262	5266	that
O	5267	5273	others
O	5274	5277	may
O	5278	5283	guess
O	5284	5288	that
O	5289	5292	you
O	5293	5296	are
O	5297	5302	using
O	5303	5304	a
O	5305	5308	var
O	5309	5314	named
O	5315	5318	bar
O	5319	5321	in
O	5322	5326	your
O	5327	5332	class
O	5333	5340	because
O	5341	5343	if
O	5344	5347	not
O	5348	5351	you
O	5352	5360	wouldn't
O	5361	5365	name
O	5366	5369	the
O	5370	5379	parameter
O	5380	5382	so
O	5382	5383	.

O	5384	5386	An
O	5387	5391	evil
O	5392	5398	person
O	5399	5404	could
O	5405	5408	use
O	5409	5413	that
O	5414	5425	information
O	5426	5428	to
O	5429	5435	better
O	5436	5446	understand
O	5447	5451	your
O	5452	5457	class
O	5458	5462	only
O	5463	5465	by
O	5466	5473	looking
O	5474	5476	at
O	5477	5480	the
O	5481	5488	methods
O	5488	5489	.

O	5490	5493	But
O	5494	5497	for
O	5498	5502	that
O	5503	5506	you
O	5507	5512	would
O	5513	5516	use
O	5517	5519	an
O	5520	5530	obfuscator
O	5531	5536	which
O	5537	5544	renames
O	5545	5548	all
O	5549	5553	vars
O	5554	5557	etc
O	5557	5558	.

O	5559	5562	Yes
O	5563	5569	option
O	5570	5571	2
O	5572	5574	is
O	5575	5579	most
O	5580	5586	widely
O	5587	5591	used
O	5592	5593	;
O	5594	5602	although
O	5603	5605	it
O	5606	5609	has
O	5610	5611	a
O	5612	5618	severe
O	5619	5626	problem
O	5627	5628	:
O	5629	5631	if
O	5632	5635	you
O	5636	5640	have
O	5641	5642	a
O	5643	5647	typo
O	5648	5650	in
O	5651	5654	the
O	5655	5666	declaration
O	5667	5669	of
O	5670	5674	your
O	5675	5684	parameter
O	5685	5686	-
O	5687	5691	that
O	5692	5697	might
O	5698	5700	go
O	5701	5710	unnoticed
O	5710	5711	,
O	5712	5716	like
O	5717	5718	:

O	5719	5723	This
O	5724	5728	code
O	5729	5737	compiles
O	5738	5742	fine
O	5743	5744	;
O	5745	5748	and
O	5749	5751	it
O	5752	5757	takes
O	5758	5761	you
O	5762	5763	a
O	5764	5770	second
O	5771	5773	to
O	5774	5784	understand
O	5785	5789	what
O	5790	5792	is
O	5793	5798	wrong
O	5799	5801	in
O	5802	5807	there
O	5807	5808	.

O	5809	5812	Yes
O	5812	5813	,
O	5814	5822	nowadays
O	5823	5826	you
O	5827	5832	might
O	5833	5836	see
O	5837	5838	a
O	5839	5846	warning
O	5847	5852	about
O	5853	5857	that
O	5857	5858	,
O	5859	5861	or
O	5862	5866	some
O	5867	5871	code
O	5872	5880	checking
O	5881	5885	tool
O	5886	5891	tells
O	5892	5895	you
O	5896	5900	that
O	5901	5905	this
O	5906	5914	happened
O	5915	5916	;
O	5917	5920	and
O	5921	5923	of
O	5924	5930	course
O	5930	5931	,
O	5932	5936	your
O	5937	5941	unit
O	5942	5947	tests
O	5948	5954	should
O	5955	5959	find
O	5960	5962	it
O	5963	5974	immediately
O	5974	5975	.

O	5976	5979	But
O	5980	5981	:
O	5982	5984	if
O	5985	5988	you
O	5989	5994	avoid
O	5995	5999	this
O	6000	6007	pattern
O	6007	6008	,
O	6009	6012	and
O	6013	6016	use
O	6017	6025	prefixes
O	6026	6028	or
O	6029	6030	"
O	6030	6040	thatString
O	6040	6041	"
O	6042	6045	you
O	6046	6050	will
O	6051	6056	never
O	6057	6060	hit
O	6061	6065	this
O	6066	6073	problem
O	6074	6076	in
O	6077	6080	the
O	6081	6086	first
O	6087	6092	place
O	6092	6093	.

O	6094	6098	Thus
O	6099	6100	I
O	6101	6107	really
O	6108	6113	don't
O	6114	6124	understand
O	6125	6128	why
O	6129	6131	it
O	6132	6134	is
O	6135	6137	so
O	6138	6146	commonly
O	6147	6151	used
O	6151	6152	.

O	6153	6155	So
O	6155	6156	,
O	6157	6159	we
O	6160	6163	sat
O	6164	6168	down
O	6169	6171	in
O	6172	6175	our
O	6176	6180	team
O	6181	6184	and
O	6185	6189	when
O	6190	6197	putting
O	6198	6206	together
O	6207	6210	our
O	6211	6217	coding
O	6218	6223	style
O	6224	6229	guide
O	6230	6232	we
O	6233	6237	said
O	6238	6239	:
O	6240	6245	never
O	6246	6249	use
O	6250	6256	option
O	6257	6258	2
O	6258	6259	.

O	0	3	How
O	4	6	to
O	7	10	set
O	11	14	the
B-Fram	15	23	Object3D
O	24	32	position
O	33	36	and
O	37	45	rotation
O	46	50	same
O	51	53	as
O	54	57	the
O	58	63	added
O	64	68	mesh
O	68	69	?

O	70	71	[
O	72	80	three.js
O	81	82	]

O	83	87	When
O	88	89	I
O	90	96	create
O	97	99	an
B-Fram	100	108	Object3D
O	109	114	model
O	115	118	and
O	119	122	add
O	123	126	the
O	127	133	meshes
O	134	136	to
O	137	139	it
O	139	140	,
O	141	144	how
O	145	147	do
O	148	149	I
O	150	153	set
O	154	157	the
O	158	166	position
O	167	170	and
O	171	179	rotation
O	180	182	of
O	183	186	the
O	187	192	added
O	193	197	mesh
O	198	200	to
O	201	205	same
O	206	208	as
O	209	212	the
B-Fram	213	221	Object3D
O	222	227	model
O	227	228	,
O	229	233	like
O	234	238	when
O	239	240	I
O	241	247	rotate
O	248	251	and
O	252	260	position
O	261	264	the
B-Fram	265	273	Object3D
O	274	279	there
O	280	286	should
O	287	289	be
O	290	292	no
O	293	303	difference
O	304	306	in
O	307	312	angle
O	313	315	of
O	316	324	rotation
O	325	332	between
O	333	336	the
B-Fram	337	345	Object3D
O	346	349	and
O	350	353	the
O	354	359	added
O	360	364	mesh
O	364	365	.

O	366	369	How
O	370	372	do
O	373	374	I
O	375	382	achieve
O	383	387	such
O	388	394	result
O	394	395	?

O	396	398	If
O	399	403	your
B-Fram	404	412	Object3D
O	413	418	model
O	419	421	is
O	422	428	called
O	429	432	obj
O	432	433	,
O	434	438	then
O	439	444	after
O	445	452	obj.add
O	453	454	(
O	454	458	mesh
O	458	459	)
O	460	463	any
O	464	471	changes
O	472	474	to
O	475	478	obj
O	479	480	(
O	480	488	position
O	489	490	/
O	491	499	rotation
O	500	501	/
O	502	507	scale
O	507	508	)
O	509	513	will
O	514	520	change
O	521	525	mesh
O	526	528	in
O	529	532	the
O	533	537	same
O	538	541	way
O	541	542	.

O	543	545	If
O	546	553	instead
O	554	557	you
O	558	563	don't
O	564	568	want
O	569	573	mesh
O	574	576	to
O	577	579	be
O	580	588	attached
O	589	591	to
O	592	595	obj
O	595	596	,
O	597	600	but
O	601	604	you
O	605	610	still
O	611	615	want
O	616	620	them
O	621	623	to
O	624	628	have
O	629	632	the
O	633	637	same
O	638	646	position
O	647	650	and
O	651	659	rotation
O	659	660	,
O	661	664	you
O	665	670	could
O	671	674	try
O	675	694	@codeSnippetRemoved

O	695	699	Hope
O	700	704	this
O	705	710	helps
O	710	711	!

B-Fram	0	10	Highcharts
O	11	15	with
O	16	22	Custom
O	23	33	Background
O	34	36	in
O	37	42	Cross
O	43	51	Platform
O	52	55	app
O	56	67	development

O	68	69	I
O	70	74	have
O	75	76	a
O	77	84	strange
O	85	92	Problem
O	93	97	with
B-Fram	98	108	Highcharts
O	109	116	display
O	117	119	:(

O	120	121	I
O	122	124	am
O	125	130	using
B-Fram	131	141	Highcharts
O	142	144	in
O	145	150	Cross
O	151	159	Platform
O	160	163	app
O	164	175	development
O	175	176	.

O	177	178	I
O	179	181	am
O	182	187	using
O	188	189	a
O	190	196	custom
O	197	207	background
O	208	211	for
B-Fram	212	221	highchart
O	221	222	.

O	223	225	It
O	226	228	is
O	229	236	working
O	237	241	very
O	242	246	well
O	247	249	in
B-Plat	250	253	iOS
O	254	257	but
O	258	261	not
O	262	271	appearing
O	272	274	in
B-Plat	275	282	Android
O	282	283	.

O	284	290	Though
O	291	296	chart
O	297	299	is
O	300	305	there
O	306	309	but
O	310	313	not
O	314	321	visible
O	321	322	.

O	323	327	When
O	328	329	I
O	330	336	remove
O	337	340	the
O	341	351	background
O	352	354	it
O	355	357	is
O	358	365	working
O	366	370	well
O	370	371	.

O	372	381	Following
O	382	384	is
O	385	387	my
O	388	392	Code
O	393	394	:

O	395	398	Any
O	399	403	Idea
O	404	409	about
O	410	414	this
O	414	415	?

O	0	6	Access
O	7	13	inline
B-Stan	14	18	JSON
O	19	21	in
B-Fram	22	29	Polymer

O	30	31	I
O	32	34	am
O	35	41	making
O	42	43	a
B-Fram	44	49	d3.js
O	50	53	map
O	54	63	component
O	64	68	with
B-Fram	69	76	Polymer
O	76	77	.

O	78	81	The
O	82	90	topology
O	91	95	data
O	96	101	needs
O	102	104	to
O	105	107	be
O	108	114	loaded
O	115	119	from
O	120	121	a
B-Stan	122	126	json
O	127	131	file
O	132	135	and
O	136	141	since
O	142	143	I
O	144	149	don't
O	150	154	want
O	155	158	the
O	159	168	component
O	169	171	to
O	172	174	be
O	175	184	dependent
O	185	187	on
O	188	189	a
O	190	193	URL
O	194	195	/
O	196	199	URI
O	199	200	,
O	201	202	I
O	203	205	am
O	206	211	using
O	212	218	inline
B-Stan	219	223	JSON
O	224	231	instead
O	232	234	of
O	235	242	loading
O	243	245	it
O	246	251	using
B-Stan	252	256	AJAX
O	257	258	:
O	259	278	@codeSnippetRemoved

O	279	282	But
O	283	292	obviously
O	293	300	topdata
O	301	308	element
O	309	316	doesn't
O	317	321	have
O	322	325	the
O	326	332	method
B-API	333	339	html()
O	339	340	.

O	341	343	Is
O	344	346	it
O	347	350	the
O	351	356	right
O	357	362	thing
O	363	365	to
O	366	368	do
O	368	369	?
O	370	373	and
O	374	377	how
B-Fram	378	387	vulcanize
O	388	392	deal
O	393	397	with
O	398	402	this
O	402	403	?

O	404	410	You're
O	411	414	not
O	415	424	depending
O	425	427	on
O	428	430	an
O	431	439	external
O	440	448	resource
O	449	452	but
O	453	455	it
O	456	457	'
O	458	459	s
O	460	465	still
O	466	468	in
O	469	470	a
O	471	479	separate
O	480	484	file
O	484	485	.

O	486	489	I'd
O	490	493	use
O	494	503	core-ajax
O	504	506	to
O	507	511	load
O	512	514	it
O	515	516	:
O	517	536	@codeSnippetRemoved

O	537	610	http://www.polymer-project.org/docs/elements/core-elements.html#core-ajax

O	611	616	There
O	617	619	is
O	620	622	no
O	623	627	need
O	628	630	to
O	631	637	inline
B-Stan	638	642	JSON
O	643	647	file
O	647	648	.

B-Fram	649	656	Polymer
O	657	658	'
O	659	660	s
B-API	661	672	resolvePath
O	673	681	function
O	682	684	is
O	685	691	useful
O	692	696	here
O	697	699	to
O	700	704	make
O	705	709	sure
O	710	713	the
O	714	722	relative
O	723	727	path
O	728	730	to
B-Stan	731	735	JSON
O	736	740	file
O	741	743	is
O	744	750	always
O	751	758	correct
O	759	769	regardless
O	770	772	of
O	773	778	where
O	779	782	the
O	783	792	component
O	793	795	is
O	796	804	included
O	805	806	:
O	807	826	@codeSnippetRemoved

O	827	831	Info
O	832	837	about
B-API	838	849	resolvePath
O	850	854	here
O	854	855	.

O	0	3	how
O	4	6	to
O	7	13	render
O	14	19	child
O	20	30	components
O	31	33	in
B-Fram	34	42	react.js
O	43	54	recursively

O	55	56	I
O	57	63	wanted
O	64	66	to
O	67	78	recursively
O	79	82	add
O	83	84	a
O	85	90	react
O	91	100	component
O	101	105	from
O	106	112	within
O	113	116	its
O	117	120	own
O	121	130	component
O	130	131	.

O	132	133	I
O	134	137	saw
O	138	142	this
O	143	150	example
O	151	153	of
O	154	155	a
O	156	160	tree
O	161	170	component
O	171	176	which
O	177	180	was
O	181	188	mapping
O	189	196	through
O	197	200	the
O	201	206	child
B-API	207	216	TreeNodes
O	217	220	and
O	221	227	adding
O	228	233	child
O	234	239	nodes
O	240	242	in
O	243	246	the
O	247	251	same
O	252	255	way
O	255	256	.

O	257	270	Unfortunately
O	271	273	it
O	274	281	doesn't
O	282	286	work
O	287	289	at
O	290	293	all
O	294	297	for
O	298	300	me
O	300	301	.

O	302	305	The
O	306	310	idea
O	311	314	was
O	315	317	to
O	318	322	have
O	323	324	a
O	325	331	simple
O	332	339	comment
O	340	349	component
O	349	350	,
O	351	354	and
O	355	358	the
O	359	366	replies
O	367	372	would
O	373	378	reuse
O	379	382	the
O	383	387	same
O	388	397	component
O	397	398	.

O	399	400	I
O	401	404	get
O	405	408	the
O	409	418	following
O	419	424	error
O	425	432	message
O	433	434	:

O	435	443	Uncaught
B-API	444	453	TypeError
O	454	455	:
O	456	462	Failed
O	463	465	to
O	466	475	construct
O	476	477	'
O	478	485	Comment
O	486	487	'
O	488	489	:
O	490	496	Please
O	497	500	use
O	501	504	the
O	505	506	'
O	507	510	new
O	511	512	'
O	513	521	operator
O	521	522	,
O	523	527	this
B-Stan	528	531	DOM
O	532	538	object
O	539	550	constructor
O	551	557	cannot
O	558	560	be
O	561	567	called
O	568	570	as
O	571	572	a
O	573	581	function
O	581	582	.

O	583	587	here
O	588	590	is
O	591	593	an
O	594	601	example
O	602	604	of
O	605	608	the
B-Stan	609	613	JSON
O	614	618	data
O	619	625	passed
O	626	628	to
O	629	632	the
O	633	642	component
O	642	643	.

O	644	647	hmm
O	647	648	,
O	649	650	I
O	651	657	didn't
O	658	664	expect
O	665	667	to
O	668	672	sort
O	673	677	this
O	678	683	issue
O	684	687	out
O	688	690	so
O	691	698	quickly
O	698	699	.

O	700	703	But
O	704	705	I
O	706	711	found
O	712	715	out
O	716	718	if
O	719	722	you
O	723	729	create
O	730	733	the
O	734	739	child
O	740	745	nodes
O	746	748	as
O	749	751	an
O	752	758	object
O	759	761	at
O	762	765	the
O	766	769	top
O	770	772	of
O	773	776	the
O	777	783	render
O	784	790	method
O	790	791	,
O	792	794	it
O	795	800	works
O	801	805	fine
O	805	806	.

O	807	812	Maybe
O	813	820	someone
O	821	825	more
O	826	839	knowledgeable
O	840	842	on
B-Fram	843	851	react.js
O	852	855	can
O	856	860	give
O	861	865	some
O	866	870	more
O	871	879	feedback
O	880	882	on
O	883	887	this
O	887	888	,
O	889	892	but
O	893	898	happy
O	899	901	to
O	902	905	see
O	906	910	that
O	911	913	it
O	914	916	is
O	917	925	possible
O	925	926	.

O	0	3	why
O	4	11	doesn't
B-API	12	22	JavaScript
I-API	23	34	toLowerCase
O	35	39	work
O	39	40	?

O	41	43	In
O	44	48	this
O	49	55	fiddle
O	56	84	http://jsfiddle.net/CBxbT/29
O	84	85	,
O	86	88	if
O	89	92	you
O	93	98	click
O	99	102	the
O	103	108	black
O	109	112	box
O	112	113	,
O	114	115	a
O	116	122	random
O	123	128	color
O	129	131	is
O	132	140	selected
O	140	141	,
O	142	145	and
O	146	150	then
O	151	156	after
O	157	160	its
O	161	163	id
O	164	166	is
O	167	175	stripped
O	176	180	down
O	181	184	and
O	185	192	changed
O	193	195	to
O	196	205	lowercase
O	205	206	,
O	207	210	the
O	211	217	random
O	218	223	color
O	224	225	'
O	226	227	s
O	228	230	id
O	231	233	is
O	234	242	compared
O	243	245	to
O	246	254	whatever
O	255	260	color
O	261	264	you
O	265	266	"
O	266	271	guess
O	271	272	"
O	273	275	by
O	276	284	clicking
O	285	287	on
O	288	291	one
O	292	294	of
O	295	298	the
O	299	304	three
O	305	310	boxes
O	310	311	.

O	312	315	The
O	316	322	fiddle
O	323	328	works
O	328	329	,
O	330	333	but
O	334	337	the
O	338	342	same
O	343	350	concept
O	351	352	(
O	352	355	i.e
O	356	360	same
O	361	365	code
O	366	369	but
O	370	379	different
O	380	387	element
O	388	393	names
O	393	394	)
O	395	397	is
O	398	401	not
O	402	409	working
O	410	412	on
O	413	415	my
O	416	420	live
O	421	425	site
O	425	426	.

O	427	430	One
O	431	433	my
O	434	438	live
O	439	443	site
O	443	444	,
O	445	446	I
O	447	450	get
O	451	453	an
O	454	459	alert
O	460	463	for
O	464	467	the
O	468	476	variable
O	477	482	guess
O	482	483	,
O	484	487	but
O	488	492	then
O	493	494	I
O	495	500	don't
O	501	504	get
O	505	512	anymore
O	513	519	alerts
O	519	520	,
O	521	528	whereas
O	529	531	in
O	532	535	the
O	536	542	fiddle
O	542	543	,
O	544	546	it
O	547	552	keeps
O	553	558	going
O	559	562	and
O	563	568	gives
O	569	571	me
O	572	574	an
O	575	580	alert
O	581	586	after
O	587	590	ran
O	591	593	is
O	594	601	changed
O	602	604	to
O	605	610	lower
O	611	615	case
O	615	616	.

O	617	619	Is
O	620	625	there
O	626	627	a
O	628	635	problem
O	636	640	with
O	641	644	the
O	645	648	way
O	649	650	I
O	651	654	did
O	655	659	that
O	660	665	might
O	666	668	be
O	669	676	causing
O	677	680	the
O	681	688	problem
O	689	691	on
O	692	694	my
O	695	699	live
O	700	704	site
O	704	705	.

O	706	725	@codeSnippetRemoved

O	726	730	code
O	731	735	from
O	736	742	fiddle
O	743	762	@codeSnippetRemoved

O	763	765	My
O	766	770	live
O	771	775	site
O	776	778	my
O	779	785	actual
O	786	790	site

O	791	796	Click
O	797	800	the
O	801	806	start
O	807	813	button
O	813	814	.

O	815	817	It
O	818	822	will
O	823	827	show
O	828	830	an
O	831	836	audio
O	837	843	player
O	844	848	that
O	849	851	is
O	852	860	randomly
O	861	869	selected
O	869	870	.

O	871	876	Click
O	877	880	one
O	881	883	of
O	884	887	the
O	888	899	spelled-out
O	900	907	numbers
O	908	912	from
O	913	916	the
O	917	923	bottom
O	924	927	row
O	928	930	of
O	931	938	numbers
O	938	939	.

O	940	944	That
O	945	947	is
O	948	952	your
O	953	954	"
O	954	959	guess
O	959	960	"

O	961	963	It
O	964	970	should
O	970	971	,
O	972	981	according
O	982	984	to
O	985	988	the
O	989	993	code
O	993	994	,
O	995	999	give
O	1000	1003	you
O	1004	1006	an
O	1007	1012	alert
O	1013	1015	of
O	1016	1019	the
O	1020	1028	randomly
O	1029	1037	selected
O	1038	1043	audio
O	1044	1050	player
O	1051	1057	number
O	1057	1058	,
O	1059	1062	but
O	1063	1065	it
O	1066	1073	doesn't
O	1073	1074	.

O	1075	1083	relevant
O	1084	1088	code
O	1089	1093	from
O	1094	1098	live
O	1099	1103	site
O	1104	1123	@codeSnippetRemoved

O	1124	1126	If
O	1127	1130	you
O	1131	1135	look
O	1136	1138	at
O	1139	1142	the
O	1143	1153	JavaScript
O	1154	1159	error
O	1160	1167	console
O	1167	1168	,
O	1169	1175	you'll
O	1176	1179	see
O	1180	1184	this
O	1185	1186	:
O	1187	1206	@codeSnippetRemoved

O	1207	1208	I
O	1209	1216	suggest
O	1217	1220	you
O	1221	1226	start
O	1227	1232	using
B-Fram	1233	1240	Firebug
O	1241	1243	or
O	1244	1253	something
O	1254	1261	similar
O	1262	1264	so
O	1265	1269	that
O	1270	1276	you'll
O	1277	1280	see
O	1281	1284	the
O	1285	1290	error
O	1291	1298	console
O	1299	1304	while
O	1305	1311	you're
O	1312	1322	developing
O	1322	1323	.

O	1324	1326	On
O	1327	1331	your
O	1332	1336	live
O	1337	1341	site
O	1342	1345	the
O	1346	1351	event
O	1352	1355	for
O	1356	1364	clicking
O	1365	1367	on
O	1368	1371	the
O	1372	1373	"
O	1373	1378	start
O	1378	1379	"
O	1380	1386	button
O	1387	1390	has
O	1391	1395	this
O	1396	1400	line
O	1401	1402	:
O	1403	1422	@codeSnippetRemoved

O	1423	1426	The
O	1427	1430	var
O	1431	1438	keyword
O	1439	1446	creates
O	1447	1448	a
O	1449	1454	local
O	1455	1463	variable
O	1464	1470	called
O	1471	1474	ran
O	1474	1475	,
O	1476	1478	so
O	1479	1485	you're
O	1486	1494	creating
O	1495	1496	a
O	1497	1500	new
O	1501	1509	variable
O	1510	1513	and
O	1514	1517	not
O	1518	1530	initializing
O	1531	1534	the
O	1535	1541	global
O	1542	1545	one
O	1545	1546	.

O	1547	1553	Remove
O	1554	1557	var
O	1558	1562	from
O	1563	1567	that
O	1568	1572	line
O	1573	1576	and
O	1577	1579	it
O	1580	1586	should
O	1587	1591	work
O	1591	1592	.

O	0	3	How
O	4	6	to
O	7	11	pass
B-Stan	12	16	ajax
O	17	23	object
O	24	28	data
O	29	31	to
O	32	38	python
O	39	43	file

O	44	45	I
O	46	50	have
O	51	58	written
O	59	61	an
B-Stan	62	66	ajax
O	67	71	code
O	72	74	to
O	75	79	pass
O	80	85	value
O	86	88	to
O	89	95	python
O	96	100	file
O	100	101	.

O	102	103	I
O	104	108	used
O	109	126	request.GET['user
O	127	128	'
O	129	130	]
O	131	134	but
O	135	137	it
O	138	143	gives
O	144	151	compile
O	152	157	error
O	157	158	.

O	159	163	Help
O	164	166	me
O	167	169	to
O	170	174	give
O	175	178	any
O	179	185	method
O	186	188	in
O	189	195	python
O	196	198	to
O	199	204	catch
O	205	208	the
O	209	220	value.Below
O	221	223	is
O	224	230	python
O	231	235	code
O	236	237	:
O	238	257	@codeSnippetRemoved

B-Stan	258	262	Ajax
O	263	267	code
O	268	269	:
O	270	289	@codeSnippetRemoved

O	290	297	Compile
O	298	303	Error
O	304	305	:
O	306	325	@codeSnippetRemoved

O	326	328	It
O	329	334	looks
O	335	339	like
O	340	343	the
O	344	352	function
O	353	357	does
O	358	361	not
O	362	366	take
O	367	374	request
O	375	377	as
O	378	379	a
O	380	389	parameter
O	389	390	,
O	391	394	but
O	395	397	it
O	398	400	is
O	401	411	impossible
O	412	414	to
O	415	423	pinpoint
O	424	427	the
O	428	435	problem
O	436	441	since
O	442	446	your
O	447	451	code
O	452	460	snippets
O	461	464	are
O	465	468	not
O	469	477	complete
O	477	478	.

O	0	10	javascript
O	11	13	or
B-Stan	14	18	ajax
O	19	27	function
O	28	32	when
O	33	40	someone
O	41	47	clicks
O	48	50	on
O	51	58	browser
O	59	64	close
O	65	71	button

O	72	73	I
O	74	78	want
O	79	81	to
O	82	86	call
O	87	88	a
O	89	97	function
O	98	102	when
O	103	110	someone
O	111	116	click
O	117	119	on
O	120	125	close
O	126	132	button
O	133	135	of
O	136	143	browser
O	143	144	.

O	145	146	I
O	147	151	gone
O	152	159	through
O	160	164	many
O	165	170	posts
O	171	174	and
O	175	184	questions
O	185	187	on
O	188	200	stackoverlow
O	201	204	and
O	205	211	google
O	212	218	groups
O	218	219	.

O	220	223	But
O	224	232	couldn't
O	233	237	find
O	238	239	a
O	240	243	way
O	244	246	to
O	247	257	accomplish
O	258	262	this
O	263	267	task
O	267	268	.

O	269	270	I
O	271	275	want
O	276	278	to
O	279	283	send
O	284	286	an
B-Stan	287	291	ajax
O	292	299	request
O	300	304	when
O	305	312	someone
O	313	318	click
O	319	321	on
O	322	329	browser
O	330	335	close
O	336	342	button
O	342	343	.
O	344	347	now
O	348	349	I
O	350	352	am
O	353	358	using
B-API	359	380	window.onbeforeunload
O	381	385	java
O	386	392	script
O	393	399	method
O	400	403	but
O	404	406	it
O	407	409	is
O	410	416	called
O	417	421	each
O	422	426	time
O	427	431	when
O	432	433	I
O	434	439	click
O	440	442	on
O	443	444	a
O	445	449	link
O	450	452	or
O	453	459	change
O	460	463	web
O	464	468	page
O	468	469	.

O	470	489	@codeSnippetRemoved

O	490	493	but
O	494	495	i
O	496	500	want
O	501	503	to
O	504	508	call
O	509	512	the
O	513	519	method
O	520	524	only
O	525	527	on
O	528	535	browser
O	536	541	close
O	542	548	button
O	549	557	click.Is
O	558	563	there
O	564	570	anyway
O	571	573	by
O	574	579	which
O	580	581	i
O	582	585	can
O	586	591	catch
O	592	599	browser
O	600	605	close
O	606	612	button
O	613	620	clicked
O	621	626	event
O	626	627	?

O	628	632	Help
O	633	637	will
O	638	640	be
O	641	652	appreciable

B-API	653	667	window.onclick
O	668	669	=
O	670	680	function()
O	681	682	{
O	683	686	var
O	687	690	win
O	691	692	=
B-API	693	704	window.open
O	705	706	(
O	706	707	"
O	707	708	/
O	709	711	")
O	712	713	;
O	714	724	win.onload
O	725	726	=
O	727	737	function()
O	738	739	{
B-API	740	751	console.log
O	752	753	(
O	753	754	"
O	755	761	onload
O	762	764	")
O	765	766	;
O	767	779	win.onunload
O	780	781	=
O	782	792	function()
O	793	794	{
O	795	800	alert
O	801	802	(
O	802	803	"
O	803	808	Close
O	809	817	onunload
O	818	820	")
O	821	822	;
O	823	825	}}

O	826	827	}

O	828	832	Demo

O	833	834	$
O	835	836	(
O	836	842	window
O	842	843	)
B-API	844	851	.unload
O	852	853	(
O	853	863	function()
O	864	865	{
O	866	871	alert
O	872	873	(
O	873	874	"
O	874	881	Handler
O	882	885	for
B-API	886	895	.unload()
O	896	902	called
O	902	903	.
O	903	904	"
O	905	907	);
O	908	909	}
O	910	912	);

O	913	916	you
O	917	920	can
O	921	924	use
O	925	929	this
O	930	934	code

O	0	3	How
O	4	6	to
O	7	11	tell
O	12	14	if
O	15	17	an
O	18	25	element
O	26	28	is
O	29	35	before
O	36	43	another
O	44	51	element
O	52	54	in
B-Stan	55	58	DOM

O	59	62	How
O	63	66	can
O	67	70	you
O	71	76	check
O	77	79	if
O	80	82	an
O	83	90	element
O	91	93	is
O	94	100	before
O	101	108	another
O	109	116	element
O	117	119	in
B-Stan	120	123	DOM
O	123	124	?

O	125	128	For
O	129	136	example
O	137	156	@codeSnippetRemoved

O	157	163	second
O	164	171	element
O	172	174	is
O	175	180	after
O	181	186	first
O	187	190	and
O	191	197	before
O	198	203	third
O	203	204	.

O	205	208	How
O	209	212	can
O	213	216	you
O	217	222	check
O	223	227	this
O	228	232	with
B-Fram	233	239	jQuery
O	239	240	?

O	241	246	There
O	247	252	isn't
O	253	254	a
B-Fram	255	261	jQuery
O	262	270	funciton
O	271	274	for
O	275	279	this
O	279	280	,
O	281	288	however
O	289	292	you
O	293	296	can
O	297	303	easily
O	304	313	implement
O	314	316	it
O	317	319	by
O	320	326	adding
O	327	330	the
O	331	340	following
O	341	345	code
O	346	347	:
O	348	367	@codeSnippetRemoved

O	368	378	Afterwards
O	379	382	you
O	383	386	can
O	387	391	call
O	392	411	@codeSnippetRemoved

O	0	8	selected
O	9	14	query
O	15	21	result
O	22	29	placing
O	30	32	in
O	33	37	more
B-API	38	42	DIVs

O	43	45	Im
O	46	52	trying
O	53	55	to
O	56	62	select
O	63	64	3
O	65	77	testimonials
O	78	80	at
O	81	82	a
O	83	90	stretch
O	91	95	from
O	96	99	the
O	100	108	database
O	109	111	..

O	112	114	It
O	115	117	is
O	118	120	ok
O	121	124	for
O	125	127	me
O	127	128	.

O	129	132	But
O	133	135	my
O	136	143	problem
O	144	146	is
O	147	148	I
O	149	153	need
O	154	159	place
O	160	164	this
O	165	166	3
O	167	179	testimonials
O	180	182	in
O	183	184	3
B-API	185	189	DIVs
O	190	192	in
O	193	196	the
O	197	201	same
O	202	206	time
O	207	209	..
O	210	213	can
O	214	221	anybody
O	222	226	tell
O	227	229	me
O	230	233	how
O	234	237	can
O	238	239	I
O	240	242	do
O	243	247	this
O	247	248	?

O	249	268	@codeSnippetRemoved

O	269	274	Thank
O	275	278	you
O	279	281	..

O	282	283	I
O	284	286	am
O	287	290	not
O	291	295	very
O	296	304	familiar
O	305	309	with
O	310	316	mysqli
O	317	322	since
O	323	326	iam
O	327	332	still
O	333	338	using
O	339	344	mysql
O	345	347	..
O	348	351	but
O	352	353	i
O	354	357	can
O	358	363	still
O	364	368	give
O	369	372	you
O	373	375	my
O	376	384	personal
O	385	393	approach
O	394	403	regarding
O	404	408	your
O	409	417	question
O	418	419	:
O	420	439	@codeSnippetRemoved

O	440	444	Hope
O	445	449	this
O	450	455	gives
O	456	459	you
O	460	463	the
O	464	468	idea
O	468	469	.

O	470	486	$maxTestimonials
O	487	488	=
O	489	490	3
O	491	492	;
O	493	499	$query
O	500	501	=
O	502	503	"
B-API	503	509	SELECT
O	510	511	*
O	512	516	FROM
O	517	529	testimonials
B-API	530	535	ORDER
I-API	536	538	BY
I-API	539	545	RAND()
O	546	551	LIMIT
O	552	568	$maxTestimonials
O	568	569	"
O	570	571	;
O	572	580	$results
O	581	582	=
B-API	583	595	mysqli_query
O	596	597	(
O	597	616	$databaseConnection
O	616	617	,
O	618	624	$query
O	625	627	);

O	628	634	$count
O	635	636	=
O	637	638	0
O	639	640	;
O	641	662	$testimonialsTemplate
O	663	664	=
O	665	666	'
O	667	670	div
O	671	677	class=
O	678	679	"
O	679	693	testimonial-%d
O	693	694	"
O	695	696	p
O	697	699	%s
O	700	701	/
O	702	703	p
O	704	705	/
O	706	709	div
O	710	711	'
O	712	713	;
O	714	719	while
O	720	721	(
O	721	725	$row
O	726	727	=
B-API	728	745	mysql_fetch_array
O	746	747	(
O	747	755	$results
O	755	756	,
B-API	757	768	MYSQL_ASSOC
O	769	771	))
O	772	773	{
O	774	782	$count++
O	783	784	;
O	785	789	echo
O	790	797	sprintf
O	798	799	(
O	799	820	$testimonialsTemplate
O	820	821	,
O	822	828	$count
O	828	829	,
O	830	858	$row['column_name_to_display
O	859	860	'
O	861	864	]);
O	865	866	}

O	867	870	I'd
O	871	875	also
O	876	883	suggest
O	884	887	you
O	888	892	look
O	893	897	into
O	898	908	separation
O	909	911	of
O	912	920	concerns
O	921	924	and
O	925	946	Model-View-Controller
O	947	952	which
O	953	957	will
O	958	962	help
O	963	966	you
O	967	969	to
O	970	979	structure
O	980	984	your
O	985	989	code
O	990	992	in
O	993	994	a
O	995	1003	slightly
O	1004	1008	more
O	1009	1021	maintainable
O	1022	1023	(
O	1023	1026	and
O	1027	1035	reusable
O	1035	1036	)
O	1037	1044	fashion
O	1044	1045	.

O	0	3	PHP
O	4	13	questions
O	14	19	about
O	20	26	inputs
O	27	30	and
O	31	41	checkboxes

O	42	43	I
O	44	48	have
O	49	50	2
O	51	60	questions
O	61	62	:

O	63	67	what
O	68	70	is
O	71	74	the
O	75	79	best
O	80	83	way
O	84	86	to
O	87	91	fill
O	92	94	an
O	95	100	input
O	101	103	in
O	104	107	php
O	108	109	(
O	109	112	for
O	113	120	example
O	121	123	in
B-Fram	124	131	asp.net
O	132	133	:
O	134	147	textbox1.Text
O	148	149	=
O	150	151	"
O	151	156	hello
O	156	157	"
O	158	159	;
O	159	160	)
O	160	161	,
O	162	163	I
O	164	169	tried
O	170	175	input
O	176	181	type=
O	182	183	"
O	183	187	text
O	187	188	"
O	189	194	name=
O	195	196	"
O	196	200	name
O	200	201	"
O	202	208	value=
O	209	210	"
O	210	211	?

O	212	215	php
O	216	220	echo
O	221	226	$name
O	226	227	?

O	228	229	"
O	229	232	and
O	233	237	then
O	238	240	in
O	241	243	my
O	244	247	php
O	248	254	script
O	255	256	:
O	257	262	$name
O	263	264	=
O	265	277	$myObj['name
O	278	279	'
O	280	282	];
O	282	283	.

O	284	286	Is
O	287	292	there
O	293	296	any
O	297	302	other
O	303	306	way
O	306	307	?

O	308	311	How
O	312	315	can
O	316	317	I
O	318	325	uncheck
O	326	327	a
O	328	336	checkbox
O	337	339	in
O	340	343	php
O	344	347	and
O	348	351	not
O	352	354	by
O	355	365	renedering
O	366	369	the
O	370	375	whole
O	376	384	checkbox
O	385	390	input
O	390	391	?

O	392	398	Thanks
O	399	400	a
O	401	404	lot

O	405	410	input
O	411	416	type=
O	417	418	"
O	418	422	text
O	422	423	"
O	424	429	name=
O	430	431	"
O	431	435	name
O	435	436	"
O	437	443	value=
O	444	445	"
O	445	446	?

O	447	450	php
O	451	455	echo
O	456	461	$name
O	461	462	?

O	463	464	"

O	465	467	To
O	468	473	check
O	474	477	the
O	478	483	boxes
O	483	484	,
O	485	488	use
O	489	490	:
O	491	510	@codeSnippetRemoved

O	0	4	Slow
O	5	9	user
O	10	15	input
O	16	18	on
B-Fram	19	26	firefox
O	26	27	,
O	28	31	but
O	32	35	not
B-Fram	36	42	chrome

O	43	44	I
O	45	49	have
O	50	51	a
O	52	55	web
O	56	60	page
O	61	65	with
O	66	67	a
O	68	74	little
O	75	79	over
O	80	84	1000
O	85	89	text
O	90	96	inputs
O	97	100	and
O	101	104	100
O	105	110	check
O	111	116	boxes
O	117	124	created
O	125	127	in
O	128	131	the
O	132	141	following
O	142	145	way
O	146	147	:

O	148	152	echo
O	153	154	"
O	154	156	td
O	157	162	input
O	163	173	type='text
O	174	175	'
O	176	179	id=
O	180	182	'"
O	182	183	.

O	184	186	$a
O	186	187	.

O	188	189	"
O	189	190	-
O	190	191	"
O	191	192	.

O	193	195	$b
O	195	196	.

O	197	198	"
O	198	202	-inc
O	202	203	"
O	203	204	.

O	205	207	"'
O	208	225	autocomplete='off
O	226	227	'
O	228	229	/
O	230	232	td
O	233	234	"
O	234	235	;

O	236	239	the
O	240	245	input
O	246	253	freezes
O	254	265	momentarily
O	266	270	when
O	271	280	switching
O	281	288	between
O	289	294	input
O	295	303	elements
O	304	307	and
O	308	314	typing
O	314	315	.
O	316	318	at
O	319	324	first
O	325	326	i
O	327	334	thought
O	335	338	the
O	339	346	problem
O	347	350	was
O	351	355	that
B-Fram	356	363	firefox
O	364	371	retains
O	372	383	information
O	384	386	on
O	387	394	refresh
O	394	395	,
O	396	399	but
O	400	404	with
O	405	408	the
O	409	421	autocomplete
O	422	430	property
O	431	433	it
O	434	436	no
O	437	443	longer
O	444	448	does
O	448	449	.

O	450	454	when
O	455	456	i
O	457	462	check
O	463	466	the
O	467	475	profiler
O	476	479	the
O	480	488	profiler
O	489	493	says
B-API	494	511	messageQueue.push
O	512	514	is
O	515	518	the
O	519	526	culprit
O	526	527	.

O	528	529	I
O	530	532	am
O	533	543	especially
O	544	552	confused
O	553	555	as
B-Fram	556	562	chrome
O	563	565	is
O	566	575	perfectly
O	576	580	fine
O	580	581	.

O	582	585	any
O	586	590	idea
O	591	595	what
O	596	598	is
O	599	606	slowing
O	607	610	the
O	611	616	input
O	617	620	and
O	621	624	how
O	625	627	to
O	628	631	fix
O	632	634	it
O	634	635	?

O	636	637	I
O	638	643	think
O	644	646	it
O	647	649	is
O	650	657	because
O	658	661	you
O	662	665	are
O	666	671	using
O	672	673	a
O	674	679	table
O	679	680	.

O	681	684	Use
O	685	688	div
O	689	690	'
O	691	692	s
O	693	700	instead
O	701	703	of
O	704	710	tables
O	710	711	,
O	712	716	that
O	717	718	'
O	719	720	s
O	721	722	a
O	723	726	lot
O	727	733	faster
O	733	734	.

O	735	754	@codeSnippetRemoved

O	0	3	How
O	4	6	to
O	7	11	move
O	12	19	content
O	20	24	from
B-API	25	36	QListWidget
O	37	39	to
O	40	41	a
B-API	42	53	QStringList
O	54	58	with
B-Fram	59	64	PyQt4
O	64	65	?

O	66	67	I
O	68	72	have
O	73	74	a
O	75	81	dialog
O	82	84	in
O	85	90	which
O	91	92	a
O	93	97	user
O	98	105	selects
O	106	109	the
O	110	115	files
O	116	120	that
O	121	126	needs
O	126	127	,
O	128	130	it
O	131	135	adds
O	136	137	(
O	137	140	via
B-API	141	152	QPushButton
O	152	153	)
O	154	156	in
O	157	158	a
B-API	159	170	QListWidget
O	170	171	,
O	172	174	my
O	175	182	problem
O	183	185	it
O	186	187	'
O	188	189	s
O	190	194	that
O	195	196	I
O	197	201	need
O	202	204	to
O	205	212	recover
O	213	216	all
O	217	220	the
O	221	226	files
O	227	231	from
O	232	235	the
B-API	236	247	QListWidget
O	248	250	in
O	251	252	a
B-API	253	264	QStringList
O	264	265	.

O	266	267	I
O	268	273	tried
O	274	278	like
O	279	283	this
O	283	284	,
O	285	288	but
O	289	298	something
O	299	301	is
O	302	307	wrong
O	308	309	:
O	310	329	@codeSnippetRemoved

O	330	332	As
O	333	334	I
O	335	345	understood
O	345	346	,
O	347	350	you
O	351	355	need
O	356	358	to
O	359	362	add
O	363	366	the
O	367	375	selected
O	376	380	item
O	381	385	text
O	386	391	value
O	392	394	to
O	395	396	a
B-API	397	408	QStringList
O	408	409	.

O	410	414	Here
O	415	416	'
O	417	418	s
O	419	422	how
O	423	425	to
O	426	428	do
O	429	431	it
O	431	432	.

O	433	452	@codeSnippetRemoved

O	453	454	I
O	455	460	think
O	461	467	you're
O	468	475	missing
B-API	476	483	.text()
O	484	489	after
O	490	493	the
O	494	498	item
O	499	500	:
O	501	520	@codeSnippetRemoved

B-API	0	11	readlines()
O	12	18	cannot
O	19	23	read
O	24	29	lines
O	30	35	after
O	36	41	using
B-API	42	52	readline()

O	53	56	The
O	57	66	following
O	67	73	simple
O	74	78	code
O	79	84	reads
O	85	86	a
B-Stan	87	90	CSV
O	91	95	file
O	96	99	and
O	100	107	returns
O	108	111	the
O	112	118	number
O	119	121	of
O	122	127	lines
O	128	130	of
O	131	134	the
O	135	139	file
O	139	140	.

O	141	143	As
O	144	147	you
O	148	151	can
O	152	155	see
O	156	158	in
O	159	162	the
O	163	169	output
O	169	170	,
O	171	174	the
O	175	179	file
O	180	183	has
O	184	187	501
O	188	193	lines
O	193	194	.

O	195	214	@codeSnippetRemoved

O	215	218	But
O	219	221	if
O	222	223	I
O	224	230	insert
O	231	232	a
B-API	233	243	readline()
O	244	250	before
O	251	256	using
B-API	257	268	readlines()
O	268	269	,
O	270	273	the
O	274	280	latter
O	281	285	does
O	286	289	not
O	290	295	reach
O	296	298	at
O	299	302	the
O	303	306	end
O	307	309	of
O	310	313	the
O	314	318	file
O	318	319	.

O	320	339	@codeSnippetRemoved

O	340	342	Is
O	343	348	there
O	349	352	any
O	353	358	basic
O	359	366	mistake
O	367	369	in
O	370	372	my
O	373	377	code
O	377	378	?

O	379	382	How
O	383	386	can
O	387	388	I
O	389	392	mix
B-API	393	403	readline()
O	404	407	and
B-API	408	419	readlines()
O	419	420	?

O	421	422	(
O	422	430	actually
O	431	432	I
O	433	438	don't
O	439	443	need
O	444	446	to
O	447	450	mix
O	451	456	these
O	457	460	two
O	461	470	functions
O	471	473	in
O	474	476	my
O	477	481	real
O	482	489	program
O	489	490	,
O	491	494	but
O	495	496	I
O	497	499	am
O	500	504	just
O	505	512	curious
O	513	516	...
O	516	517	)

O	518	521	You
O	522	525	can
O	526	534	download
O	535	538	the
O	539	543	file
O	544	546	at
O	547	603	https://dl.dropboxusercontent.com/u/16653989/tmp/tmp.csv

O	604	608	This
O	609	612	has
O	613	622	something
O	623	625	to
O	626	628	do
O	629	633	with
O	634	637	the
O	638	644	codecs
O	645	651	module
O	651	652	.

O	653	660	Because
O	661	665	when
O	666	669	you
O	670	672	do
O	673	676	the
O	677	681	same
O	682	687	thing
O	688	692	with
O	693	696	the
O	697	704	regular
O	705	711	python
O	712	716	open
O	717	726	statement
O	726	727	,
O	728	730	it
O	731	736	works
O	737	739	as
O	740	748	expected
O	749	750	:
O	751	770	@codeSnippetRemoved

O	0	11	Appropriate
O	12	18	syntax
O	19	22	for
O	23	35	Initialising
O	36	42	Python
O	43	48	C-API
O	49	58	container
O	59	64	types
O	65	66	(
O	66	70	List
O	71	75	Dict
O	76	81	Tuple
O	82	85	Set
O	85	86	)
O	87	89	in
O	90	93	C++

O	94	97	I'm
O	98	107	designing
O	108	109	a
O	110	113	C++
O	114	128	Python-wrapper
O	128	129	.

O	130	131	I
O	132	136	have
O	137	139	an
B-API	140	146	Object
O	147	152	class
O	153	155	to
O	156	160	wrap
O	161	162	a
O	163	170	generic
O	171	180	PyObject*
O	180	181	,
O	182	185	and
O	186	187	I
O	188	190	am
O	191	200	providing
O	201	213	constructors
O	214	217	and
O	218	228	conversion
O	229	238	operators
O	239	241	so
O	242	246	that
O	247	248	I
O	249	252	can
O	253	255	do
O	256	262	things
O	263	267	like
O	268	269	:
O	270	289	@codeSnippetRemoved

O	290	293	I'm
O	294	303	currently
O	304	311	looking
O	312	314	at
O	315	318	how
O	319	320	I
O	321	326	might
O	327	337	initialise
O	338	348	containers
O	349	350	:
B-API	351	362	PyDict_Type
I-API	363	374	PyList_Type
I-API	375	387	PyTuple_Type
I-API	388	398	PySet_Type
O	399	400	(
O	400	401	I
O	402	407	think
O	408	412	that
O	413	414	'
O	415	416	s
O	417	427	everything
O	427	428	?
O	428	429	)

O	430	432	It
O	433	440	appears
O	441	442	I
O	443	446	can
O	447	452	break
O	453	457	this
O	458	462	down
O	463	467	into
O	468	472	just
O	473	474	2
O	475	480	cases
O	481	482	:
B-API	483	494	PyList_Type
O	495	498	and
B-API	499	510	PyDict_Type
O	510	511	.

O	512	519	Because
O	520	523	for
O	524	525	{
B-API	526	537	PyList_Type
O	537	538	,
B-API	539	551	PyTuple_Type
O	551	552	,
B-API	553	563	PySet_Type
O	564	565	}
O	566	567	I
O	568	571	can
O	572	582	initialise
O	583	584	a
B-API	585	596	PyList_Type
O	597	600	and
O	601	613	subsequently
O	614	621	convert
O	622	624	it
O	624	625	.

O	626	628	My
O	629	637	question
O	638	640	is
O	641	642	:
O	643	647	What
O	648	651	C++
O	652	658	syntax
O	659	665	should
O	666	667	I
O	668	675	provide
O	675	676	?

O	677	683	Seeing
O	684	686	as
O	687	689	it
O	690	692	is
O	693	695	my
O	696	700	goal
O	701	703	to
O	704	715	open-source
O	716	718	my
O	719	726	project
O	727	730	for
O	731	737	public
O	738	749	consumption
O	749	750	,
O	751	752	I
O	753	757	need
O	758	760	to
O	761	764	pay
O	765	774	attention
O	775	777	to
O	778	787	providing
O	788	789	a
O	790	796	usable
O	797	806	interface
O	807	811	that
O	812	817	isn't
O	818	823	going
O	824	826	to
B-Stan	827	830	jar
O	831	835	with
O	836	844	existing
O	845	851	design
O	852	860	patterns
O	860	861	.

O	862	872	Everything
O	873	877	that
O	878	885	follows
O	886	891	below
O	892	894	is
O	895	897	my
O	898	905	thought
O	906	913	process
O	913	914	,
O	915	918	and
O	919	921	my
O	922	925	own
O	926	933	attempt
O	934	936	to
O	937	943	answer
O	944	947	the
O	948	956	question
O	956	957	.

O	958	959	I
O	960	964	will
O	965	973	separate
O	974	976	it
O	976	977	.

O	978	982	Also
O	982	983	,
O	984	986	my
O	987	996	apologies
O	997	1001	that
O	1002	1006	this
O	1007	1010	may
O	1011	1013	be
O	1014	1016	an
O	1017	1021	open
O	1022	1030	question
O	1031	1032	(
O	1032	1036	more
O	1037	1041	than
O	1042	1045	one
O	1046	1054	solution
O	1054	1055	)
O	1055	1056	.

O	1057	1058	(
O	1058	1066	THOUGHTS
O	1067	1070	...
O	1070	1071	)

O	1072	1075	Let
O	1076	1077	'
O	1078	1079	s
O	1080	1083	say
O	1084	1085	I
O	1086	1090	want
O	1091	1093	to
O	1094	1104	initialise
O	1105	1106	a
O	1107	1111	list
O	1112	1113	:
O	1114	1133	@codeSnippetRemoved

O	1134	1137	std
O	1138	1140	::
B-API	1141	1157	initializer_list
O	1158	1164	Object
O	1165	1170	would
O	1171	1173	be
O	1174	1177	one
O	1178	1184	option
O	1184	1185	,
O	1186	1189	and
O	1190	1192	it
O	1193	1198	would
O	1199	1209	implicitly
O	1210	1218	typecast
O	1219	1224	every
O	1225	1233	argument
O	1234	1236	to
O	1237	1243	Object

O	1244	1247	But
O	1248	1251	now
O	1252	1256	what
O	1257	1262	would
O	1263	1266	one
O	1267	1271	want
O	1272	1280	Object{1
O	1281	1282	}
O	1283	1285	to
O	1286	1291	yield
O	1291	1292	?

O	1293	1301	Probably
O	1302	1303	a
B-API	1304	1314	PyInt_Type
O	1314	1315	.

O	1316	1319	But
O	1320	1323	the
B-API	1324	1340	initializer_list
O	1341	1352	constructor
O	1353	1355	is
O	1356	1361	going
O	1362	1364	to
O	1365	1375	overshadow
O	1376	1377	/
O	1378	1382	hide
O	1383	1385	it
O	1385	1386	.

O	1387	1390	And
O	1391	1395	then
O	1396	1408	dictionaries
O	1409	1410	:
O	1411	1430	@codeSnippetRemoved

O	1431	1436	Again
O	1436	1437	,
O	1438	1442	key2
O	1443	1448	might
O	1449	1452	not
O	1453	1455	be
O	1456	1459	the
O	1460	1464	same
O	1465	1469	type
O	1470	1472	as
O	1473	1477	key1
O	1477	1478	,
O	1479	1483	that
O	1484	1485	'
O	1486	1487	s
O	1488	1491	the
O	1492	1497	great
O	1498	1503	thing
O	1504	1509	about
O	1510	1516	Python
O	1516	1517	.

O	1518	1520	In
O	1521	1524	C++
O	1525	1526	I
O	1527	1532	don't
O	1533	1538	think
O	1539	1544	there
O	1545	1546	'
O	1547	1548	s
O	1549	1552	any
O	1553	1556	way
O	1557	1559	to
O	1560	1563	use
O	1564	1565	:
O	1565	1566	,
O	1567	1570	but
O	1571	1572	I
O	1573	1578	could
O	1579	1584	catch
O	1585	1586	{
O	1587	1588	{
O	1588	1589	,
O	1590	1591	}
O	1591	1592	,
O	1593	1594	{
O	1594	1595	,
O	1596	1597	}
O	1597	1598	,
O	1599	1600	{
O	1600	1601	,
O	1602	1603	}
O	1604	1605	}
O	1606	1610	with
O	1611	1614	std
O	1615	1617	::
O	1618	1621	map
O	1622	1628	Object
O	1628	1629	,
O	1630	1636	Object
O	1637	1639	or
O	1640	1643	std
O	1644	1646	::
O	1647	1651	pair

O	1652	1654	So
O	1655	1657	it
O	1658	1663	seems
O	1664	1666	to
O	1667	1669	be
O	1670	1673	the
O	1674	1678	List
O	1679	1683	that
O	1684	1686	is
O	1687	1690	the
O	1691	1698	biggest
O	1699	1706	problem
O	1706	1707	.

O	1708	1711	The
O	1712	1716	only
O	1717	1722	thing
O	1723	1724	I
O	1725	1728	can
O	1729	1734	think
O	1735	1737	of
O	1738	1742	this
O	1743	1749	having
O	1750	1751	a
O	1752	1757	first
O	1758	1766	argument
O	1767	1774	specify
O	1775	1779	type
O	1780	1781	:
O	1782	1801	@codeSnippetRemoved

O	1802	1806	This
O	1807	1812	would
O	1813	1817	have
O	1818	1822	some
O	1823	1832	advantage
O	1833	1836	for
O	1837	1843	typing
O	1844	1847	out
O	1848	1860	dictionaries
O	1860	1861	,
O	1862	1864	as
O	1865	1870	extra
O	1871	1877	braces
O	1878	1883	cause
O	1884	1891	clutter
O	1891	1892	,
O	1893	1901	although
O	1902	1903	I
O	1904	1910	should
O	1911	1915	also
O	1916	1921	allow
O	1922	1925	for
O	1926	1927	:
O	1928	1947	@codeSnippetRemoved

O	1948	1950	So
O	1951	1952	I
O	1953	1958	think
O	1959	1961	my
O	1962	1970	complete
O	1971	1974	set
O	1975	1977	of
O	1978	2005	constructors-for-containers
O	2006	2011	would
O	2012	2016	look
O	2017	2021	like
O	2022	2026	this
O	2027	2028	:
O	2029	2048	@codeSnippetRemoved

O	2049	2053	Then
O	2054	2057	for
O	2058	2066	symmetry
O	2067	2068	I
O	2069	2075	should
O	2076	2083	provide
O	2084	2085	:
O	2086	2105	@codeSnippetRemoved

O	2106	2109	...

O	2110	2118	Allowing
O	2119	2122	the
O	2123	2127	user
O	2128	2130	to
O	2131	2133	do
O	2134	2143	something
O	2144	2148	like
O	2149	2155	Object
O	2156	2170	f{PyFloat_Type
O	2170	2171	,
O	2172	2173	3
O	2174	2175	}
O	2176	2177	(
O	2177	2178	3
O	2179	2184	would
O	2185	2193	normally
O	2194	2197	get
O	2198	2207	converted
O	2208	2210	to
B-API	2211	2222	PyLong_Type
O	2222	2223	)

O	2224	2227	But
O	2228	2232	wait
O	2232	2233	!

O	2234	2235	3
O	2236	2238	is
O	2239	2242	not
O	2243	2248	going
O	2249	2251	to
O	2252	2254	be
O	2255	2265	implicitly
O	2266	2275	converted
O	2276	2278	to
O	2279	2285	Object
O	2285	2286	,
O	2287	2289	as
O	2290	2298	implicit
O	2299	2310	conversions
O	2311	2315	only
O	2316	2320	work
O	2321	2324	for
O	2325	2340	single-argument
O	2341	2353	constructors
O	2353	2354	.

O	2355	2374	@codeSnippetRemoved

O	2375	2380	Maybe
O	2381	2382	I
O	2383	2389	should
O	2390	2396	create
O	2397	2398	a
B-API	2399	2407	MakeLong
O	2408	2416	function
O	2416	2417	,
O	2418	2420	so
O	2421	2422	I
O	2423	2426	can
O	2427	2429	do
O	2430	2431	:
O	2432	2451	@codeSnippetRemoved

O	2452	2455	But
O	2456	2460	wait
O	2460	2461	,
O	2462	2467	can't
O	2468	2469	I
O	2470	2473	use
O	2474	2477	the
O	2478	2481	std
O	2482	2484	::
O	2485	2501	initializer_list
O	2502	2513	constructor
O	2514	2516	to
O	2517	2519	my
O	2520	2529	advantage
O	2530	2534	here
O	2534	2535	,
O	2536	2555	@codeSnippetRemoved

O	2556	2559	And
O	2560	2564	then
O	2565	2566	I
O	2567	2570	can
O	2571	2575	code
O	2576	2577	:
O	2578	2597	@codeSnippetRemoved

O	2598	2602	That
O	2603	2605	is
O	2606	2611	going
O	2612	2614	to
O	2615	2621	handle
O	2622	2632	everything
O	2632	2633	!

O	2634	2636	So
O	2637	2642	first
O	2643	2645	it
O	2646	2651	would
O	2652	2659	convert
O	2660	2661	{
O	2662	2663	3
O	2664	2665	}
O	2666	2670	into
O	2671	2672	a
O	2673	2677	list
O	2678	2688	containing
O	2689	2692	one
B-API	2693	2709	PyLong_Type.Then
O	2710	2712	it
O	2713	2717	will
O	2718	2722	pull
O	2723	2726	out
O	2727	2730	the
O	2731	2736	first
O	2737	2738	(
O	2738	2741	and
O	2742	2746	only
O	2746	2747	)
O	2748	2760	element.Then
O	2761	2763	it
O	2764	2768	will
O	2769	2776	convert
O	2777	2781	this
O	2782	2786	into
O	2787	2788	a
B-API	2789	2801	PyFloat_Type
O	2801	2802	.

O	2803	2806	The
O	2807	2812	first
O	2813	2821	solution
O	2822	2823	I
O	2824	2829	tried
O	2830	2833	was
O	2834	2836	to
O	2837	2840	use
O	2841	2844	std
O	2845	2847	::
B-API	2848	2864	initializer_list
O	2865	2867	as
O	2868	2875	follows
O	2876	2877	:
O	2878	2897	@codeSnippetRemoved

O	2898	2905	However
O	2905	2906	,
O	2907	2911	this
O	2912	2917	makes
O	2918	2921	for
O	2922	2926	some
O	2927	2936	seriously
O	2937	2941	ugly
O	2942	2948	syntax
O	2948	2949	,
O	2950	2952	as
O	2953	2955	it
O	2956	2961	fails
O	2962	2964	to
O	2965	2972	convert
O	2973	2982	arguments
O	2983	2985	to
O	2986	2993	Objects
O	2993	2994	,
O	2995	3004	appearing
O	3005	3007	to
O	3008	3015	require
O	3016	3017	:
O	3018	3037	@codeSnippetRemoved

O	3038	3040	So
O	3041	3042	I
O	3043	3050	settled
O	3051	3053	on
O	3054	3059	using
O	3060	3061	a
O	3062	3070	variadic
O	3071	3079	argument
O	3080	3081	:
O	3082	3101	@codeSnippetRemoved

O	3102	3106	This
O	3107	3116	technique
O	3117	3123	allows
O	3124	3127	for
O	3128	3129	a
O	3130	3134	tidy
O	3135	3146	lightweight
O	3147	3152	usage
O	3153	3159	syntax
O	3160	3161	:
O	3162	3181	@codeSnippetRemoved

