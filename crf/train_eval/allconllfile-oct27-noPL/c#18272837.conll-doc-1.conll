O	0	5	Allow
O	6	15	templates
O	16	18	to
O	19	21	be
O	22	30	inferred

O	31	34	Say
O	35	38	I'm
O	39	44	using
O	45	47	an
O	48	56	external
O	57	64	package
O	65	68	for
O	69	76	storing
O	77	83	graphs
O	83	84	.

O	85	86	A
O	87	105	BidirectionalGraph
O	106	111	takes
O	112	115	two
O	116	125	templates
O	126	127	:
O	128	129	a
O	130	136	vertex
O	137	140	and
O	141	143	an
O	144	148	edge
O	149	153	type
O	154	155	:
O	156	175	@codeSnippetRemoved

O	176	189	Unfortunately
O	189	190	,
O	191	195	this
O	196	201	graph
O	202	209	package
O	210	217	doesn't
O	218	223	allow
O	224	227	you
O	228	230	to
O	231	234	get
O	235	238	the
O	239	244	edges
O	245	254	radiating
O	255	259	into
O	260	261	a
O	262	268	vertex
O	269	271	in
O	272	273	a
O	274	280	single
O	281	285	line
O	285	286	.

O	287	294	Instead
O	294	295	,
O	296	299	you
O	300	304	have
O	305	307	to
O	308	315	provide
O	316	318	an
B-API	319	330	IEnumerable
O	330	331	,
O	332	337	which
O	338	340	it
O	341	345	will
O	346	354	populate
O	355	359	with
O	360	363	the
O	364	371	results
O	371	372	.

O	373	377	This
O	378	381	can
O	382	389	disrupt
O	390	391	a
O	392	396	good
O	397	403	coding
O	404	410	rhythm
O	411	413	by
O	414	420	making
O	421	426	tasks
O	427	431	like
O	432	433	"
O	433	437	loop
O	438	445	through
O	446	449	all
O	450	458	vertices
O	459	463	that
O	464	467	are
O	468	478	successors
O	479	481	of
O	482	488	vertex
O	489	490	x
O	490	491	"
O	492	496	take
O	497	500	far
O	501	504	too
O	505	509	much
O	510	514	code
O	514	515	.

O	516	517	I
O	518	524	wanted
O	525	527	to
O	528	531	use
B-Fram	532	536	.NET
O	537	538	'
O	539	540	s
O	541	551	extensions
O	552	554	to
O	555	558	add
O	559	560	a
O	561	569	one-line
O	570	578	solution
O	579	581	to
O	582	585	the
O	586	591	graph
O	592	597	class
O	598	599	:
O	600	619	@codeSnippetRemoved

O	620	623	But
O	624	628	when
O	629	630	I
O	631	635	call
O	636	655	graph.IncomingEdges
O	656	657	(
O	657	663	vertex
O	663	664	)
O	664	665	,
O	666	669	for
O	670	674	some
O	675	681	reason
O	682	684	C#
O	685	686	(
B-Fram	686	690	.NET
I-Fram	691	698	version
I-Fram	699	702	4.5
O	702	703	)
O	704	709	can't
O	710	715	infer
O	716	719	the
O	720	728	template
O	729	738	arguments
O	738	739	,
O	740	742	so
O	743	744	I
O	745	749	have
O	750	752	to
O	753	756	say
O	757	758	:

O	759	778	graph.IncomingEdges
O	779	818	GraphThatInheritsFromBidirectionalGraph
O	819	829	VertexType
O	829	830	,
O	831	839	EdgeType
O	839	840	,
O	841	851	VertexType
O	851	852	,
O	853	861	EdgeType
O	862	863	(
O	863	869	vertex
O	869	870	)
O	870	871	.

O	872	875	Not
O	876	882	really
O	883	884	a
O	885	890	great
O	891	902	improvement
O	902	903	.

O	904	909	First
O	909	910	,
O	911	914	why
O	915	920	can't
O	921	924	the
O	925	933	template
O	934	939	types
O	940	942	be
O	943	952	estimated
O	952	953	?

O	954	955	I
O	956	960	have
O	961	962	a
O	963	970	feeling
O	971	973	it
O	974	977	has
O	978	980	to
O	981	983	do
O	984	988	with
O	989	1000	inheritance
O	1000	1001	,
O	1002	1005	but
O	1006	1011	don't
O	1012	1022	understand
O	1022	1023	.

O	1024	1027	I'm
O	1028	1032	used
O	1033	1035	to
O	1036	1041	using
O	1042	1045	C++
O	1045	1046	,
O	1047	1050	and
O	1051	1054	for
O	1055	1059	some
O	1060	1066	reason
O	1067	1071	feel
O	1072	1076	that
B-Fram	1077	1080	gcc
O	1081	1086	could
O	1087	1092	infer
O	1093	1096	the
O	1097	1105	template
O	1106	1111	types
O	1111	1112	.

O	1113	1119	Second
O	1119	1120	,
O	1121	1123	if
O	1124	1128	this
O	1129	1134	can't
O	1135	1137	be
O	1138	1147	prevented
O	1147	1148	,
O	1149	1151	is
O	1152	1155	the
O	1156	1163	correct
O	1164	1170	design
O	1171	1177	choice
O	1178	1180	to
O	1181	1185	make
O	1186	1187	a
O	1188	1193	graph
O	1194	1199	class
O	1200	1203	for
O	1204	1210	actual
O	1211	1214	use
O	1214	1215	,
O	1216	1221	which
O	1222	1230	inherits
O	1231	1235	from
O	1236	1254	BidirectionalGraph
O	1254	1255	?

O	1256	1258	It
O	1259	1264	seems
O	1265	1266	a
O	1267	1272	waste
O	1273	1275	to
O	1276	1280	have
O	1281	1283	to
O	1284	1291	rewrite
O	1292	1295	the
O	1296	1308	constructors
O	1308	1309	,
O	1310	1313	but
O	1314	1317	I'm
O	1318	1322	sure
O	1323	1328	you'd
O	1329	1334	agree
O	1335	1339	that
O	1340	1347	calling
O	1348	1351	the
O	1352	1358	method
O	1359	1363	with
O	1364	1372	explicit
O	1373	1381	template
O	1382	1387	types
O	1388	1390	is
O	1391	1400	inelegant
O	1400	1401	.

O	1402	1406	EDIT
O	1407	1408	:

O	1409	1418	Strangely
O	1418	1419	,
O	1420	1423	the
O	1424	1434	equivalent
O	1435	1448	specification
O	1449	1450	(
O	1450	1455	below
O	1455	1456	)
O	1457	1461	does
O	1462	1467	allow
O	1468	1477	automatic
O	1478	1487	inference
O	1488	1490	of
O	1491	1499	template
O	1500	1505	types
O	1505	1506	.

O	1507	1509	So
O	1509	1510	,
O	1511	1515	even
O	1516	1522	though
O	1523	1525	it
O	1526	1532	solves
O	1533	1535	my
O	1536	1543	initial
O	1544	1551	problem
O	1552	1553	(
O	1553	1559	adding
O	1560	1564	this
O	1565	1578	functionality
O	1579	1581	to
O	1582	1585	the
O	1586	1591	graph
O	1591	1592	)
O	1592	1593	,
O	1594	1597	I'd
O	1598	1603	still
O	1604	1610	really
O	1611	1615	like
O	1616	1618	to
O	1619	1629	understand
O	1629	1630	.

O	1631	1650	@codeSnippetRemoved

O	1651	1654	The
O	1655	1660	first
O	1661	1668	version
O	1669	1671	of
O	1672	1676	your
O	1677	1686	extension
O	1687	1693	method
O	1694	1696	is
O	1697	1701	able
O	1702	1704	to
O	1705	1710	infer
O	1711	1721	TGraphType
O	1722	1725	and
O	1726	1733	TVertex
O	1734	1737	but
O	1738	1741	not
O	1742	1747	TEgde
O	1747	1748	,
O	1749	1751	as
O	1752	1754	it
O	1755	1760	would
O	1761	1768	require
O	1769	1778	inferring
O	1779	1782	the
O	1783	1788	TEdge
O	1789	1793	from
O	1794	1797	the
O	1798	1802	type
O	1803	1813	constraint
O	1814	1815	:
O	1816	1835	@codeSnippetRemoved

O	1836	1841	which
O	1842	1844	C#
O	1845	1853	compiler
O	1854	1858	does
O	1859	1862	not
O	1863	1865	do
O	1866	1867	(
O	1867	1869	it
O	1870	1874	does
O	1875	1878	not
O	1879	1884	infer
O	1885	1892	generic
O	1893	1897	type
O	1898	1908	parameters
O	1909	1913	from
O	1914	1918	type
O	1919	1930	constraints
O	1930	1931	)
O	1931	1932	.

O	1933	1934	I
O	1935	1943	honestly
O	1944	1949	don't
O	1950	1954	know
O	1955	1957	if
O	1958	1963	there
O	1964	1966	is
O	1967	1968	a
O	1969	1978	technical
O	1979	1985	reason
O	1986	1992	behind
O	1993	1997	this
O	1998	2000	or
O	2001	2003	it
O	2004	2008	just
O	2009	2015	wasn't
O	2016	2027	implemented
O	2027	2028	.

O	2029	2033	Your
O	2034	2041	updated
O	2042	2049	version
O	2049	2050	,
O	2051	2053	on
O	2054	2057	the
O	2058	2063	other
O	2064	2068	hand
O	2068	2069	,
O	2070	2078	includes
O	2079	2097	BidirectionalGraph
O	2098	2105	TVertex
O	2105	2106	,
O	2107	2112	TEdge
O	2113	2115	as
O	2116	2117	a
O	2118	2127	parameter
O	2127	2128	,
O	2129	2131	so
O	2132	2135	for
O	2136	2143	example
O	2144	2148	when
O	2149	2152	you
O	2153	2157	call
O	2158	2161	the
O	2162	2171	extension
O	2172	2178	method
O	2179	2181	on
O	2182	2183	a
O	2184	2189	class
O	2190	2194	like
O	2195	2196	:
O	2197	2216	@codeSnippetRemoved

O	2217	2220	the
O	2221	2229	compiler
O	2230	2232	is
O	2233	2237	able
O	2238	2240	to
O	2241	2248	examine
O	2249	2252	the
O	2253	2257	type
O	2258	2264	AGraph
O	2265	2268	and
O	2269	2272	see
O	2273	2277	that
O	2278	2283	there
O	2284	2286	is
O	2287	2288	a
O	2289	2295	unique
O	2296	2300	type
O	2301	2319	BidirectionalGraph
O	2320	2327	AVertex
O	2327	2328	,
O	2329	2335	AnEdge
O	2336	2338	in
O	2339	2342	its
O	2343	2354	inheritance
O	2355	2364	hierarchy
O	2364	2365	,
O	2366	2368	so
O	2369	2371	it
O	2372	2374	is
O	2375	2379	able
O	2380	2382	to
O	2383	2388	infer
O	2389	2396	TVertex
O	2397	2400	and
O	2401	2406	TEdge
O	2406	2407	.

O	2408	2412	Note
O	2413	2417	that
O	2418	2420	if
O	2421	2424	the
O	2425	2434	parameter
O	2435	2439	type
O	2440	2444	were
O	2445	2451	IGraph
O	2452	2459	TVertex
O	2459	2460	,
O	2461	2466	TEdge
O	2467	2468	(
O	2468	2475	instead
O	2476	2478	of
O	2479	2497	BidirectionalGraph
O	2498	2505	TVertex
O	2505	2506	,
O	2507	2512	TEdge
O	2512	2513	)
O	2514	2517	and
O	2518	2524	AGraph
O	2525	2536	implemented
O	2537	2545	multiple
O	2546	2557	constructed
O	2558	2563	types
O	2564	2566	of
O	2567	2571	that
O	2572	2579	generic
O	2580	2589	interface
O	2589	2590	,
O	2591	2595	e.g.
O	2596	2597	:
O	2598	2617	@codeSnippetRemoved

O	2618	2622	then
O	2623	2627	type
O	2628	2637	inference
O	2638	2643	would
O	2644	2648	fail
O	2649	2653	once
O	2654	2659	again
O	2660	2667	because
O	2668	2670	it
O	2671	2676	can't
O	2677	2681	tell
O	2682	2684	if
O	2684	2685	,
O	2686	2689	for
O	2690	2697	example
O	2697	2698	,
O	2699	2706	TVertex
O	2707	2709	is
O	2710	2717	AVertex
O	2718	2720	or
O	2721	2734	AnotherVertex
O	2734	2735	.
