Java lib or app to convert CSV to XML file?
Is there an existing application or library in Java which will allow me to convert a CSV data file to XML file?   
The XML tags would be provided through possibly the first row containing column headings. 
This may be too basic or limited of a solution, but couldn't you do a   String.split()   on each line of the file, remembering the result array of the first line to generate the XML, and just spit each line's array data out with the proper XML elements padding each iteration of a loop? 
Maybe this might help:  JSefa  
You can read CSV file with this tool and serialize it to XML. 
I don't understand why you would want to do this. It sounds almost like cargo cult coding. 
Converting a CSV file to XML doesn't add any value. Your program is already reading the CSV file, so arguing that you need XML doesn't work. 
On the other hand, reading the CSV file, doing  something  with the values, and then serializing to XML does make sense (well, as much as using XML can make sense... ;)) but you would supposedly already have a means of serializing to XML. 
AFAIK, there's no ready-made library to do this for you, but producing a tool capable of translating from CSV to XML should only require you to write a crude CSV parser and hook up JDOM (or your XML Java library of choice) with some glue code. 
There is nothing I know of that can do this without you at least writing a little bit of code... You will need 2 separate library: 
A CSV Parser Framework  
An XML Serialization Framework 
The CSV parser I would recommend (unless you want to have a little bit of fun to write your own CSV Parser) is OpenCSV (A SourceForge Project for parsing CSV Data) 
The XML Serialization Framework should be something that can scale in case you want to transform large (or huge) CSV file to XML: My recommendation is the Sun Java Streaming XML Parser Framework (See  here ) which allows pull-parsing AND serialization. 
I know you asked for Java, but this strikes me as a task well suited to a scripting language. Here is a quick (very simple) solution written in Groovy. 
test.csv  
csvtoxml.groovy  
Writes the following XML to stdout: 
However, the code does very simple parsing (not taking into account quoted or escaped commas) and it does not account for possible absent data. 
This solution does not need any CSV or XML libraries and, I know, it does not handle any illegal characters and encoding issues, but you might be interested in it as well, provided your CSV input does not break the above mentioned rules. 
Attention:  You should not use this code unless you know what you do or don't have the chance to use a further library (possible in some bureacratic projects)... Use a StringBuffer for older Runtime Environments... 
So here we go: 
The input test.csv (stolen from another answer on this page): 
The resulting output: 
As the others above, I don't know any one-step way to do that, but if you are ready to use very simple external libraries, I would suggest: 
OpenCsv  for parsing CSV (small, simple, reliable and easy to use) 
Xstream  to parse/serialize XML (very very easy to use, and creating fully human readable xml) 
Using the same sample data as above, code would look like: 
Producing the following result:
(Xstream allows very fine tuning of the result...) 
For the CSV Part, you may use  my little open source library  
I have an opensource framework for working with CSV and flat files in general. Maybe it's worth looking:  JFileHelpers . 
With that toolkit you can write code using beans, like: 
and then just parse your text files using: 
And you'll have a collection of parsed objects. 
Hope that helps! 
There is also good library  ServingXML  by Daniel Parker, which is able to convert almost any plain text format to XML and back. 
The example for your case can be found  here : It uses heading of field in CSV file as the XML element name. 
You can do this exceptionally easily using Groovy and the code is very readable.  
Basically the text variable will be written to contacts.xml for each line in the contactData.csv and the fields array contains each column. 
You could use  XSLT .  Google it and you will find a few examples e.g.  CSV to XML 
If you use  XSLT  you can then convert the XML to whatever format you want. 
The big difference is that  JSefa  brings in is that it can serialize your java objects to  CSV/XML/etc files and can deserialize back to java objects. And it's driven by annotations which gives you lot of control over the output.  
JFileHelpers also looks interesting. 
Why did'nt anybody mention  Commons CSV  ?   
It's goal is to unify all the disparate libraries that are out there... 
My data migration and transformation library -  Data Pipeline  - can also help here.   
This option streams records from CSV to XML using  FreeMarker  templates so your memory overhead will stay low even when dealing with gigabytes of data. 
Let's say you have this CSV as input. 
And want to produce the following XML. 
Your Java/Data Pipeline code would be: 
Finally, here's what the template files would contain. 
WriteAnXmlFileUsingFreeMarkerTemplates-header-2.xml:  
WriteAnXmlFileUsingFreeMarkerTemplates-footer-2.xml:  
WriteAnXmlFileUsingFreeMarkerTemplates-detail-2.xml:  
Another option for the detail template file would be to use specific tags: 
Hope this helps. 
I had the same problem and needed an application to convert a CSV file to a XML file for one of my projects, but didn't find anything free and good enough on the net, so I coded my own Java Swing CSVtoXML application. 
It's available from my website  HERE . Hope it will help you.  
If not, you can easily code your own like I did; The source code is inside the jar file so modify it as you need if it doesn't fill your requirement. 
