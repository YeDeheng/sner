O	0	3	How
O	4	7	can
O	8	9	I
O	10	17	prevent
O	18	24	memory
O	25	35	exhaustion
O	36	41	using
O	42	43	a
B-Fram	44	51	CakePHP
O	52	63	application
O	63	64	?

O	65	66	I
O	67	69	am
O	70	72	on
O	73	74	a
O	75	78	VPS
O	79	85	server
O	86	87	(
O	87	91	Quad
O	92	96	core
O	97	101	with
O	102	107	768MB
O	108	110	of
O	111	114	RAM
O	114	115	.
O	116	117	I
O	118	120	am
O	121	128	running
O	129	135	Apache
O	136	139	and
O	140	145	using
B-Fram	146	149	APC
O	150	152	as
O	153	155	my
O	156	163	default
O	164	171	caching
O	172	178	engine
O	178	179	)
O	179	180	.

O	181	182	I
O	183	186	get
O	187	193	around
O	194	198	2000
O	199	207	visitors
O	208	211	per
O	212	215	day
O	216	220	with
O	221	222	a
O	223	230	maximum
O	231	233	of
O	234	237	100
O	238	248	concurrent
O	249	257	visitors
O	257	258	.

O	259	268	According
O	269	271	to
B-Fram	272	279	CakePHP
I-Fram	280	288	DebugKit
O	288	289	,
O	290	292	my
O	293	297	most
O	298	304	memory
O	305	314	intensive
O	315	320	pages
O	321	324	use
O	325	331	around
O	332	336	16MB
O	337	340	and
O	341	344	the
O	345	350	other
O	351	356	pages
O	357	364	average
O	365	367	at
O	368	374	around
O	375	379	10MB
O	379	380	.

O	381	383	Is
O	384	388	this
O	389	395	memory
O	396	401	usage
O	402	408	normal
O	408	409	?

O	410	412	Is
O	413	415	it
O	416	422	normal
O	423	426	for
O	427	429	my
O	430	436	memory
O	437	439	to
O	440	450	bottleneck
O	451	453	at
O	454	458	2000
O	459	467	visitors
O	468	471	per
O	472	476	page
O	476	477	?

O	478	484	Should
O	485	486	I
O	487	495	consider
O	496	505	upgrading
O	506	508	my
O	509	513	plan
O	514	516	to
O	517	520	2GB
O	521	524	RAM
O	524	525	?

O	526	527	I
O	528	532	also
O	533	540	noticed
O	541	545	that
O	546	549	the
O	550	554	View
O	555	564	rendering
O	565	567	is
O	568	574	taking
O	575	577	up
O	578	582	most
O	583	585	of
O	586	589	the
O	590	596	memory
O	596	597	,
O	598	604	around
O	605	608	70%
O	609	611	on
O	612	616	most
O	617	622	pages
O	622	623	.

O	624	625	I
O	626	628	am
O	629	639	monitoring
O	640	642	my
O	643	651	resource
O	652	657	usage
O	657	658	,
O	659	663	when
O	664	665	I
O	666	670	have
O	671	677	around
O	678	680	50
O	681	683	or
O	684	688	more
O	689	699	concurrent
O	700	705	users
O	705	706	,
O	707	708	I
O	709	711	am
O	712	719	getting
O	720	721	0
O	722	726	free
O	727	729	MB
O	730	734	left
O	734	735	.

O	736	741	Thank
O	742	745	you

O	746	748	Is
O	749	753	this
O	754	760	memory
O	761	766	usage
O	767	773	normal
O	773	774	?

O	775	778	Yes
O	778	779	,
O	780	782	it
O	783	790	doesn't
O	791	795	seem
O	796	798	to
O	799	801	be
O	802	806	high
O	807	810	for
O	811	812	a
O	813	819	normal
B-Fram	820	827	CakePHP
O	828	839	application
O	839	840	.

O	841	843	Is
O	844	846	it
O	847	853	normal
O	854	857	for
O	858	860	my
O	861	867	memory
O	868	870	to
O	871	881	bottleneck
O	882	884	at
O	885	889	2000
O	890	898	visitors
O	899	902	per
O	903	907	page
O	907	908	?

O	909	910	I
O	911	916	guess
O	917	920	yes
O	920	921	,
O	922	925	I'm
O	926	929	not
O	930	931	a
O	932	933	"
O	933	939	server
O	940	943	guy
O	943	944	"
O	944	945	.

O	946	952	Should
O	953	954	I
O	955	963	consider
O	964	973	upgrading
O	974	976	my
O	977	981	plan
O	982	984	to
O	985	988	2GB
O	989	992	RAM
O	992	993	?

O	994	995	I
O	996	1001	would
O	1002	1005	try
O	1006	1015	switching
O	1016	1018	to
B-Fram	1019	1024	Nginx
O	1025	1030	first
O	1030	1031	.

O	1032	1038	Apache
O	1039	1041	is
O	1042	1043	a
O	1044	1050	memory
O	1051	1057	eating
O	1058	1065	monster
O	1066	1074	compared
O	1075	1077	to
B-Fram	1078	1083	Nginx
O	1083	1084	,
O	1085	1089	just
O	1090	1096	search
O	1097	1100	for
O	1101	1102	a
O	1103	1106	few
O	1107	1117	banchmarks
O	1117	1118	,
O	1119	1120	a
O	1121	1127	random
O	1128	1131	one
O	1132	1136	I've
O	1137	1143	picked
O	1144	1146	by
O	1147	1148	a
O	1149	1154	quick
O	1155	1161	search
O	1162	1164	is
O	1165	1169	from
O	1170	1174	this
O	1175	1179	page
O	1179	1180	.

O	1181	1188	Overall
B-Fram	1189	1194	Nginx
O	1195	1201	should
O	1202	1209	provide
O	1210	1213	you
O	1214	1215	a
O	1216	1220	much
O	1221	1227	better
O	1228	1239	performance
O	1239	1240	.

O	1241	1243	At
O	1244	1248	some
O	1249	1254	stage
O	1255	1256	I
O	1257	1262	would
O	1263	1271	consider
O	1272	1280	updating
O	1281	1284	the
O	1285	1291	memory
O	1292	1295	but
O	1296	1299	try
B-Fram	1300	1305	Nginx
O	1306	1311	first
O	1311	1312	.

O	1313	1316	You
O	1317	1323	should
O	1324	1328	also
O	1329	1334	check
O	1335	1339	your
O	1340	1345	other
O	1346	1355	processes
O	1355	1356	.

O	1357	1361	From
O	1362	1364	my
O	1365	1375	experience
O	1375	1376	,
B-PL	1377	1382	MySQL
O	1383	1388	takes
O	1389	1391	up
O	1392	1396	more
O	1397	1403	memory
O	1404	1408	than
O	1409	1417	anything
O	1418	1422	else
O	1423	1425	on
O	1426	1429	any
O	1430	1435	stack
O	1436	1440	that
O	1441	1442	I
O	1443	1446	run
O	1446	1447	.

O	1448	1451	You
O	1452	1458	should
O	1459	1463	also
O	1464	1473	implement
O	1474	1480	better
O	1481	1485	page
O	1486	1493	caching
O	1494	1496	so
O	1497	1501	that
B-PL	1502	1505	PHP
O	1506	1513	doesn't
O	1514	1518	need
O	1519	1521	to
O	1522	1524	be
O	1525	1532	touched
O	1533	1537	when
O	1538	1540	it
O	1541	1546	isn't
O	1547	1557	absolutely
O	1558	1567	necessary
O	1567	1568	.

O	1569	1572	But
O	1573	1579	Apache
O	1580	1582	is
O	1583	1587	also
O	1588	1589	a
O	1590	1596	memory
O	1597	1600	hog
O	1601	1605	that
O	1606	1611	needs
O	1612	1614	to
O	1615	1617	be
O	1618	1622	fine
O	1623	1628	tuned
O	1628	1629	.

O	1630	1632	If
O	1633	1636	you
O	1637	1641	want
O	1642	1644	to
O	1645	1650	stick
O	1651	1655	with
O	1656	1662	Apache
O	1662	1663	,
O	1664	1668	then
O	1669	1672	run
B-Fram	1673	1680	Varnish
O	1681	1683	in
O	1684	1689	front
O	1690	1692	of
O	1693	1695	it
O	1695	1696	.

O	1697	1701	Also
O	1701	1702	,
O	1703	1707	keep
B-Fram	1708	1711	APC
O	1711	1712	,
O	1713	1716	but
O	1717	1721	also
O	1722	1725	add
B-Fram	1726	1735	Memcached
O	1735	1736	.

O	1737	1739	It
O	1740	1741	'
O	1742	1743	s
O	1744	1748	much
O	1749	1755	faster
O	1755	1756	.

O	1757	1759	If
O	1760	1764	your
O	1765	1769	site
O	1770	1773	has
O	1774	1775	a
O	1776	1786	spike-load
O	1787	1791	that
O	1792	1798	brings
O	1799	1801	it
O	1802	1804	to
O	1805	1809	zero
O	1810	1816	memory
O	1816	1817	,
O	1818	1822	then
O	1822	1823	,
O	1824	1826	if
O	1827	1830	you
O	1831	1834	can
O	1834	1835	,
O	1836	1844	consider
O	1845	1854	launching
O	1855	1860	extra
O	1861	1870	instances
O	1871	1873	of
O	1874	1877	the
O	1878	1884	server
O	1885	1888	and
O	1889	1894	doing
O	1895	1896	a
O	1897	1901	sort
O	1902	1904	of
O	1905	1916	round-robin
O	1917	1918	(
O	1918	1920	if
O	1921	1924	the
O	1925	1928	VPS
O	1929	1931	is
O	1932	1944	cloud-hosted
O	1945	1948	and
O	1949	1953	this
O	1954	1956	is
O	1957	1965	possible
O	1965	1966	)
O	1966	1967	.

O	1968	1970	If
O	1971	1974	the
O	1975	1979	load
O	1980	1982	is
O	1983	1991	constant
O	1991	1992	,
O	1993	1997	then
O	1998	2008	definitely
O	2009	2016	upgrade
O	2016	2017	.

O	2018	2025	@burzum
O	2026	2028	is
O	2029	2039	completely
O	2040	2045	right
O	2045	2046	,
O	2047	2054	however
O	2054	2055	,
O	2056	2060	that
O	2061	2064	you
O	2065	2071	should
O	2072	2076	just
O	2077	2083	switch
O	2084	2086	to
B-Fram	2087	2092	nginx
O	2092	2093	.

O	2094	2096	It
O	2097	2098	'
O	2099	2100	s
O	2101	2104	far
O	2104	2105	,
O	2106	2109	far
O	2110	2116	better
O	2117	2121	than
O	2122	2128	Apache
O	2129	2131	at
O	2132	2136	this
O	2137	2142	point
O	2142	2143	.

O	2144	2147	But
O	2147	2148	,
O	2149	2153	just
O	2154	2156	to
O	2157	2160	put
O	2161	2164	you
O	2165	2167	on
O	2168	2171	the
O	2172	2177	right
O	2178	2183	track
O	2183	2184	,
O	2185	2190	quite
O	2191	2192	a
O	2193	2196	few
O	2197	2203	people
O	2204	2207	run
B-Fram	2208	2213	nginx
O	2214	2216	as
O	2217	2218	a
O	2219	2226	reverse
O	2227	2232	proxy
O	2233	2235	in
O	2236	2241	front
O	2242	2244	of
O	2245	2251	Apache
O	2251	2252	,
O	2253	2256	and
O	2257	2262	while
O	2263	2267	that
O	2268	2272	does
O	2273	2278	speed
O	2279	2281	up
O	2282	2285	the
O	2286	2292	server
O	2292	2293	,
O	2294	2296	it
O	2297	2298	'
O	2299	2300	s
O	2301	2309	entirely
O	2310	2321	unnecessary
O	2322	2329	because
B-Fram	2330	2335	nginx
O	2336	2339	can
O	2340	2342	do
O	2343	2349	pretty
O	2350	2354	much
O	2355	2363	anything
O	2364	2367	you
O	2368	2372	need
O	2373	2375	it
O	2376	2378	to
O	2379	2381	do
O	2382	2389	without
O	2390	2396	Apache
O	2396	2397	.

O	2398	2403	Don't
O	2404	2410	bother
O	2411	2416	using
B-Fram	2417	2424	Varnish
O	2425	2427	in
O	2428	2433	front
O	2434	2436	of
B-Fram	2437	2442	nginx
O	2443	2449	either
O	2450	2457	because
B-Fram	2458	2463	nginx
O	2464	2467	can
O	2468	2471	act
O	2472	2474	as
O	2475	2478	its
O	2479	2482	own
O	2483	2490	reverse
O	2491	2496	proxy
O	2496	2497	.

O	2498	2502	Your
O	2503	2507	best
O	2508	2511	bet
O	2512	2514	is
O	2515	2517	to
O	2518	2527	implement
B-Fram	2528	2533	nginx
O	2534	2538	with
O	2539	2543	apcu
O	2544	2545	(
O	2545	2552	upgrade
B-PL	2553	2556	php
O	2557	2559	to
O	2560	2563	5.5
O	2564	2566	if
O	2567	2575	possible
O	2576	2579	for
O	2580	2586	better
O	2587	2598	performance
O	2598	2599	)
O	2600	2603	and
O	2604	2607	use
B-Fram	2608	2617	memcached
O	2617	2618	,
O	2619	2622	and
O	2623	2632	implement
B-Fram	2633	2638	nginx
O	2639	2640	'
O	2641	2642	s
O	2643	2649	native
O	2650	2662	microcaching
O	2663	2672	abilities
O	2672	2673	.

O	2674	2676	If
O	2677	2681	your
O	2682	2686	site
O	2687	2689	is
O	2690	2695	heavy
O	2696	2698	on
O	2699	2703	read
O	2704	2707	and
O	2708	2713	light
O	2714	2716	on
O	2717	2722	write
O	2722	2723	,
O	2724	2728	then
O	2729	2732	you
O	2733	2738	might
O	2739	2745	notice
O	2746	2750	that
O	2751	2761	everything
O	2762	2764	is
O	2765	2770	taken
O	2771	2775	care
O	2776	2778	of
O	2779	2781	by
B-Fram	2782	2787	nginx
O	2788	2792	just
O	2793	2803	retrieving
O	2804	2805	a
O	2806	2812	cached
O	2813	2817	copy
O	2818	2822	from
B-Fram	2823	2831	memcache
O	2831	2832	.

O	2833	2838	While
O	2839	2843	this
O	2844	2849	helps
O	2850	2854	with
O	2855	2861	memory
O	2861	2862	,
O	2863	2865	it
O	2866	2870	also
O	2871	2876	helps
O	2877	2881	with
O	2882	2892	processing
O	2892	2893	.

O	2894	2896	My
O	2897	2904	servers
O	2905	2906	'
O	2907	2911	CPUs
O	2912	2919	usually
O	2920	2924	have
O	2925	2926	a
O	2927	2930	3-5
O	2931	2932	%
O	2933	2938	usage
O	2939	2945	during
O	2946	2951	peaks
O	2951	2952	.
