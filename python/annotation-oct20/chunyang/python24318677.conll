Drawing	O
a	O
custom	O
diagram	O
in	O
python	B-PL

I	O
wanna	O
draw	O
something	O
like	O
this	O
:	O

The	O
closest	O
thing	O
to	O
this	O
I	O
could	O
find	O
was	O
NetworkX	O
Edge	O
Colormap	O
:	O

http://networkx.github.io/documentation/latest/examples/drawing/edge_colormap.html	O

and	O
here	O
is	O
the	O
source	O
code	O
:	O
@codeSnippetRemoved	O

After	O
playing	O
around	O
with	O
their	O
source	O
code	O
,	O
I	O
can't	O
figure	O
out	O
how	O
to	O
hardcode	O
distance	O
of	O
the	O
edge	O
circles	O
from	O
the	O
centre	O
.	O

Right	O
now	O
its	O
random	O
.	O

Also	O
how	O
do	O
I	O
label	O
the	O
edge	O
circles	O
and	O
their	O
distance	O
from	O
the	O
centre	O
?	O

I	O
know	O
for	O
position	O
comes	O
from	O
pos=	O
nx.spring_layout	O
(	O
G	O
)	O
.	O

So	O
I	O
looked	O
at	O
the	O
spring_layout	O
attribute	O
and	O
found	O
that	O
position	O
can	O
be	O
specified	O
by	O
using	O
a	O
pos	O
variable	O
which	O
is	O
a	O
dictionary	O
with	O
nodes	O
as	O
keys	O
and	O
values	O
as	O
a	O
list	O
.	O

(	O
https://networkx.github.io/documentation/latest/reference/generated/networkx.drawing.layout.spring_layout.html	O
)	O

But	O
even	O
when	O
I	O
do	O
the	O
following	O
result	O
is	O
random	O
edges	O
:	O
@codeSnippetRemoved	O

I'm	O
trying	O
to	O
be	O
as	O
helpful	O
as	O
I	O
can	O
.	O

I	O
wouldn't	O
try	O
to	O
keep	O
them	O
static	O
.	O

You'll	O
want	O
to	O
add	O
and	O
remove	O
things	O
,	O
and	O
the	O
algorithm	O
'	O
s	O
automatic	O
placement	O
is	O
something	O
you	O
don't	O
want	O
to	O
lose	O
.	O

According	O
to	O
the	O
docs	O
,	O
you	O
should	O
probably	O
tweak	O
k	O
.	O

It	O
looks	O
like	O
n	O
is	O
20	O
,	O
so	O
multiply	O
k	O
times	O
some	O
factor	O
to	O
increase	O
the	O
distance	O
.	O

@codeSnippetRemoved	O

should	O
maybe	O
be	O
this	O
:	O
@codeSnippetRemoved	O

You	O
can	O
set	O
the	O
node	O
positions	O
explicitly	O
with	O
the	O
pos	O
dictionary.For	B-API
example	O
@codeSnippetRemoved	O
