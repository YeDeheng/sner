Hide	O
private	O
keys	O
etc	O
from	O
administrators	O

Currently	O
I	O
take	O
part	O
in	O
developing	O
a	O
system	O
based	O
on	O
Java	B-PL
EE	O
(	O
WebLogic	B-API
server	O
,	O
to	O
be	O
more	O
precise	O
)	O
and	O
I	O
am	O
wondering	O
how	O
to	O
protect	O
some	O
private	O
data	O
from	O
administrators	O
.	O

For	O
example	O
,	O
some	O
parts	O
of	O
a	O
system	O
stores	O
credentials	O
for	O
legacy	O
systems	O
in	O
a	O
deployment	O
descriptors	O
as	O
plain	O
text	O
and	O
this	O
is	O
bad	O
because	O
a	O
deployer	O
can	O
read	O
application	O
configuration	O
file	O
(	O
ejb-jar.xml	O
,	O
for	O
example	O
)	O
and	O
steal	O
username	O
and	O
password	O
for	O
powerfull	O
account	O
.	O

I	O
want	O
to	O
close	O
this	O
security	O
hole	O
,	O
but	O
don't	O
know	O
how	O
.	O

Now	O
I	O
am	O
interested	O
in	O
protecting	O
this	O
kind	O
of	O
data	O
:	O

Login	O
Password	O
Private	O
key	O
for	O
symmetric	O
encryption	O

From	O
here	O
I've	O
discovered	O
that	O
I	O
can	O
use	O
a	O
JCEKS	O
keystore	O
to	O
protect	O
this	O
type	O
of	O
information	O
,	O
but	O
I	O
can	O
not	O
understand	O
how	O
to	O
use	O
it	O
.	O

My	O
application	O
still	O
should	O
contain	O
the	O
kestore	O
password	O
and	O
the	O
key	O
password	O
to	O
access	O
it	O
.	O

So	O
,	O
a	O
depoyer	O
can	O
steal	O
passwords	O
for	O
keystores	O
and	O
keys	O
,	O
find	O
my	O
secure	O
storage	O
and	O
steal	O
credetials	O
.	O

Obviously	O
,	O
I	O
can	O
revoke	O
read	O
privileges	O
from	O
the	O
deployer	O
account	O
,	O
but	O
then	O
he	O
can	O
decompile	O
my	O
appliaction	O
and	O
develop	O
his	O
own	O
similar	O
app	O
(	O
or	O
edit	O
my	O
one	O
)	O
,	O
that	O
simply	O
prints	O
secure	O
data	O
to	O
some	O
file	O
or	O
send	O
it	O
by	O
email	O
...	O

And	O
now	O
I	O
am	O
stuck	O
...	O

Can	O
anybody	O
give	O
me	O
some	O
links	O
that	O
can	O
explain	O
how	O
to	O
protect	O
a	O
system	O
from	O
administrators	O
?	O

Weblogic	O
related	O
links	O
will	O
be	O
preferable	O
.	O

I	O
totally	O
understand	O
that	O
it	O
is	O
not	O
possible	O
to	O
protect	O
from	O
all	O
administrators	O
and	O
there	O
should	O
be	O
some	O
security	O
administrator	O
that	O
will	O
be	O
responsible	O
for	O
keystore	O
management	O
and	O
so	O
forth	O
,	O
but	O
I	O
want	O
to	O
secure	O
all	O
sensitive	O
data	O
from	O
everybody	O
else	O
.	O

RESULTS	O

Both	O
jtahlborn	O
'	O
s	O
and	O
slim	O
'	O
s	O
answers	O
are	O
correct	O
,	O
but	O
slims	O
'	O
s	O
answer	O
in	O
more	O
interesting	O
.	O

I	O
think	O
that	O
in	O
my	O
case	O
it	O
will	O
be	O
appropriate	O
to	O
accept	O
only	O
signed	O
applications	O
for	O
installation	O
on	O
the	O
server	O
.	O

This	O
decidion	O
can	O
solve	O
problem	O
with	O
applicatoin	O
modifications	O
done	O
by	O
a	O
administrator	O
.	O

Administrators	O
will	O
have	O
password	O
from	O
keystore	O
and	O
all	O
keys	O
,	O
but	O
they	O
will	O
not	O
have	O
access	O
to	O
keystore	O
file	O
at	O
all	O
.	O

Access	O
to	O
keystore	O
file	O
will	O
have	O
only	O
special	O
security	O
administrators	O
(	O
'	O
rw	O
')	O
and	O
server	O
(	O
'	O
r	B-PL
')	O
.	O

So	O
,	O
everybody	O
will	O
have	O
the	O
key	O
,	O
but	O
nobody	O
(	O
except	O
security	O
administrators	O
)	O
will	O
have	O
access	O
to	O
the	O
box	O
.	O

There	O
is	O
no	O
solution	O
to	O
this	O
problem	O
unless	O
you	O
enter	O
login	O
credentials	O
at	O
application	O
startup	O
(	O
assuming	O
the	O
admin	O
cannot	O
access	O
the	O
application	O
memory	O
,	O
which	O
may	O
not	O
be	O
a	O
safe	O
assumption	O
)	O
.	O
any	O
solution	O
which	O
involves	O
the	O
keys	O
sitting	O
in	O
the	O
same	O
place	O
as	O
the	O
application	O
will	O
result	O
in	O
an	O
administrator	O
(	O
with	O
application	O
filesystem	O
access	O
)	O
being	O
able	O
to	O
access	O
any	O
sensitive	O
data	O
accessible	O
by	O
the	O
application	O
.	O
this	O
is	O
similar	O
to	O
the	O
DRM	O
problem	O
(	O
you	O
can't	O
give	O
someone	O
a	O
locked	O
box	O
and	O
the	O
keys	O
and	O
expect	O
that	O
they	O
can't	O
open	O
the	O
box	O
)	O
.	O

I	O
think	O
the	O
meat	O
of	O
this	O
question	O
is	O
in	O
the	O
definition	O
of	O
"	O
admin	O
"	O
.	O

You've	O
said	O
that	O
you're	O
comfortable	O
with	O
a	O
"	O
security	O
admin	O
"	O
who	O
does	O
have	O
access	O
to	O
key	O
stores	O
.	O

Traditionally	O
,	O
UNIX	O
types	O
think	O
of	O
"	O
admin	O
"	O
as	O
being	O
the	O
"	O
root	O
"	O
user	O
-	O
someone	O
with	O
access	O
to	O
everything	O
on	O
the	O
machine	O
.	O

Root	O
can	O
do	O
literally	O
anything	O
,	O
right	O
down	O
to	O
peeking	O
and	O
poking	O
at	O
application	O
memory	O
,	O
or	O
reading	O
/	O
writing	O
to	O
raw	O
disk	O
addresses	O
.	O

If	O
the	O
server	O
can	O
get	O
a	O
private	O
key	O
,	O
so	O
can	O
root	O
.	O

If	O
you	O
want	O
to	O
define	O
an	O
"	O
admin	O
"	O
role	O
with	O
more	O
limited	O
access	O
,	O
then	O
yes	O
,	O
you	O
could	O
set	O
up	O
something	O
where	O
such	O
users	O
existed	O
.	O

They	O
would	O
need	O
to	O
have	O
fewer	O
privileges	O
than	O
the	O
server	O
application	O
itself	O
,	O
since	O
there	O
is	O
at	O
least	O
one	O
thing	O
the	O
app	O
can	O
do	O
(	O
get	O
a	O
private	O
key	O
)	O
that	O
the	O
"	O
admin	O
"	O
cannot	O
.	O

Such	O
a	O
user	O
probably	O
wouldn't	O
be	O
able	O
to	O
install	O
the	O
app	O
either	O
(	O
since	O
,	O
if	O
they	O
could	O
,	O
they	O
could	O
create	O
and	O
install	O
a	O
version	O
of	O
the	O
app	O
which	O
exposes	O
the	O
private	O
key	O
)	O
.	O

Your	O
"	O
admin	O
"	O
couldn't	O
therefore	O
deploy	O
the	O
component	O
that	O
works	O
with	O
the	O
private	O
key	O
.	O

They	O
could	O
,	O
however	O
,	O
potentially	O
deploy	O
a	O
module	O
that	O
runs	O
within	O
that	O
container	O
(	O
as	O
long	O
as	O
the	O
container	O
cannot	O
supply	O
the	O
private	O
key	O
to	O
the	O
module	O
)	O
.	O

However	O
,	O
it	O
'	O
s	O
not	O
just	O
the	O
key	O
you	O
want	O
to	O
protect	O
.	O

The	O
real	O
"	O
secret	O
"	O
is	O
the	O
data	O
encrypted	O
using	O
the	O
key	O
.	O

So	O
we	O
still	O
have	O
a	O
problem	O
with	O
the	O
approach	O
above	O
.	O

If	O
the	O
module	O
can	O
read	O
the	O
encrypted	O
data	O
,	O
then	O
so	O
can	O
an	O
"	O
admin	O
"	O
with	O
the	O
same	O
privileges	O
as	O
the	O
module	O
.	O

And	O
that	O
includes	O
anyone	O
who	O
can	O
install	O
the	O
module	O
.	O

You	O
could	O
investigate	O
ways	O
to	O
sign	O
the	O
module	O
,	O
so	O
that	O
an	O
"	O
admin	O
"	O
could	O
not	O
create	O
their	O
own	O
version	O
.	O

There	O
comes	O
a	O
point	O
,	O
though	O
,	O
where	O
the	O
measures	O
required	O
to	O
enable	O
untrustworthy	O
admins	O
,	O
become	O
more	O
expensive	O
(	O
in	O
terms	O
of	O
time	O
and	O
effort	O
)	O
than	O
simply	O
using	O
trustworthy	O
admins	O
.	O

So	O
,	O
you	O
need	O
to	O
make	O
a	O
list	O
of	O
things	O
your	O
so	O
called	O
"	O
admin	O
"	O
can	O
do	O
.	O

Depending	O
on	O
what	O
those	O
things	O
are	O
,	O
it	O
may	O
well	O
be	O
possible	O
to	O
allow	O
a	O
non-root	O
user	O
to	O
do	O
those	O
things	O
.	O

On	O
UNIX	O
,	O
you	O
might	O
use	O
a	O
tool	O
like	O
sudo	O
to	O
allow	O
a	O
non-root	O
user	O
to	O
do	O
things	O
like	O
start	O
/	O
stop	O
the	O
server	O
,	O
read	O
logs	O
,	O
clean	O
logs	O
,	O
etc	O
.	O

It	O
might	O
be	O
possible	O
to	O
separate	O
the	O
authentication	O
from	O
the	O
rest	B-Stan
of	O
the	O
application	O
.	O

For	O
example	O
,	O
if	O
you	O
communicate	O
with	O
the	O
legacy	O
systems	O
via	O
a	O
TLS-secured	O
socket	O
,	O
you	O
could	O
write	O
a	O
small	O
separate	O
application	O
that	O
accepts	O
unencrypted	O
connections	O
from	O
the	O
application	O
,	O
then	O
makes	O
a	O
secure	O
,	O
authenticated	O
,	O
connection	O
to	O
the	O
legacy	O
system	O
,	O
and	O
pumps	O
data	O
between	O
the	O
application	O
and	O
the	O
legacy	O
system	O
.	O

Essentially	O
,	O
it	O
'	O
s	O
an	O
authenticating	O
proxy	O
.	O

Then	O
,	O
the	O
application	O
wouldn't	O
need	O
these	O
keys	O
.	O

You	O
could	O
install	O
and	O
operate	O
the	O
application	O
as	O
a	O
user	O
who	O
didn't	O
have	O
permission	O
to	O
read	O
the	O
files	O
containing	O
the	O
key	O
,	O
but	O
the	O
application	O
could	O
still	O
communicate	O
with	O
the	O
legacy	O
systems	O
.	O

Of	O
course	O
,	O
now	O
you	O
have	O
the	O
problem	O
of	O
how	O
to	O
authenticate	O
the	O
application	O
to	O
the	O
proxy	O
.	O

You	O
might	O
feel	O
that	O
the	O
machine	O
is	O
secure	O
enough	O
that	O
you	O
don't	O
need	O
to	O
do	O
that	O
at	O
all	O
-	O
as	O
long	O
as	O
the	O
proxy	O
only	O
listens	O
on	O
the	O
loopback	O
interface	O
.	O

If	O
not	O
,	O
if	O
you	O
could	O
use	O
a	O
unix	O
domain	O
socket	O
instead	O
,	O
then	O
you	O
could	O
control	O
access	O
using	O
filesystem	O
permissions	O
:	O
you	O
could	O
run	O
the	O
application	O
as	O
some	O
user	O
in	O
some	O
particular	O
group	O
,	O
then	O
restrict	O
access	O
to	O
the	O
socket	O
to	O
members	O
of	O
that	O
group	O
.	O

Java	B-PL
doesn't	O
have	O
unix	O
domain	O
socket	O
support	O
in	O
the	O
standard	O
library	O
,	O
but	O
you	O
can	O
add	O
it	O
with	O
junixsocket	O
or	O
JUDS	O
.	O
