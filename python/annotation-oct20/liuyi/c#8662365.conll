.Skip()	O
.Take()	O
on	O
Entity	O
Framework	O
Navigation	O
Properties	O
is	O
executing	O
SELECT	O
*	O
on	O
my	O
SQL	B-PL
Server	O

I	O
have	O
a	O
method	O
on	O
my	O
generated	O
partial	O
class	O
like	O
this	O
:	O
@codeSnippetRemoved	O

When	O
I	O
look	O
at	O
my	O
SQL	B-PL
Server	O
,	O
I	O
can	O
see	O
the	O
generated	O
code	O
is	O
doing	O
a	O
SELECT	O
*	O
.	O

*	O
FROM	O
Children	O
This	O
code	O
is	O
taken	O
directly	O
from	O
my	O
class	O
,	O
I	O
have	O
verified	O
that	O
the	O
order	O
of	O
my	O
Skip	O
/	O
Take	O
is	O
BEFORE	O
my	O
.ToList	O
.	O

If	O
I	O
remove	O
the	O
.ToList	O
,	O
that	O
line	O
is	O
fast	O
(	O
and	O
no	O
SQL	B-PL
is	O
sent	O
to	O
my	O
DB	O
)	O
,	O
but	O
the	O
moment	O
I	O
try	O
to	O
foreach	O
over	O
the	O
results	O
,	O
I	O
get	O
the	O
same	O
SQL	B-PL
sent	O
to	O
my	O
DB	O
:	O
SELECT	O
*	O
.	O

*	O
FROM	O
Children	O
.	O

Is	O
there	O
something	O
special	O
I	O
need	O
to	O
do	O
when	O
using	O
.Skip	O
and	O
.Take	O
on	O
the	O
navigation	O
properties	O
of	O
my	O
entities	O
?	O

update	O

I'll	O
try	O
to	O
get	O
the	O
actual	O
SQL	B-PL
generated	O
,	O
I'm	O
not	O
currently	O
setup	O
for	O
that	O
.	O

I	O
found	O
the	O
first	O
one	O
because	O
it	O
shows	O
up	O
in	O
SSMS	O
'	O
s	O
"	O
recenty	O
expensive	O
queries	O
"	O
list	O
.	O

Running	O
this	O
:	O
@codeSnippetRemoved	O

returns	O
~	O
4,000,000	O
rows	O
and	O
takes	O
~25	O
seconds	O
.	O

Running	O
this	O
:	O
@codeSnippetRemoved	O

returns	O
~	O
4,000,000	O
rows	O
and	O
takes	O
~25	O
seconds	O
.	O

As	O
I	O
said	O
,	O
I'll	O
grab	O
the	O
SQL	B-PL
generated	O
for	O
these	O
and	O
pose	O
them	O
up	O
as	O
well	O
.	O

Does	O
it	O
help	O
if	O
you	O
call	O
Skip	O
on	O
the	O
result	O
of	O
Take	O
?	O

i.e.	O
@codeSnippetRemoved	O

Also	O
,	O
see	O

TOP	O
/	O
LIMIT	O
Support	O
for	O
LINQ	B-Fram
?	O

The	O
problem	O
is	O
that	O
you	O
are	O
performing	O
a	O
LINQ-to-Object	O
query	O
when	O
you	O
query	O
a	O
child	O
collection	O
like	O
that	O
.	O

EF	O
will	O
load	O
the	O
whole	O
collection	O
and	O
perform	O
the	O
query	O
in	O
memory	O
.	O

If	O
you	O
are	O
using	O
EF	O
4	O
you	O
can	O
query	O
like	O
this	O
@codeSnippetRemoved	O

In	O
EF	O
4.1	O
@codeSnippetRemoved	O
