Google	B-Orgs
Guava	O
TreeMultimap	B-API
--	O
retrieve	O
values	O
based	O
on	O
sorted	O
ordering	O
?	O

So	O
I'm	O
trying	O
to	O
implement	O
something	O
that	O
requires	O
sorting	O
of	O
values	O
of	O
a	O
Quantity	O
>	O
map	O
,	O
such	O
as	O
:	O
@codeSnippetRemoved	O

The	O
values	O
are	O
not	O
necessarily	O
distinct	O
.	O

I	O
want	O
to	O
be	O
able	O
to	O
retrieve	O
the	O
k	O
/	O
v	O
pair	O
with	O
the	O
largest	O
and	O
smallest	O
value	O
,	O
similar	O
to	O
what	O
a	O
TreeMap	B-API
is	O
able	O
to	O
do	O
with	O
keys	O
.	O

I	O
found	O
Google	B-Orgs
Guava	O
'	O
s	O
TreeMultimap	B-API
,	O
which	O
is	O
an	O
implementation	O
of	O
Multimap	O
whose	O
keys	O
and	O
values	O
are	O
ordered	O
by	O
their	O
natural	O
ordering	O
or	O
by	O
supplied	O
comparators	O
.	O

The	O
thing	O
is	O
,	O
TreeMultiMap	B-API
doesn't	O
seem	O
to	O
have	O
any	O
methods	O
that	O
let	O
me	O
retrieve	O
k	O
/	O
v	O
pairs	O
based	O
on	O
the	O
ordering	O
of	O
the	O
keys	O
or	O
values	O
,	O
(	O
like	O
what	O
pollFirstEntry()	B-API
,	O
for	O
instance	O
,	O
does	O
in	O
TreeMap	B-API
)	O
.	O

To	O
this	O
extent	O
,	O
I'm	O
a	O
little	O
confused	O
on	O
how	O
to	O
make	O
a	O
TreeMultimap	B-API
object	O
obtain	O
this	O
functionality	O
.	O

I	O
feel	O
like	O
it	O
should	O
work	O
,	O
maybe	O
it	O
'	O
s	O
just	O
a	O
matter	O
of	O
how	O
I	O
instantiate	O
the	O
object	O
?	O

Thanks	O
,	O
any	O
help	O
would	O
be	O
appreciated	O
.	O

TreeMultimap	B-API
isn't	O
going	O
to	O
support	O
this	O
in	O
quite	O
the	O
way	O
you're	O
looking	O
for	O
,	O
I'm	O
fairly	O
certain	O
.	O

What	O
you	O
could	O
do	O
is	O
a	O
TreeMultimap	B-API
Integer	O
,	O
String	O
--	O
swapping	O
the	O
role	O
of	O
the	O
keys	O
and	O
the	O
values	O
--	O
and	O
then	O
TreeMultimap.asMap()	B-API
.lastEntry()	O
would	O
get	O
you	O
a	O
Map.Entry	B-API
Integer	O
,	O
Collection	O
String	O
,	O
corresponding	O
to	O
the	O
greatest	O
Integer	O
and	O
all	O
the	O
String	O
s	O
associated	O
with	O
it	O
.	O

The	O
one	O
thing	O
definitely	O
not	O
supported	O
by	O
TreeMultimap	B-API
is	O
looking	O
at	O
the	O
combined	O
values	O
for	O
all	O
keys	O
as	O
a	O
single	O
sorted	O
collection	O
.	O

(	O
You	O
can	O
look	O
at	O
them	O
as	O
an	O
unsorted	O
collection	O
with	O
values()	B-API
,	O
of	O
course	O
.	O
)	O

It	O
'	O
s	O
true	O
that	O
TreeMultimap	B-API
does	O
order	O
values	O
according	O
to	O
a	O
value	O
comparator	O
,	O
but	O
that	O
ordering	O
is	O
only	O
relevant	O
in	O
relation	O
to	O
other	O
values	O
mapped	O
to	O
the	O
same	O
key	O
.	O

So	O
,	O
for	O
example	O
,	O
if	O
you	O
had	O
@codeSnippetRemoved	O

And	O
you	O
iterated	O
through	O
the	O
entries()	B-API
,	O
you	O
should	O
get	O
[	O
(	O
a	O
,	O
1	O
)	O
,	O
(	O
a	O
,	O
3	O
)	O
,	O
(	O
b	O
,	O
2	O
)	O
,	O
(	O
b	O
,	O
4	O
)	O
]	O
.	O

Similarly	O
if	O
you	O
iterated	O
through	O
the	O
values()	B-API
,	O
you	O
should	O
get	O
[	O
1	O
,	O
3	O
,	O
2	O
,	O
4	O
]	O
as	O
it	O
returns	O
the	O
values	O
of	O
a	O
in	O
order	O
,	O
then	O
the	O
values	O
of	O
b	O
in	O
order	O
.	O

Getting	O
the	O
first	O
or	O
last	O
key	O
is	O
simple	O
though	O
,	O
as	O
keySet()	B-API
returns	O
a	O
NavigableSet	B-API
,	O
meaning	O
you	O
can	O
call	O
first()	B-API
and	O
last()	B-API
on	O
it	O
.	O
