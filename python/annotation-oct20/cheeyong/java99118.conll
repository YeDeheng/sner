Would	O
Automatic	O
Casts	O
be	O
useful	O
?	O

Is	O
there	O
any	O
downside	O
or	O
problem	O
potential	O
to	O
change	O
the	O
Java	B-PL
compiler	O
to	O
automatically	O
cast	O
?	O

In	O
the	O
example	O
below	O
the	O
result	O
of	O
list.get	B-API
(	O
0	O
)	O
would	O
automatically	O
be	O
casted	O
to	O
the	O
type	O
of	O
the	O
variable	O
hi	O
.	O

@codeSnippetRemoved	O

I	O
know	O
that	O
generics	O
allow	O
you	O
to	O
reduce	O
casting	O
but	O
they	O
do	O
so	O
at	O
the	O
expense	O
of	O
making	O
declaration	O
more	O
difficult	O
.	O

To	O
me	O
,	O
the	O
benefit	O
of	O
generics	O
is	O
that	O
they	O
allow	O
you	O
to	O
have	O
the	O
complier	O
enforce	O
more	O
rules	O
--	O
not	O
they	O
they	O
reduce	O
casting	O
(	O
but	O
I	O
haven't	O
used	O
them	O
much	O
so	O
I	O
am	O
somewhat	O
uninformed	O
)	O
.	O

This	O
proposal	O
would	O
only	O
reduce	O
the	O
amount	O
of	O
code	O
to	O
type	O
,	O
not	O
move	O
it	O
to	O
another	O
place.Also	B-API
there	O
are	O
instances	O
where	O
generics	O
can't	O
be	O
used	O
because	O
a	O
collection	O
can	O
have	O
different	O
objectis.If	B-API
that	O
"	O
looks	O
too	O
surprising	O
"	O
based	O
on	O
current	O
usage	O
maybe	O
there	O
could	O
be	O
a	O
syntax	O
tweak	O
to	O
use	O
it	O
.	O

From	O
:	O
http://jamesjava.blogspot.com/2007/01/automatic-casting.html	O

Casting	O
is	O
an	O
explicit	O
instruction	O
to	O
the	O
Java	B-PL
compiler	O
to	O
ignore	O
type	O
safety	O
so	O
allowing	O
automatic	O
casts	O
would	O
remove	O
one	O
of	O
the	O
features	O
purposely	O
designed	O
into	O
the	O
language	O
.	O

I	O
personally	O
like	O
compiler	O
warnings	O
and	O
errors	O
,	O
since	O
it	O
'	O
s	O
much	O
harder	O
to	O
find	O
this	O
type	O
of	O
problem	O
at	O
run	O
time	O
(	O
assuming	O
the	O
compiler	O
somehow	O
managed	O
to	O
force	O
one	O
object	O
type	O
to	O
another	O
)	O
.	O

I	O
would	O
avoid	O
it	O
,	O
because	O
I	O
have	O
a	O
feeling	O
it	O
will	O
come	O
back	O
and	O
bite	O
you	O
later	O
on	O
.	O

Generics	O
are	O
worth	O
the	O
hassle	O
,	O
in	O
my	O
opinion	O
,	O
because	O
they	O
save	O
lots	O
of	O
headache	O
down	O
the	O
road	O
.	O

Also	O
,	O
it	O
'	O
s	O
not	O
too	O
hard	O
to	O
use	O
a	O
"	O
container	O
"	O
object	O
for	O
collections	O
that	O
hold	O
different	O
object	O
types	O
.	O

Seems	O
to	O
me	O
like	O
having	O
type	O
checks	O
is	O
a	O
good	O
thing	O
.	O

An	O
automatic	O
cast	O
would	O
remove	O
a	O
potentially	O
useful	O
compile-time	O
error	O
.	O

If	O
you	O
worry	O
about	O
the	O
number	O
of	O
keystrokes	O
,	O
you	O
could	O
use	O
an	O
IDE	O
like	O
Eclipse	B-Fram
,	O
were	O
the	O
type	O
cast	O
can	O
be	O
inserted	O
with	O
a	O
double-click	O
.	O

Yes	O
,	O
it	O
would	O
move	O
errors	O
which	O
are	O
currently	O
found	O
at	O
compile	O
time	O
to	O
being	O
found	O
at	O
runtime	O
.	O

While	O
this	O
is	O
not	O
considered	O
to	O
be	O
a	O
huge	O
drawback	O
by	O
some	O
,	O
those	O
people	O
are	O
using	O
Python	B-PL
,	O
Ruby	B-PL
or	O
Perl	O
and	O
not	O
Java	B-PL
;-)	O
.	O

The	O
biggest	O
benefit	O
of	O
using	O
generics	O
in	O
your	O
example	O
is	O
that	O
it	O
changes	O
what	O
would	O
be	O
a	O
run	O
time	O
error	O
into	O
a	O
compile	O
time	O
error	O
.	O

@codeSnippetRemoved	O

Because	O
run	O
time	O
errors	O
are	O
seen	O
by	O
users	O
and	O
compile	O
time	O
errors	O
are	O
seen	O
by	O
programmers	O
,	O
compile	O
time	O
errors	O
are	O
much	O
,	O
much	O
better	O
.	O

To	O
answer	O
your	O
question	O
,	O
there	O
would	O
not	O
be	O
any	O
drastic	O
failures	O
if	O
casts	O
were	O
automatically	O
made	O
(	O
and	O
a	O
ClassCastException	B-API
was	O
still	O
thrown	O
at	O
runtime	O
in	O
your	O
example	O
)	O
.	O

The	O
benefit	O
of	O
requiring	O
an	O
explicit	O
cast	O
is	O
that	O
it	O
requires	O
the	O
coder	O
to	O
think	O
about	O
what	O
he	O
'	O
s	O
doing	O
,	O
and	O
to	O
realize	O
that	O
a	O
cast	O
is	O
taking	O
place	O
.	O

Also	O
there	O
are	O
instances	O
where	O
generics	O
can't	O
be	O
used	O
because	O
a	O
collection	O
can	O
have	O
different	O
object	O

You	O
can	O
still	O
add	O
different	O
objects	O
to	O
a	O
generic	O
collection	O
using	O
wildcards	O
.	O

As	O
others	O
have	O
said	O
,	O
automatic	O
type-casting	O
would	O
eliminate	O
type	O
safety	O
.	O

Generics	O
have	O
multiple	O
benefits	O
and	O
really	O
aren't	O
any	O
harder	O
to	O
declare	O
.	O

With	O
Eclipse	B-Fram
,	O
you	O
can	O
can	O
just	O
declare	O
the	O
generic	O
variable	O
and	O
then	O
use	O
auto-complete	O
on	O
the	O
instantiation	O
and	O
it	O
will	O
automatically	O
fill	O
in	O
the	O
type	O
you	O
used	O
.	O

Plus	O
you	O
(	O
or	O
perhaps	O
more	O
importantly	O
,	O
someone	O
else	O
)	O
have	O
the	O
advantage	O
of	O
actually	O
knowing	O
at	O
a	O
glance	O
exactly	O
what	O
the	O
list	O
or	O
whatever	O
contains	O
.	O
