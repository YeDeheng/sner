Programmatically	O
generating	O
Excel	O
workbook	O
with	O
pivots	O
and	O
charts	O

I	O
need	O
to	O
create	O
a	O
workbook	O
which	O
has	O
a	O
raw	O
data	O
on	O
a	O
sheet	O
and	O
a	O
pivot	O
table	O
on	O
another	O
sheet	O
.	O

The	O
pivot	O
is	O
created	O
from	O
the	O
raw	O
data	O
.	O

Then	O
I	O
need	O
to	O
create	O
a	O
chart	O
with	O
this	O
pivot	O
on	O
the	O
same	O
or	O
new	O
sheet	O
.	O

How	O
can	O
I	O
do	O
this	O
in	O
C#	B-PL
-	O
and	O
is	O
this	O
possible	O
using	O
VSTO	O
?	O

I've	O
done	O
something	O
similar	O
to	O
this	O
before	O
,	O
but	O
I	O
didn't	O
do	O
it	O
using	O
C#	B-PL
.	O

I	O
used	O
VBA	O
since	O
the	O
language	O
is	O
already	O
built	O
in	O
to	O
Excel	O
.	O

My	O
approach	O
was	O
this	O
:	O

Create	O
a	O
worksheet	O
called	O
"	O
RAW	O
DATA	O
.	O

"	O
This	O
worksheet	O
has	O
a	O
QueryTable	B-API
object	O
in	O
it	O
that	O
can	O
be	O
updated	O
via	O
code	O
in	O
VBA	O
.	O

I	O
manually	O
created	O
a	O
pivot	O
table	O
based	O
on	O
the	O
QueryTable	B-API
in	O
the	O
RAW	O
DATA	O
worksheet	O
.	O

I	O
then	O
added	O
code	O
in	O
VBA	O
so	O
that	O
after	O
RAW	O
DATA	O
was	O
updated	O
,	O
Pivot	O
Table	O
was	O
refreshed	O
with	O
the	O
new	O
data	O
.	O

This	O
method	O
works	O
really	O
well	O
if	O
the	O
layout	O
of	O
your	O
raw	O
data	O
and	O
your	O
pivot	O
table	O
stays	O
the	O
same	O
.	O

I	O
have	O
a	O
workbook	O
that	O
I	O
made	O
for	O
a	O
cowork	O
that	O
updates	O
multiple	O
sheets	O
with	O
pivot	O
tables	O
based	O
on	O
one	O
set	O
of	O
data	O
.	O

She	O
really	O
likes	O
it	O
because	O
just	O
by	O
clicking	O
one	O
button	O
,	O
she	O
has	O
a	O
refreshed	O
view	O
of	O
all	O
of	O
her	O
data	O
.	O

If	O
this	O
approach	O
works	O
for	O
you	O
and	O
you'd	O
like	O
more	O
details	O
as	O
to	O
how	O
to	O
implement	O
some	O
of	O
those	O
methods	O
,	O
let	O
me	O
know	O
more	O
details	O
of	O
your	O
situation	O
and	O
I	O
can	O
try	O
to	O
help	O
you	O
out	O
.	O

One	O
option	O
is	O
to	O
connect	O
to	O
database	O
from	O
Excel	O
and	O
refresh	O
the	O
"	O
Raw	O
data	O
"	O
sheet	O
,	O
via	O
VBA	O
or	O
defining	O
an	O
SQL	B-PL
query	O
in	O
Pivot	O
data	O
source	O
.	O

This	O
is	O
not	O
so	O
great	O
as	O
the	O
user	O
who	O
opens	O
the	O
file	O
must	O
be	O
able	O
to	O
connect	O
to	O
the	O
database	O
.	O

The	O
other	O
option	O
is	O
to	O
fill	O
the	O
"	O
Raw	O
data	O
"	O
sheet	O
programatically	O
via	O
C#	B-PL
.	O

There	O
are	O
numerous	O
libraries	O
that	O
can	O
help	O
you	O
with	O
that	O
,	O
even	O
some	O
free	O
ones	O
,	O
but	O
you	O
can	O
also	O
do	O
it	O
yourself	O
by	O
using	O
the	O
Excel	O
XML	B-Stan
format	O
(	O
SpreadsheetML	O
)	O
.	O

You	O
can	O
use	O
the	O
Excel	O
2003	O
XML	B-Stan
format	O
or	O
the	O
new	O
Open	O
XML	B-Stan
Excel	O
format	O
.	O

The	O
latter	O
is	O
far	O
more	O
complicated	O
,	O
but	O
with	O
it	O
you	O
can	O
also	O
take	O
advantage	O
of	O
the	O
OpenXML	O
SDK	O
and	O
the	O
Excel	O
Package	O
API	O
.	O

Easiest	O
way	O
to	O
do	O
it	O
?	O

Use	O
Open	O
XML	B-Stan
SDK	O
2.0	O

Build	O
a	O
pre-generated	O
version	O
of	O
the	O
workbook	O
with	O
raw	O
data	O
,	O
pivottable	O
and	O
pivotchart	O
already	O
created	O
.	O

Install	O
the	O
OpenXML	O
SDK	O
2.0	O
setup	O
package	O
Use	O
the	O
OpenXML	O
SDK	O
2.0	O
productivity	O
tool	O
from	O
this	O
install	O
to	O
open	O
the	O
workbook	O
Select	O
the	O
root	O
element	O
on	O
the	O
left	O
hand	O
pane	O
,	O
and	O
then	O
right	O
click	O
and	O
select	O
Reflect	O
Code	O
Done	O
-	O
on	O
the	O
left	O
pane	O
is	O
a	O
complete	O
C#	B-PL
class	O
with	O
the	O
necessary	O
code	O
to	O
generate	O
the	O
file	O
.	O

Well	O
not	O
quite	O
done	O
as	O
you	O
still	O
need	O
to	O
refactor	O
the	O
code	O
to	O
take	O
into	O
account	O
dynamically	O
adding	O
the	O
required	O
data	O
content	O
,	O
however	O
this	O
will	O
get	O
you	O
97%	O
of	O
the	O
way	O
if	O
you	O
already	O
know	O
C#	B-PL
fairly	O
well	O
.	O
