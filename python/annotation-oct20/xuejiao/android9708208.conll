Are	O
there	O
drawbacks	O
to	O
implementing	O
onClickListener	O
for	O
each	O
ListView	B-API
row	O
instead	O
of	O
onItemClickListener	O
?	O

It	O
would	O
be	O
more	O
convenient	O
for	O
me	O
to	O
register	O
a	O
unique	O
OnClickListener	B-API
for	O
each	O
row	O
in	O
the	O
ListView	B-API
,	O
but	O
I	O
want	O
to	O
be	O
sure	O
that	O
this	O
is	O
an	O
acceptable	O
practice	O
.	O

My	O
current	O
design	O
is	O
a	O
rather	O
convoluted	O
way	O
to	O
separate	O
the	O
concerns	O
of	O
the	O
OnClickListener	B-API
from	O
each	O
row	O
type	O
.	O

The	O
reason	O
for	O
this	O
is	O
that	O
I	O
have	O
multiple	O
classes	O
of	O
rows	O
in	O
the	O
ListView	B-API
.	O

Each	O
class	O
has	O
a	O
completely	O
different	O
responsibility	O
and	O
behavior	O
.	O

For	O
example	O
,	O
consider	O
a	O
ListView	B-API
that	O
can	O
contain	O
both	O
sub-categories	O
and	O
book	O
titles	O
.	O

If	O
a	O
book	O
title	O
is	O
clicked	O
,	O
a	O
new	O
activity	O
should	O
start	O
that	O
shows	O
the	O
cover	O
image	O
.	O

If	O
a	O
sub-category	O
is	O
clicked	O
,	O
a	O
new	O
list	O
of	O
books	O
and	O
categories	O
is	O
displayed	O
.	O

I'd	O
like	O
the	O
row	O
itself	O
to	O
maintain	O
knowledge	O
about	O
its	O
own	O
identity	O
and	O
responsibility	O
rather	O
than	O
having	O
to	O
leak	O
the	O
knowledge	O
about	O
each	O
row	O
to	O
be	O
maintained	O
by	O
the	O
implementer	O
of	O
onItemClickListener	O
.	O

I'd	O
also	O
like	O
to	O
know	O
what	O
the	O
performance	O
implications	O
are	O
of	O
doing	O
this	O
vs	O
.	O
implementing	O
my	O
own	O
logic	O
to	O
figure	O
out	O
how	O
to	O
handle	O
the	O
click	O
.	O

Are	O
there	O
drawbacks	O
to	O
implementing	O
onClickListener	O
for	O
each	O
ListView	B-API
ArrayAdapter	B-API
row	O
instead	O
of	O
onItemClickListener	O
?	O

I'm	O
looking	O
for	O
concrete	O
data	O
and	O
specific	O
drawbacks	O
rather	O
than	O
vague	O
recommendations	O
.	O

Should	O
I	O
expect	O
memory	O
use	O
,	O
initialization	O
time	O
,	O
or	O
steady-state	O
speed	O
(	O
like	O
scrolling	O
through	O
the	O
list	O
)	O
to	O
be	O
significantly	O
affected	O
?	O

You	O
don't	O
explain	O
why	O
you	O
would	O
need	O
separate	O
click	O
listeners	O
for	O
each	O
row	O
,	O
but	O
I	O
would	O
recommend	O
against	O
it	O
.	O

Take	O
a	O
look	O
at	O
using	O
View.setTag	B-API
(	O
Object	O
)	O
/	O
View.getTag()	B-API
to	O
pass	O
row-specific	O
custom	O
data	O
by	O
which	O
you	O
can	O
customize	O
the	O
response	O
of	O
a	O
(	O
shared	O
)	O
click	O
listener	O
.	O

EDIT	O

I	O
see	O
from	O
your	O
example	O
why	O
you	O
want	O
different	O
OnClickListener	B-API
s	O
attached	O
to	O
your	O
rows	O
.	O

I	O
was	O
under	O
the	O
impression	O
that	O
you	O
wanted	O
a	O
separate	O
OnClickListener	B-API
instance	O
for	O
each	O
row	O
.	O

(	O
That	O
was	O
my	O
main	O
reason	O
for	O
recommending	O
against	O
this	O
.	O
)	O
If	O
you	O
have	O
two	O
types	O
of	O
rows	O
(	O
categories	O
and	O
titles	O
)	O
and	O
hundreds	O
of	O
rows	O
,	O
you	O
need	O
only	O
two	O
kinds	O
of	O
responses	O
,	O
not	O
hundreds	O
of	O
them	O
.	O

I	O
also	O
understand	O
the	O
point	O
about	O
separating	O
concerns	O
.	O

Nevertheless	O
,	O
I	O
think	O
overriding	O
ListActivity.onListItemClick()	B-API
(	O
or	O
calling	O
ListView.setOnItemClickListener()	B-API
if	O
you	O
aren't	O
using	O
a	O
ListActivity	B-API
)	O
would	O
be	O
cleaner	O
and	O
less	O
likely	O
to	O
interfere	O
with	O
the	O
operation	O
of	O
the	O
list	O
view	O
.	O

You	O
can	O
use	O
a	O
delegate	O
pattern	O
for	O
this	O
,	O
as	O
follows	O
.	O

Define	O
an	O
abstract	O
class	O
or	O
interface	O
:	O
@codeSnippetRemoved	O

Then	O
create	O
one	O
instance	O
of	O
an	O
object	O
that	O
implements	O
this	O
interface	O
for	O
each	O
type	O
of	O
row	O
data	O
(	O
not	O
one	O
instance	O
for	O
each	O
row	O
)	O
.	O

In	O
your	O
adapter	O
,	O
use	O
setTag	O
(	O
Object	O
)	O
to	O
initialize	O
the	O
tag	O
for	O
each	O
row	O
to	O
the	O
appropriate	O
MyClickHander	B-API
instance	O
.	O

In	O
your	O
ListActivity.onListItemClick()	B-API
override	O
,	O
use	O
this	O
logic	O
:	O
@codeSnippetRemoved	O
