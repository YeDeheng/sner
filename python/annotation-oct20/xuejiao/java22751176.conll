Changing	O
Object	O
initializer	O
/	O
constructor	O
depending	O
on	O
method	O
input	O

So	O
I	O
am	O
trying	O
to	O
avoid	O
using	O
duplicate	O
code	O
.	O

At	O
the	O
moment	O
I	O
have	O
several	O
lists	O
which	O
contain	O
Strings	O
;	O
one	O
list	O
is	O
called	O
"	O
images	O
"	O
and	O
the	O
other	O
"	O
videos	O
"	O
etc	O
.	O

These	O
lists	O
contain	O
the	O
properties	O
of	O
the	O
content	O
and	O
they	O
are	O
in	O
a	O
linked	O
list	O
because	O
that	O
information	O
was	O
read	O
from	O
a	O
text	O
file	O
.	O

I	O
am	O
trying	O
to	O
go	O
through	O
these	O
lists	O
and	O
create	O
image	O
/	O
video	O
objects	O
to	O
place	O
in	O
another	O
object	O
(	O
later	O
on	O
)	O
.	O

At	O
the	O
moment	O
I	O
have	O
a	O
method	O
@codeSnippetRemoved	O

inside	O
of	O
it	O
how	O
do	O
I	O
change	O
the	O
object	O
declarations	O
etc	O
depending	O
on	O
the	O
name	O
of	O
the	O
list	O
that	O
was	O
passed	O
through	O
.	O

For	O
example	O
:	O
If	O
I	O
call	O
the	O
method	O
with	O
the	O
image	O
list	O
:	O
@codeSnippetRemoved	O

I	O
want	O
the	O
function	O
to	O
create	O
image	O
objects	O
:	O
@codeSnippetRemoved	O

And	O
if	O
I	O
passed	O
Videos	O
list	O
:	O
@codeSnippetRemoved	O

I	O
want	O
the	O
function	O
to	O
create	O
video	O
objects	O
:	O
@codeSnippetRemoved	O

Sorry	O
if	O
this	O
is	O
worded	O
badly	O
,	O
I	O
find	O
it	O
hard	O
to	O
articulate	O
this	O
question	O
.	O

I	O
also	O
understand	O
the	O
the	O
concept	O
of	O
polymorphism	O
;	O
I	O
just	O
don't	O
see	O
it	O
viable	O
for	O
the	O
content	O
object	O
to	O
do	O
this	O
job	O
(	O
of	O
reading	O
the	O
string	O
etc	O
)	O
as	O
the	O
object	O
is	O
created	O
depending	O
the	O
contents	O
of	O
the	O
list	O
.	O

private	O
void	O
loadContent	O
(	O
List	O
String	O
content	O
,	O
int	O
contentType	O
)	O

You	O
could	O
pass	O
in	O
an	O
integer	O
as	O
an	O
id	O
for	O
the	O
type	O
of	O
media	O
you	O
are	O
giving	O
it	O
.	O

You	O
could	O
then	O
use	O
an	O
if	O
/	O
else	O
statement	O
do	O
only	O
do	O
certain	O
things	O
for	O
certain	O
content	O
types	O
.	O

You	O
brought	O
up	O
the	O
subject	O
of	O
Polymorphism	O
.	O

This	O
scenario	O
would	O
be	O
a	O
good	O
candidate	O
to	O
demonstrate	O
your	O
understanding	O
of	O
how	O
it	O
works	O
.	O

You	O
could	O
create	O
an	O
abstract	O
class	O
named	O
Media	O
and	O
have	O
one	O
method	O
defined	O
named	O
Render()	B-API
.	O

Then	O
extend	O
the	O
Media	O
class	O
to	O
two	O
subclasses	O
,	O
ImageMedia	B-API
and	O
VideoMedia	B-API
.	O

Where	O
each	O
subclass	O
extends	O
class	O
Media	O
,	O
they	O
should	O
override	O
the	O
method	O
Render()	B-API
with	O
their	O
own	O
implementation	O
of	O
how	O
to	O
render	O
the	O
content	O
.	O

In	O
the	O
end	O
you	O
can	O
just	O
have	O
a	O
List	O
of	O
type	O
Media	O
like	O
this	O
:	O
List	O
Media	O
and	O
iterate	O
over	O
it	O
while	O
calling	O
the	O
Render()	B-API
method	O
on	O
each	O
.	O

In	O
this	O
way	O
you	O
impose	O
polymorphic	O
behaviour	O
and	O
greatly	O
simplify	O
your	O
code	O
.	O
