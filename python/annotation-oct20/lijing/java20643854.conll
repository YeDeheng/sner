Accessing	O
views	O
from	O
superclass	O

I	O
am	O
trying	O
to	O
centralize	O
my	O
code	O
for	O
handling	O
navigation	O
drawers	O
into	O
a	O
superclass	O
that	O
all	O
activities	O
extend	O
.	O

The	O
super	O
class	O
itself	O
extends	O
Activity	O
but	O
I	O
can't	O
seem	O
to	O
figure	O
out	O
how	O
to	O
access	O
the	O
subclass	O
'	O
s	O
view	O
(	O
findviewbyid	O
returns	O
null	O
)	O
.	O

How	O
can	O
I	O
access	O
the	O
views	O
inflated	O
in	O
CheckinActivity	B-API
from	O
CommonCode	B-API
?	O

Superclass	O
oncreate	O
:	O
@codeSnippetRemoved	O

SubClass	B-API
@codeSnippetRemoved	O

What	O
I	O
do	O
is	O
have	O
seperate	O
XMLs	O
for	O
each	O
sub	O
activity	O
,	O
but	O
have	O
all	O
the	O
xml	B-Stan
ids	O
of	O
your	O
navigation	O
drawers	O
be	O
the	O
same	O
.	O

Next	O
,	O
when	O
you	O
start	O
any	O
subclass	O
of	O
your	O
extended	O
activity	O
,	O
pass	O
a	O
bundle	O
with	O
the	O
contextView	O
id	O
-	O
R.layout.MY_SUB_ACTIVITY	O
-	O
in	O
a	O
bundle	O
,	O
and	O
actually	O
set	O
the	O
content	O
view	O
for	O
each	O
sub	O
activity	O
from	O
within	O
your	O
super	O
class	O
.	O

Afterwards	O
,	O
you	O
can	O
use	O
findViewByID	O
to	O
find	O
your	O
drawers	O
,	O
set	O
them	O
up	O
in	O
the	O
super	O
class	O
,	O
and	O
then	O
just	O
handle	O
your	O
subclass	O
'	O
s	O
views	O
from	O
within	O
it	O
'	O
s	O
own	O
class	O
.	O

Your	O
views	O
are	O
likely	O
returning	O
null	O
,	O
because	O
your	O
running	O
your	O
super	O
class	O
'	O
s	O
onCreate	O
before	O
your	O
subclass	O
'	O
s	O
-	O
therefore	O
setContentView	O
hasn't	O
been	O
called	O
yet	O
(	O
so	O
findViewByID	O
won't	O
work	O
)	O

EDIT	O
:	O

Also	O
,	O
you	O
don't	O
HAVE	O
to	O
name	O
all	O
the	O
navigation	O
drawer	O
IDs	O
the	O
same	O
--	O
I	O
just	O
think	O
it	O
'	O
s	O
easier	O
to	O
use	O
an	O
include	O
tag	O
,	O
to	O
minimize	O
redundancy	O
in	O
your	O
xml	B-Stan
files	O
.	O

For	O
Example	O
:	O

Subclass	O
-	O
@codeSnippetRemoved	O

SuperClass	B-API
:	O
@codeSnippetRemoved	O
