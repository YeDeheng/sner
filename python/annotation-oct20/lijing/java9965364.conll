scope	O
of	O
the	O
mouse	O
adapter	O

I	O
am	O
wonder	O
what	O
the	O
scope	O
of	O
the	O
MouseAdapter	B-API
is	O
in	O
this	O
case	O
.	O

@codeSnippetRemoved	O

I	O
thought	O
the	O
MouseAdapter	B-API
has	O
access	O
to	O
the	O
variable	O
edit	O
because	O
the	O
newly	O
declared	O
MouseAdapter	B-API
is	O
an	O
inner	O
class	O
of	O
the	O
class	O
foo	O
.	O

However	O
,	O
it	O
can't	O
find	O
the	O
variable	O
edit	O
.	O

If	O
I	O
explicitly	O
declare	O
an	O
inner	O
class	O
and	O
implements	O
,	O
say	O
,	O
the	O
MouseAdapter	B-API
interface	O
or	O
whatever	O
,	O
it	O
can	O
detect	O
the	O
variable	O
edit	O
from	O
within	O
it.So	B-API
my	O
question	O
is	O
what	O
the	O
scope	O
the	O
new	O
MouseAdpater()	B-API
has	O
?	O

Besides	O
,	O
does	O
anyone	O
know	O
a	O
good	O
read	O
on	O
this	O
?	O

Thank	O
you	O
very	O
much	O
.	O

By	O
the	O
way	O
,	O
the	O
error	O
I	O
got	O
was	O
the	O
local	O
variable	O
was	O
accessed	O
from	O
an	O
inner	O
class	O
,	O
needs	O
to	O
declare	O
it	O
final	O

1	O
)	O
edit.getItem	B-API
(	O
0	O
)	O
returns	O
fist	O
JMenuItem	O
if	O
exist	O
,	O
otherwise	O
returns	O
IllegalArgumentException	B-API

2	O
)	O
this.edit.getItem	B-API
(	O
0	O
)	O
,	O
not	O
class	O
that	O
returns	O
members	O

3	O
)	O
edit.getItem	B-API
(	O
0	O
)	O
.addMouseListener	O
(	O
new	O
MouseAdapter()	B-API
{	O
is	O
contraproductive	O
,	O
becuase	O
JMenu	O
,	O
JMenuItem	O
has	O
implemented	O
MouseEvents	B-API
correctly	O
,	O
for	O
better	O
workaround	O
you	O
have	O
to	O
look	O
at	O
ButtonModel	B-API

4	O
)	O
there	O
no	O
reason	O
for	O
scope	O
of	O
the	O
mouse	O
adapter	O

5	O
)	O
for	O
listening	O
of	O
events	O
from	O
JMenu	O
(	O
not	O
JMenuItem	O
)	O
look	O
at	O
MenuListener	B-API

Your	O
anonymous	O
inner	O
class	O
does	O
exist	O
in	O
the	O
scope	O
of	O
it	O
'	O
s	O
parent	O
object	O
,	O
as	O
you	O
expect.Scope	B-API
is	O
not	O
the	O
problem	O
.	O

As	O
the	O
error	O
message	O
suggests	O
,	O
the	O
anonymous	O
inner	O
class	O
can	O
only	O
access	O
it	O
'	O
s	O
parent	O
'	O
s	O
"	O
edit	O
"	O
member	O
if	O
that	O
member	O
is	O
declared	O
final	O
.	O

So	O
,	O
change	O
@codeSnippetRemoved	O

to	O
@codeSnippetRemoved	O

and	O
it	O
should	O
work	O
.	O

To	O
answer	O
your	O
question	O
,	O
you	O
need	O
to	O
understand	O
the	O
basics	O
,	O
as	O
to	O
how	O
the	O
JVM	O
use	O
to	O
work.When	B-API
the	O
classes	O
are	O
compiled	O
which	O
contain	O
inner	O
classes	O
,	O
the	O
byte	O
code	O
which	O
gets	O
generated	O
does	O
not	O
actually	O
implement	O
inner	O
classes	O
as	O
a	O
class	O
within	O
a	O
class	O
.	O

WHY	O
THE	O
ERROR	O
:	O
The	O
local	O
variable	O
was	O
accessed	O
from	O
an	O
inner	O
class	O
,	O
needs	O
to	O
declare	O
it	O
final	O
@codeSnippetRemoved	O

When	O
you	O
compile	O
your	O
this	O
program	O
,	O
two	O
files	O
will	O
be	O
created	O
,	O
Foo.class	B-API
and	O
Foo$	O
1.class	O
.	O

So	O
now	O
your	O
problem	O
comes	O
,	O
since	O
the	O
Second	O
class	O
i.e.	O
foo$	O
1.class	O
doesn't	O
know	O
that	O
Variable	O
edit	O
is	O
present	O
inside	O
the	O
First	O
class	O
i.e.	O
foo.class	B-API
.	O

So	O
how	O
to	O
solve	O
this	O
problem	O
?	O

What	O
JVM	O
does	O
,	O
is	O
that	O
,	O
It	O
makes	O
a	O
requirement	O
for	O
the	O
developer	O
to	O
make	O
the	O
variable	O
of	O
an	O
outer	O
class	O
to	O
be	O
declared	O
as	O
final	O
.	O

Now	O
this	O
being	O
done	O
,	O
now	O
JVM	O
quietly	O
places	O
a	O
hidden	O
variable	O
with	O
the	O
name	O
val$edit	O
inside	O
the	O
2nd	O
compiled	O
class	O
file	O
,	O
here	O
is	O
the	O
output	O
as	O
got	O
from	O
javap	O

Ouput	O
for	O
foo.class	B-API
@codeSnippetRemoved	O

Now	O
since	O
,	O
edit	O
is	O
local	O
to	O
the	O
constructor	O
,	O
hence	O
the	O
output	O
as	O
above	O
.	O

@codeSnippetRemoved	O

The	O
Variable	O
val$edit	O
is	O
assigned	O
the	O
same	O
value	O
which	O
has	O
been	O
assigned	O
to	O
edit	O
since	O
now	O
the	O
compiler	O
knows	O
that	O
the	O
value	O
cannot	O
be	O
changed	O
as	O
it	O
has	O
been	O
declared	O
final	O
and	O
hence	O
it	O
works	O
this	O
time	O
.	O

Now	O
what	O
if	O
I	O
change	O
the	O
edit	O
Variable	O
from	O
being	O
Local	O
to	O
being	O
Instance	O
.	O

Now	O
the	O
object	O
of	O
the	O
class	O
knows	O
everything	O
about	O
this	O
variable	O
edit	O
,	O
if	O
it	O
gets	O
changed	O
.	O

So	O
changing	O
the	O
above	O
program	O
likewise	O
we	O
get	O
:	O
@codeSnippetRemoved	O

Here	O
in	O
this	O
case	O
,	O
we	O
are	O
not	O
suppose	O
to	O
declare	O
and	O
define	O
it	O
as	O
being	O
final	O
,	O
because	O
in	O
this	O
case	O
since	O
the	O
Variable	O
being	O
Local	O
to	O
the	O
whole	O
class	O
,	O
the	O
Variable	O
is	O
send	O
to	O
the	O
Inner	O
Class	O
along	O
with	O
the	O
Object	O
Reference	O
i.e.	O
this	O
@codeSnippetRemoved	O

Here	O
is	O
how	O
the	O
Variable	O
is	O
send	O
in	O
this	O
case	O
i.e.	O
this$0	O
:	O
@codeSnippetRemoved	O

Seems	O
like	O
that	O
the	O
interpretation	O
,	O
how	O
this	O
situation	O
works	O
,	O
according	O
to	O
me.Just	B-API
now	O
I	O
found	O
this	O
wonderful	O
explanation	O
on	O
the	O
internet	O
regarding	O
Mystery	O
of	O
Accessibility	O
in	O
Local	O
Inner	O
Classes	O
,	O
might	O
be	O
this	O
will	O
help	O
you	O
understand	O
the	O
situation	O
in	O
a	O
much	O
better	O
way	O
:-)	O
